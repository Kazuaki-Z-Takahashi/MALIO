/* Generated by Cython 0.29.22 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_22"
#define CYTHON_HEX_VERSION 0x001D16F0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__malio_cy__op_q_spherical_cy
#define __PYX_HAVE_API__malio_cy__op_q_spherical_cy
/* Early includes */
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <omp.h>
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "malio_cy/op_q_spherical_cy.pyx",
  "stringsource",
};
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/

/* "malio_cy_def.pxd":6
 * from libcpp.vector cimport vector
 * cimport openmp
 * ctypedef vector[double] dvec             # <<<<<<<<<<<<<<
 * ctypedef vector[dvec] dvec_vec
 * ctypedef vector[dvec_vec] dvec_vec_vec
 */
typedef std::vector<double>  __pyx_t_8malio_cy_12malio_cy_def_dvec;

/* "malio_cy_def.pxd":7
 * cimport openmp
 * ctypedef vector[double] dvec
 * ctypedef vector[dvec] dvec_vec             # <<<<<<<<<<<<<<
 * ctypedef vector[dvec_vec] dvec_vec_vec
 * ctypedef vector[int] ivec
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_dvec>  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec;

/* "malio_cy_def.pxd":8
 * ctypedef vector[double] dvec
 * ctypedef vector[dvec] dvec_vec
 * ctypedef vector[dvec_vec] dvec_vec_vec             # <<<<<<<<<<<<<<
 * ctypedef vector[int] ivec
 * ctypedef vector[ivec] ivec_vec
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_dvec_vec>  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec_vec;

/* "malio_cy_def.pxd":9
 * ctypedef vector[dvec] dvec_vec
 * ctypedef vector[dvec_vec] dvec_vec_vec
 * ctypedef vector[int] ivec             # <<<<<<<<<<<<<<
 * ctypedef vector[ivec] ivec_vec
 * ctypedef vector[double complex] cvec
 */
typedef std::vector<int>  __pyx_t_8malio_cy_12malio_cy_def_ivec;

/* "malio_cy_def.pxd":10
 * ctypedef vector[dvec_vec] dvec_vec_vec
 * ctypedef vector[int] ivec
 * ctypedef vector[ivec] ivec_vec             # <<<<<<<<<<<<<<
 * ctypedef vector[double complex] cvec
 * ctypedef vector[cvec] cvec_vec
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_ivec>  __pyx_t_8malio_cy_12malio_cy_def_ivec_vec;

/* "malio_cy_def.pxd":11
 * ctypedef vector[int] ivec
 * ctypedef vector[ivec] ivec_vec
 * ctypedef vector[double complex] cvec             # <<<<<<<<<<<<<<
 * ctypedef vector[cvec] cvec_vec
 */
typedef std::vector<__pyx_t_double_complex>  __pyx_t_8malio_cy_12malio_cy_def_cvec;

/* "malio_cy_def.pxd":12
 * ctypedef vector[ivec] ivec_vec
 * ctypedef vector[double complex] cvec
 * ctypedef vector[cvec] cvec_vec             # <<<<<<<<<<<<<<
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_cvec>  __pyx_t_8malio_cy_12malio_cy_def_cvec_vec;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_AddObjC(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* IncludeStringH.proto */
#include <string.h>

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* ToPy.proto */
#define __pyx_PyComplex_FromComplex(z)\
        PyComplex_FromDoubles((double)__Pyx_CREAL(z),\
                              (double)__Pyx_CIMAG(z))

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* FromPy.proto */
static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject*);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'cython' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'libc' */

/* Module declarations from 'libc.math' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'openmp' */

/* Module declarations from 'malio_cy.malio_cy_def' */

/* Module declarations from 'malio_cy.op_q_spherical_cy' */
static __pyx_t_double_complex __pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(int, int, double, double, int __pyx_skip_dispatch); /*proto*/
static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *); /*proto*/
static std::vector<std::vector<double> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(PyObject *); /*proto*/
static std::vector<int>  __pyx_convert_vector_from_py_int(PyObject *); /*proto*/
static std::vector<std::vector<int> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py___pyx_t_double_complex(const std::vector<__pyx_t_double_complex>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___(const std::vector<std::vector<double> >  &); /*proto*/
static CYTHON_INLINE PyObject *__Pyx_carray_to_py_double(double *, Py_ssize_t); /*proto*/
static CYTHON_INLINE PyObject *__Pyx_carray_to_tuple_double(double *, Py_ssize_t); /*proto*/
static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(const std::vector<std::vector<int> >  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec(const std::vector<__pyx_t_8malio_cy_12malio_cy_def_cvec>  &); /*proto*/
static int __Pyx_carray_from_py_double(PyObject *, double *, Py_ssize_t); /*proto*/
#define __Pyx_MODULE_NAME "malio_cy.op_q_spherical_cy"
extern int __pyx_module_is_main_malio_cy__op_q_spherical_cy;
int __pyx_module_is_main_malio_cy__op_q_spherical_cy = 0;

/* Implementation of 'malio_cy.op_q_spherical_cy' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_round;
static PyObject *__pyx_builtin_eval;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_OverflowError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_IndexError;
static const char __pyx_k_I[] = "I";
static const char __pyx_k_N[] = "N";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_q[] = "q";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_PI4[] = "PI4";
static const char __pyx_k_a_t[] = "a_t";
static const char __pyx_k_b_t[] = "b_t";
static const char __pyx_k_i_2[] = "i_2";
static const char __pyx_k_i_i[] = "i_i";
static const char __pyx_k_i_j[] = "i_j";
static const char __pyx_k_i_k[] = "i_k";
static const char __pyx_k_map[] = "map";
static const char __pyx_k_o_f[] = "o_f";
static const char __pyx_k_o_i[] = "o_i";
static const char __pyx_k_o_j[] = "o_j";
static const char __pyx_k_phi[] = "phi";
static const char __pyx_k_pol[] = "pol";
static const char __pyx_k_q_l[] = "q_l";
static const char __pyx_k_res[] = "res";
static const char __pyx_k_x_i[] = "x_i";
static const char __pyx_k_x_j[] = "x_j";
static const char __pyx_k_Pool[] = "Pool";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_comb[] = "comb";
static const char __pyx_k_comp[] = "comp";
static const char __pyx_k_dist[] = "dist";
static const char __pyx_k_eval[] = "eval";
static const char __pyx_k_func[] = "func";
static const char __pyx_k_ii_j[] = "ii_j";
static const char __pyx_k_inei[] = "inei";
static const char __pyx_k_lock[] = "lock";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_real[] = "real";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_Array[] = "Array";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_coord[] = "coord";
static const char __pyx_k_cpart[] = "cpart";
static const char __pyx_k_delta[] = "delta";
static const char __pyx_k_dpart[] = "dpart";
static const char __pyx_k_l_sph[] = "l_sph";
static const char __pyx_k_len_c[] = "len_c";
static const char __pyx_k_m_sph[] = "m_sph";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_oi_oj[] = "oi_oj";
static const char __pyx_k_q_val[] = "q_val";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_round[] = "round";
static const char __pyx_k_theta[] = "theta";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_b_in_Q[] = "b_in_Q";
static const char __pyx_k_calc_q[] = "calc_q";
static const char __pyx_k_dcoord[] = "dcoord";
static const char __pyx_k_direct[] = "direct";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_l_in_Q[] = "l_in_Q";
static const char __pyx_k_l_list[] = "l_list";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_naming[] = "naming";
static const char __pyx_k_p_fact[] = "p_fact";
static const char __pyx_k_p_in_Q[] = "p_in_Q";
static const char __pyx_k_p_list[] = "p_list";
static const char __pyx_k_q_func[] = "q_func";
static const char __pyx_k_q_temp[] = "q_temp";
static const char __pyx_k_string[] = "string";
static const char __pyx_k_a_times[] = "a_times";
static const char __pyx_k_b_times[] = "b_times";
static const char __pyx_k_ddirect[] = "ddirect";
static const char __pyx_k_misc_cy[] = "misc_cy";
static const char __pyx_k_op_data[] = "op_data";
static const char __pyx_k_q_value[] = "q_value";
static const char __pyx_k_setting[] = "setting";
static const char __pyx_k_sphharm[] = "sphharm";
static const char __pyx_k_coord_1d[] = "coord_1d";
static const char __pyx_k_l_sph2p1[] = "l_sph2p1";
static const char __pyx_k_name_old[] = "name_old";
static const char __pyx_k_now_pool[] = "now_pool";
static const char __pyx_k_o_factor[] = "o_factor";
static const char __pyx_k_p_weight[] = "p_weight";
static const char __pyx_k_sph_harm[] = "_sph_harm";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_ave_times[] = "ave_times";
static const char __pyx_k_conjugate[] = "conjugate";
static const char __pyx_k_direct_1d[] = "direct_1d";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_part_temp[] = "part_temp";
static const char __pyx_k_sum_norm2[] = "sum_norm2";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_box_length[] = "box_length";
static const char __pyx_k_calc_delta[] = "calc_delta";
static const char __pyx_k_sph_harm_2[] = "sph_harm";
static const char __pyx_k_thread_num[] = "thread_num";
static const char __pyx_k_dbox_length[] = "dbox_length";
static const char __pyx_k_q_func_temp[] = "q_func_temp";
static const char __pyx_k_inv_l_sph2p1[] = "inv_l_sph2p1";
static const char __pyx_k_v_neighb_ave[] = "v_neighb_ave";
static const char __pyx_k_OverflowError[] = "OverflowError";
static const char __pyx_k_func_to_value[] = "func_to_value";
static const char __pyx_k_neighbor_list[] = "neighbor_list";
static const char __pyx_k_scipy_special[] = "scipy.special";
static const char __pyx_k_calc_q_wrapper[] = "calc_q_wrapper";
static const char __pyx_k_ineighbor_list[] = "ineighbor_list";
static const char __pyx_k_oi_list_not_oi[] = "oi_list_not_oi";
static const char __pyx_k_multiprocessing[] = "multiprocessing";
static const char __pyx_k_q_func_name_old[] = "q_func_name_old";
static const char __pyx_k_neighbor_list_ii[] = "neighbor_list_ii";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_l_neighbor_list_ii[] = "l_neighbor_list_ii";
static const char __pyx_k_l_q_func_name_old_0[] = "l_q_func_name_old_0";
static const char __pyx_k_calc_head_coordinate[] = "calc_head_coordinate";
static const char __pyx_k_convert_3dim_to_1dim[] = "convert_3dim_to_1dim";
static const char __pyx_k_convert_to_theta_phi[] = "convert_to_theta_phi";
static const char __pyx_k_cl_neighbor_list_ii_1[] = "cl_neighbor_list_ii_1";
static const char __pyx_k_dl_neighbor_list_ii_1[] = "dl_neighbor_list_ii_1";
static const char __pyx_k_spherical_order_parameter[] = "spherical_order_parameter";
static const char __pyx_k_malio_cy_op_q_spherical_cy[] = "malio_cy.op_q_spherical_cy";
static const char __pyx_k_spherical_order_parameter_org[] = "spherical_order_parameter_org";
static const char __pyx_k_data_num_name_to_data_name_num[] = "data_num_name_to_data_name_num";
static const char __pyx_k_malio_cy_op_q_spherical_cy_pyx[] = "malio_cy/op_q_spherical_cy.pyx";
static const char __pyx_k_bad_argument_for_spherical_harmo[] = "bad argument for spherical harmonics";
static PyObject *__pyx_n_s_Array;
static PyObject *__pyx_n_s_I;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_n_s_N;
static PyObject *__pyx_n_s_OverflowError;
static PyObject *__pyx_n_s_PI4;
static PyObject *__pyx_n_s_Pool;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_a_t;
static PyObject *__pyx_n_s_a_times;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_ave_times;
static PyObject *__pyx_n_s_b_in_Q;
static PyObject *__pyx_n_s_b_t;
static PyObject *__pyx_n_s_b_times;
static PyObject *__pyx_kp_s_bad_argument_for_spherical_harmo;
static PyObject *__pyx_n_s_box_length;
static PyObject *__pyx_n_s_calc_delta;
static PyObject *__pyx_n_s_calc_head_coordinate;
static PyObject *__pyx_n_s_calc_q;
static PyObject *__pyx_n_s_calc_q_wrapper;
static PyObject *__pyx_n_s_cl_neighbor_list_ii_1;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_comb;
static PyObject *__pyx_n_s_comp;
static PyObject *__pyx_n_s_conjugate;
static PyObject *__pyx_n_s_convert_3dim_to_1dim;
static PyObject *__pyx_n_s_convert_to_theta_phi;
static PyObject *__pyx_n_s_coord;
static PyObject *__pyx_n_s_coord_1d;
static PyObject *__pyx_n_s_cpart;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_data_num_name_to_data_name_num;
static PyObject *__pyx_n_s_dbox_length;
static PyObject *__pyx_n_s_dcoord;
static PyObject *__pyx_n_s_ddirect;
static PyObject *__pyx_n_s_delta;
static PyObject *__pyx_n_s_direct;
static PyObject *__pyx_n_s_direct_1d;
static PyObject *__pyx_n_s_dist;
static PyObject *__pyx_n_s_dl_neighbor_list_ii_1;
static PyObject *__pyx_n_s_dpart;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_eval;
static PyObject *__pyx_n_s_func;
static PyObject *__pyx_n_s_func_to_value;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_i_2;
static PyObject *__pyx_n_s_i_i;
static PyObject *__pyx_n_s_i_j;
static PyObject *__pyx_n_s_i_k;
static PyObject *__pyx_n_s_ii_j;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_inei;
static PyObject *__pyx_n_s_ineighbor_list;
static PyObject *__pyx_n_s_inv_l_sph2p1;
static PyObject *__pyx_n_s_j;
static PyObject *__pyx_n_s_l_in_Q;
static PyObject *__pyx_n_s_l_list;
static PyObject *__pyx_n_s_l_neighbor_list_ii;
static PyObject *__pyx_n_s_l_q_func_name_old_0;
static PyObject *__pyx_n_s_l_sph;
static PyObject *__pyx_n_s_l_sph2p1;
static PyObject *__pyx_n_s_len_c;
static PyObject *__pyx_n_s_lock;
static PyObject *__pyx_n_s_m_sph;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_malio_cy_op_q_spherical_cy;
static PyObject *__pyx_kp_s_malio_cy_op_q_spherical_cy_pyx;
static PyObject *__pyx_n_s_map;
static PyObject *__pyx_n_s_misc_cy;
static PyObject *__pyx_n_s_multiprocessing;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_name_old;
static PyObject *__pyx_n_s_naming;
static PyObject *__pyx_n_s_neighbor_list;
static PyObject *__pyx_n_s_neighbor_list_ii;
static PyObject *__pyx_n_s_now_pool;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_o_f;
static PyObject *__pyx_n_s_o_factor;
static PyObject *__pyx_n_s_o_i;
static PyObject *__pyx_n_s_o_j;
static PyObject *__pyx_n_s_oi_list_not_oi;
static PyObject *__pyx_n_s_oi_oj;
static PyObject *__pyx_n_s_op_data;
static PyObject *__pyx_n_s_p_fact;
static PyObject *__pyx_n_s_p_in_Q;
static PyObject *__pyx_n_s_p_list;
static PyObject *__pyx_n_s_p_weight;
static PyObject *__pyx_n_s_part_temp;
static PyObject *__pyx_n_s_phi;
static PyObject *__pyx_n_s_pol;
static PyObject *__pyx_n_s_q;
static PyObject *__pyx_n_s_q_func;
static PyObject *__pyx_n_s_q_func_name_old;
static PyObject *__pyx_n_s_q_func_temp;
static PyObject *__pyx_n_s_q_l;
static PyObject *__pyx_n_s_q_temp;
static PyObject *__pyx_n_s_q_val;
static PyObject *__pyx_n_s_q_value;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_real;
static PyObject *__pyx_n_s_res;
static PyObject *__pyx_n_s_round;
static PyObject *__pyx_n_s_scipy_special;
static PyObject *__pyx_n_s_setting;
static PyObject *__pyx_n_s_sph_harm;
static PyObject *__pyx_n_s_sph_harm_2;
static PyObject *__pyx_n_s_spherical_order_parameter;
static PyObject *__pyx_n_s_spherical_order_parameter_org;
static PyObject *__pyx_n_s_sphharm;
static PyObject *__pyx_n_s_string;
static PyObject *__pyx_n_s_sum_norm2;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_theta;
static PyObject *__pyx_n_s_thread_num;
static PyObject *__pyx_n_s_v_neighb_ave;
static PyObject *__pyx_n_s_x_i;
static PyObject *__pyx_n_s_x_j;
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_sph_harm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_l_sph, PyObject *__pyx_v_m_sph, PyObject *__pyx_v_theta, PyObject *__pyx_v_phi); /* proto */
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_2sph_harm_cy(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_l_sph, int __pyx_v_m_sph, double __pyx_v_theta, double __pyx_v_phi); /* proto */
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_4calc_q(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_l_sph, PyObject *__pyx_v_theta, PyObject *__pyx_v_phi); /* proto */
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_6func_to_value(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_l_sph, PyObject *__pyx_v_func); /* proto */
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_8calc_q_wrapper(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_10spherical_order_parameter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, PyObject *__pyx_v_thread_num); /* proto */
static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_12spherical_order_parameter_org(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, PyObject *__pyx_v_thread_num); /* proto */
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_2_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_14;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_codeobj__2;
static PyObject *__pyx_codeobj__4;
static PyObject *__pyx_codeobj__6;
static PyObject *__pyx_codeobj__8;
static PyObject *__pyx_codeobj__10;
static PyObject *__pyx_codeobj__12;
/* Late includes */

/* "malio_cy/op_q_spherical_cy.pyx":12
 * 
 * 
 * def sph_harm(l_sph, m_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     return _sph_harm(m_sph, l_sph, phi, theta)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_1sph_harm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_17op_q_spherical_cy_1sph_harm = {"sph_harm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_17op_q_spherical_cy_1sph_harm, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_1sph_harm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_l_sph = 0;
  PyObject *__pyx_v_m_sph = 0;
  PyObject *__pyx_v_theta = 0;
  PyObject *__pyx_v_phi = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sph_harm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_l_sph,&__pyx_n_s_m_sph,&__pyx_n_s_theta,&__pyx_n_s_phi,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_l_sph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m_sph)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sph_harm", 1, 4, 4, 1); __PYX_ERR(0, 12, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sph_harm", 1, 4, 4, 2); __PYX_ERR(0, 12, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sph_harm", 1, 4, 4, 3); __PYX_ERR(0, 12, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sph_harm") < 0)) __PYX_ERR(0, 12, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_l_sph = values[0];
    __pyx_v_m_sph = values[1];
    __pyx_v_theta = values[2];
    __pyx_v_phi = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sph_harm", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 12, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.sph_harm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_sph_harm(__pyx_self, __pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_sph_harm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_l_sph, PyObject *__pyx_v_m_sph, PyObject *__pyx_v_theta, PyObject *__pyx_v_phi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sph_harm", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":13
 * 
 * def sph_harm(l_sph, m_sph, theta, phi):
 *     return _sph_harm(m_sph, l_sph, phi, theta)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sph_harm); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_3, __pyx_v_m_sph, __pyx_v_l_sph, __pyx_v_phi, __pyx_v_theta};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 4+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_3, __pyx_v_m_sph, __pyx_v_l_sph, __pyx_v_phi, __pyx_v_theta};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 4+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(4+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_m_sph);
    __Pyx_GIVEREF(__pyx_v_m_sph);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_m_sph);
    __Pyx_INCREF(__pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_v_l_sph);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_l_sph);
    __Pyx_INCREF(__pyx_v_phi);
    __Pyx_GIVEREF(__pyx_v_phi);
    PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, __pyx_v_phi);
    __Pyx_INCREF(__pyx_v_theta);
    __Pyx_GIVEREF(__pyx_v_theta);
    PyTuple_SET_ITEM(__pyx_t_5, 3+__pyx_t_4, __pyx_v_theta);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "malio_cy/op_q_spherical_cy.pyx":12
 * 
 * 
 * def sph_harm(l_sph, m_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     return _sph_harm(m_sph, l_sph, phi, theta)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.sph_harm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_q_spherical_cy.pyx":18
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * cpdef double complex sph_harm_cy(int l_sph, int m_sph, double theta, double phi):             # <<<<<<<<<<<<<<
 *     cdef:
 *         double PI = math.acos(-1.0)
 */

static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_3sph_harm_cy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static __pyx_t_double_complex __pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(int __pyx_v_l_sph, int __pyx_v_m_sph, double __pyx_v_theta, double __pyx_v_phi, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_v_PI;
  double __pyx_v_cosmphi;
  double __pyx_v_sinmphi;
  double __pyx_v_x;
  int __pyx_v_l;
  int __pyx_v_m;
  CYTHON_UNUSED int __pyx_v_i;
  int __pyx_v_ll;
  double __pyx_v_fact;
  double __pyx_v_oldfact;
  double __pyx_v_pll;
  double __pyx_v_pmm;
  double __pyx_v_pmmp1;
  double __pyx_v_omx2;
  __pyx_t_double_complex __pyx_v_I;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  long __pyx_t_4;
  long __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sph_harm_cy", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":20
 * cpdef double complex sph_harm_cy(int l_sph, int m_sph, double theta, double phi):
 *     cdef:
 *         double PI = math.acos(-1.0)             # <<<<<<<<<<<<<<
 *         double cosmphi = math.cos(phi*<double>m_sph)
 *         double sinmphi = math.sin(phi*<double>m_sph)
 */
  __pyx_v_PI = acos(-1.0);

  /* "malio_cy/op_q_spherical_cy.pyx":21
 *     cdef:
 *         double PI = math.acos(-1.0)
 *         double cosmphi = math.cos(phi*<double>m_sph)             # <<<<<<<<<<<<<<
 *         double sinmphi = math.sin(phi*<double>m_sph)
 *         double x = math.cos(theta)
 */
  __pyx_v_cosmphi = cos((__pyx_v_phi * ((double)__pyx_v_m_sph)));

  /* "malio_cy/op_q_spherical_cy.pyx":22
 *         double PI = math.acos(-1.0)
 *         double cosmphi = math.cos(phi*<double>m_sph)
 *         double sinmphi = math.sin(phi*<double>m_sph)             # <<<<<<<<<<<<<<
 *         double x = math.cos(theta)
 *         int l = l_sph
 */
  __pyx_v_sinmphi = sin((__pyx_v_phi * ((double)__pyx_v_m_sph)));

  /* "malio_cy/op_q_spherical_cy.pyx":23
 *         double cosmphi = math.cos(phi*<double>m_sph)
 *         double sinmphi = math.sin(phi*<double>m_sph)
 *         double x = math.cos(theta)             # <<<<<<<<<<<<<<
 *         int l = l_sph
 *         int m = abs(m_sph)
 */
  __pyx_v_x = cos(__pyx_v_theta);

  /* "malio_cy/op_q_spherical_cy.pyx":24
 *         double sinmphi = math.sin(phi*<double>m_sph)
 *         double x = math.cos(theta)
 *         int l = l_sph             # <<<<<<<<<<<<<<
 *         int m = abs(m_sph)
 *         int i,ll
 */
  __pyx_v_l = __pyx_v_l_sph;

  /* "malio_cy/op_q_spherical_cy.pyx":25
 *         double x = math.cos(theta)
 *         int l = l_sph
 *         int m = abs(m_sph)             # <<<<<<<<<<<<<<
 *         int i,ll
 *         double fact,oldfact,pll,pmm,pmmp1,omx2
 */
  __pyx_t_1 = abs(__pyx_v_m_sph); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 25, __pyx_L1_error)
  __pyx_v_m = __pyx_t_1;

  /* "malio_cy/op_q_spherical_cy.pyx":28
 *         int i,ll
 *         double fact,oldfact,pll,pmm,pmmp1,omx2
 *         double complex I = 1j             # <<<<<<<<<<<<<<
 *     assert m >= 0 or m <= l or math.fabs(x) < 1.0, "bad argument for spherical harmonics"
 *     pmm=1.0
 */
  __pyx_v_I = __pyx_t_double_complex_from_parts(0, 1.0);

  /* "malio_cy/op_q_spherical_cy.pyx":29
 *         double fact,oldfact,pll,pmm,pmmp1,omx2
 *         double complex I = 1j
 *     assert m >= 0 or m <= l or math.fabs(x) < 1.0, "bad argument for spherical harmonics"             # <<<<<<<<<<<<<<
 *     pmm=1.0
 *     if (m > 0):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_3 = ((__pyx_v_m >= 0) != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_2 = __pyx_t_3;
      goto __pyx_L3_bool_binop_done;
    }
    __pyx_t_3 = ((__pyx_v_m <= __pyx_v_l) != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_2 = __pyx_t_3;
      goto __pyx_L3_bool_binop_done;
    }
    __pyx_t_3 = ((fabs(__pyx_v_x) < 1.0) != 0);
    __pyx_t_2 = __pyx_t_3;
    __pyx_L3_bool_binop_done:;
    if (unlikely(!__pyx_t_2)) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_bad_argument_for_spherical_harmo);
      __PYX_ERR(0, 29, __pyx_L1_error)
    }
  }
  #endif

  /* "malio_cy/op_q_spherical_cy.pyx":30
 *         double complex I = 1j
 *     assert m >= 0 or m <= l or math.fabs(x) < 1.0, "bad argument for spherical harmonics"
 *     pmm=1.0             # <<<<<<<<<<<<<<
 *     if (m > 0):
 *         omx2=(1.0-x)*(1.0+x)
 */
  __pyx_v_pmm = 1.0;

  /* "malio_cy/op_q_spherical_cy.pyx":31
 *     assert m >= 0 or m <= l or math.fabs(x) < 1.0, "bad argument for spherical harmonics"
 *     pmm=1.0
 *     if (m > 0):             # <<<<<<<<<<<<<<
 *         omx2=(1.0-x)*(1.0+x)
 *         fact=1.0
 */
  __pyx_t_2 = ((__pyx_v_m > 0) != 0);
  if (__pyx_t_2) {

    /* "malio_cy/op_q_spherical_cy.pyx":32
 *     pmm=1.0
 *     if (m > 0):
 *         omx2=(1.0-x)*(1.0+x)             # <<<<<<<<<<<<<<
 *         fact=1.0
 *         for i in range(1,m+1):
 */
    __pyx_v_omx2 = ((1.0 - __pyx_v_x) * (1.0 + __pyx_v_x));

    /* "malio_cy/op_q_spherical_cy.pyx":33
 *     if (m > 0):
 *         omx2=(1.0-x)*(1.0+x)
 *         fact=1.0             # <<<<<<<<<<<<<<
 *         for i in range(1,m+1):
 *             pmm *= omx2*fact/(fact+1.0)
 */
    __pyx_v_fact = 1.0;

    /* "malio_cy/op_q_spherical_cy.pyx":34
 *         omx2=(1.0-x)*(1.0+x)
 *         fact=1.0
 *         for i in range(1,m+1):             # <<<<<<<<<<<<<<
 *             pmm *= omx2*fact/(fact+1.0)
 *             fact += 2.0
 */
    __pyx_t_4 = (__pyx_v_m + 1);
    __pyx_t_5 = __pyx_t_4;
    for (__pyx_t_1 = 1; __pyx_t_1 < __pyx_t_5; __pyx_t_1+=1) {
      __pyx_v_i = __pyx_t_1;

      /* "malio_cy/op_q_spherical_cy.pyx":35
 *         fact=1.0
 *         for i in range(1,m+1):
 *             pmm *= omx2*fact/(fact+1.0)             # <<<<<<<<<<<<<<
 *             fact += 2.0
 * 
 */
      __pyx_v_pmm = (__pyx_v_pmm * ((__pyx_v_omx2 * __pyx_v_fact) / (__pyx_v_fact + 1.0)));

      /* "malio_cy/op_q_spherical_cy.pyx":36
 *         for i in range(1,m+1):
 *             pmm *= omx2*fact/(fact+1.0)
 *             fact += 2.0             # <<<<<<<<<<<<<<
 * 
 *     pmm=math.sqrt((2*m+1)*pmm/(4.0*PI))
 */
      __pyx_v_fact = (__pyx_v_fact + 2.0);
    }

    /* "malio_cy/op_q_spherical_cy.pyx":31
 *     assert m >= 0 or m <= l or math.fabs(x) < 1.0, "bad argument for spherical harmonics"
 *     pmm=1.0
 *     if (m > 0):             # <<<<<<<<<<<<<<
 *         omx2=(1.0-x)*(1.0+x)
 *         fact=1.0
 */
  }

  /* "malio_cy/op_q_spherical_cy.pyx":38
 *             fact += 2.0
 * 
 *     pmm=math.sqrt((2*m+1)*pmm/(4.0*PI))             # <<<<<<<<<<<<<<
 *     if (m & 1):
 *         pmm=-pmm
 */
  __pyx_v_pmm = sqrt(((((2 * __pyx_v_m) + 1) * __pyx_v_pmm) / (4.0 * __pyx_v_PI)));

  /* "malio_cy/op_q_spherical_cy.pyx":39
 * 
 *     pmm=math.sqrt((2*m+1)*pmm/(4.0*PI))
 *     if (m & 1):             # <<<<<<<<<<<<<<
 *         pmm=-pmm
 *     if (l == m):
 */
  __pyx_t_2 = ((__pyx_v_m & 1) != 0);
  if (__pyx_t_2) {

    /* "malio_cy/op_q_spherical_cy.pyx":40
 *     pmm=math.sqrt((2*m+1)*pmm/(4.0*PI))
 *     if (m & 1):
 *         pmm=-pmm             # <<<<<<<<<<<<<<
 *     if (l == m):
 *         return pmm*(cosmphi+I*sinmphi)
 */
    __pyx_v_pmm = (-__pyx_v_pmm);

    /* "malio_cy/op_q_spherical_cy.pyx":39
 * 
 *     pmm=math.sqrt((2*m+1)*pmm/(4.0*PI))
 *     if (m & 1):             # <<<<<<<<<<<<<<
 *         pmm=-pmm
 *     if (l == m):
 */
  }

  /* "malio_cy/op_q_spherical_cy.pyx":41
 *     if (m & 1):
 *         pmm=-pmm
 *     if (l == m):             # <<<<<<<<<<<<<<
 *         return pmm*(cosmphi+I*sinmphi)
 *     else:
 */
  __pyx_t_2 = ((__pyx_v_l == __pyx_v_m) != 0);
  if (__pyx_t_2) {

    /* "malio_cy/op_q_spherical_cy.pyx":42
 *         pmm=-pmm
 *     if (l == m):
 *         return pmm*(cosmphi+I*sinmphi)             # <<<<<<<<<<<<<<
 *     else:
 *         pmmp1=x*math.sqrt(2.0*m+3.0)*pmm
 */
    __pyx_r = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_pmm, 0), __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__pyx_v_cosmphi, 0), __Pyx_c_prod_double(__pyx_v_I, __pyx_t_double_complex_from_parts(__pyx_v_sinmphi, 0))));
    goto __pyx_L0;

    /* "malio_cy/op_q_spherical_cy.pyx":41
 *     if (m & 1):
 *         pmm=-pmm
 *     if (l == m):             # <<<<<<<<<<<<<<
 *         return pmm*(cosmphi+I*sinmphi)
 *     else:
 */
  }

  /* "malio_cy/op_q_spherical_cy.pyx":44
 *         return pmm*(cosmphi+I*sinmphi)
 *     else:
 *         pmmp1=x*math.sqrt(2.0*m+3.0)*pmm             # <<<<<<<<<<<<<<
 *         if (l == (m+1)):
 *             return pmmp1*(cosmphi+I*sinmphi)
 */
  /*else*/ {
    __pyx_v_pmmp1 = ((__pyx_v_x * sqrt(((2.0 * __pyx_v_m) + 3.0))) * __pyx_v_pmm);

    /* "malio_cy/op_q_spherical_cy.pyx":45
 *     else:
 *         pmmp1=x*math.sqrt(2.0*m+3.0)*pmm
 *         if (l == (m+1)):             # <<<<<<<<<<<<<<
 *             return pmmp1*(cosmphi+I*sinmphi)
 *         else:
 */
    __pyx_t_2 = ((__pyx_v_l == (__pyx_v_m + 1)) != 0);
    if (__pyx_t_2) {

      /* "malio_cy/op_q_spherical_cy.pyx":46
 *         pmmp1=x*math.sqrt(2.0*m+3.0)*pmm
 *         if (l == (m+1)):
 *             return pmmp1*(cosmphi+I*sinmphi)             # <<<<<<<<<<<<<<
 *         else:
 *             oldfact=math.sqrt(2.0*m+3.0)
 */
      __pyx_r = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_pmmp1, 0), __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__pyx_v_cosmphi, 0), __Pyx_c_prod_double(__pyx_v_I, __pyx_t_double_complex_from_parts(__pyx_v_sinmphi, 0))));
      goto __pyx_L0;

      /* "malio_cy/op_q_spherical_cy.pyx":45
 *     else:
 *         pmmp1=x*math.sqrt(2.0*m+3.0)*pmm
 *         if (l == (m+1)):             # <<<<<<<<<<<<<<
 *             return pmmp1*(cosmphi+I*sinmphi)
 *         else:
 */
    }

    /* "malio_cy/op_q_spherical_cy.pyx":48
 *             return pmmp1*(cosmphi+I*sinmphi)
 *         else:
 *             oldfact=math.sqrt(2.0*m+3.0)             # <<<<<<<<<<<<<<
 *             for ll in range(m+2,l+1):
 *                 fact=math.sqrt((4.0*ll*ll-1.0)/(ll*ll-m*m))
 */
    /*else*/ {
      __pyx_v_oldfact = sqrt(((2.0 * __pyx_v_m) + 3.0));

      /* "malio_cy/op_q_spherical_cy.pyx":49
 *         else:
 *             oldfact=math.sqrt(2.0*m+3.0)
 *             for ll in range(m+2,l+1):             # <<<<<<<<<<<<<<
 *                 fact=math.sqrt((4.0*ll*ll-1.0)/(ll*ll-m*m))
 *                 pll=(x*pmmp1-pmm/oldfact)*fact
 */
      __pyx_t_4 = (__pyx_v_l + 1);
      __pyx_t_5 = __pyx_t_4;
      for (__pyx_t_1 = (__pyx_v_m + 2); __pyx_t_1 < __pyx_t_5; __pyx_t_1+=1) {
        __pyx_v_ll = __pyx_t_1;

        /* "malio_cy/op_q_spherical_cy.pyx":50
 *             oldfact=math.sqrt(2.0*m+3.0)
 *             for ll in range(m+2,l+1):
 *                 fact=math.sqrt((4.0*ll*ll-1.0)/(ll*ll-m*m))             # <<<<<<<<<<<<<<
 *                 pll=(x*pmmp1-pmm/oldfact)*fact
 *                 oldfact=fact
 */
        __pyx_v_fact = sqrt(((((4.0 * __pyx_v_ll) * __pyx_v_ll) - 1.0) / ((__pyx_v_ll * __pyx_v_ll) - (__pyx_v_m * __pyx_v_m))));

        /* "malio_cy/op_q_spherical_cy.pyx":51
 *             for ll in range(m+2,l+1):
 *                 fact=math.sqrt((4.0*ll*ll-1.0)/(ll*ll-m*m))
 *                 pll=(x*pmmp1-pmm/oldfact)*fact             # <<<<<<<<<<<<<<
 *                 oldfact=fact
 *                 pmm=pmmp1
 */
        __pyx_v_pll = (((__pyx_v_x * __pyx_v_pmmp1) - (__pyx_v_pmm / __pyx_v_oldfact)) * __pyx_v_fact);

        /* "malio_cy/op_q_spherical_cy.pyx":52
 *                 fact=math.sqrt((4.0*ll*ll-1.0)/(ll*ll-m*m))
 *                 pll=(x*pmmp1-pmm/oldfact)*fact
 *                 oldfact=fact             # <<<<<<<<<<<<<<
 *                 pmm=pmmp1
 *                 pmmp1=pll
 */
        __pyx_v_oldfact = __pyx_v_fact;

        /* "malio_cy/op_q_spherical_cy.pyx":53
 *                 pll=(x*pmmp1-pmm/oldfact)*fact
 *                 oldfact=fact
 *                 pmm=pmmp1             # <<<<<<<<<<<<<<
 *                 pmmp1=pll
 *             return pll*(cosmphi+I*sinmphi)
 */
        __pyx_v_pmm = __pyx_v_pmmp1;

        /* "malio_cy/op_q_spherical_cy.pyx":54
 *                 oldfact=fact
 *                 pmm=pmmp1
 *                 pmmp1=pll             # <<<<<<<<<<<<<<
 *             return pll*(cosmphi+I*sinmphi)
 * 
 */
        __pyx_v_pmmp1 = __pyx_v_pll;
      }

      /* "malio_cy/op_q_spherical_cy.pyx":55
 *                 pmm=pmmp1
 *                 pmmp1=pll
 *             return pll*(cosmphi+I*sinmphi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_r = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_pll, 0), __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__pyx_v_cosmphi, 0), __Pyx_c_prod_double(__pyx_v_I, __pyx_t_double_complex_from_parts(__pyx_v_sinmphi, 0))));
      goto __pyx_L0;
    }
  }

  /* "malio_cy/op_q_spherical_cy.pyx":18
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * cpdef double complex sph_harm_cy(int l_sph, int m_sph, double theta, double phi):             # <<<<<<<<<<<<<<
 *     cdef:
 *         double PI = math.acos(-1.0)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("malio_cy.op_q_spherical_cy.sph_harm_cy", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_3sph_harm_cy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_3sph_harm_cy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_l_sph;
  int __pyx_v_m_sph;
  double __pyx_v_theta;
  double __pyx_v_phi;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sph_harm_cy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_l_sph,&__pyx_n_s_m_sph,&__pyx_n_s_theta,&__pyx_n_s_phi,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_l_sph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m_sph)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sph_harm_cy", 1, 4, 4, 1); __PYX_ERR(0, 18, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sph_harm_cy", 1, 4, 4, 2); __PYX_ERR(0, 18, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sph_harm_cy", 1, 4, 4, 3); __PYX_ERR(0, 18, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sph_harm_cy") < 0)) __PYX_ERR(0, 18, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_l_sph = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_l_sph == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)
    __pyx_v_m_sph = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m_sph == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)
    __pyx_v_phi = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_phi == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sph_harm_cy", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 18, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.sph_harm_cy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_2sph_harm_cy(__pyx_self, __pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_2sph_harm_cy(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_l_sph, int __pyx_v_m_sph, double __pyx_v_theta, double __pyx_v_phi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sph_harm_cy", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(__pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi, 0);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.sph_harm_cy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_q_spherical_cy.pyx":58
 * 
 * 
 * def calc_q(l_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_5calc_q(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_17op_q_spherical_cy_5calc_q = {"calc_q", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_17op_q_spherical_cy_5calc_q, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_5calc_q(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_l_sph = 0;
  PyObject *__pyx_v_theta = 0;
  PyObject *__pyx_v_phi = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_q (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_l_sph,&__pyx_n_s_theta,&__pyx_n_s_phi,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_l_sph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calc_q", 1, 3, 3, 1); __PYX_ERR(0, 58, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calc_q", 1, 3, 3, 2); __PYX_ERR(0, 58, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "calc_q") < 0)) __PYX_ERR(0, 58, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_l_sph = values[0];
    __pyx_v_theta = values[1];
    __pyx_v_phi = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_q", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 58, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.calc_q", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_4calc_q(__pyx_self, __pyx_v_l_sph, __pyx_v_theta, __pyx_v_phi);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_4calc_q(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_l_sph, PyObject *__pyx_v_theta, PyObject *__pyx_v_phi) {
  PyObject *__pyx_v_q_l = NULL;
  PyObject *__pyx_v_m_sph = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calc_q", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":59
 * 
 * def calc_q(l_sph, theta, phi):
 *     q_l = [0 for i in range(2 * l_sph + 1)]             # <<<<<<<<<<<<<<
 *     for m_sph in range(l_sph + 1):
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_int_2, __pyx_v_l_sph); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 59, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 59, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 59, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_5(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 59, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_int_0))) __PYX_ERR(0, 59, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_q_l = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":60
 * def calc_q(l_sph, theta, phi):
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):             # <<<<<<<<<<<<<<
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)
 *     for m_sph in range(-l_sph, 0):
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_l_sph, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 60, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 60, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 60, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 60, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 60, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 60, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_5(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 60, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_m_sph, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":61
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)             # <<<<<<<<<<<<<<
 *     for m_sph in range(-l_sph, 0):
 *         q_l[m_sph] = ((-1)**m_sph) * np.conjugate(sph_harm(l_sph, m_sph, theta, phi))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sph_harm_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[5] = {__pyx_t_6, __pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 4+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[5] = {__pyx_t_6, __pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 4+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(4+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 61, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_v_l_sph);
      __Pyx_GIVEREF(__pyx_v_l_sph);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_l_sph);
      __Pyx_INCREF(__pyx_v_m_sph);
      __Pyx_GIVEREF(__pyx_v_m_sph);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_m_sph);
      __Pyx_INCREF(__pyx_v_theta);
      __Pyx_GIVEREF(__pyx_v_theta);
      PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_v_theta);
      __Pyx_INCREF(__pyx_v_phi);
      __Pyx_GIVEREF(__pyx_v_phi);
      PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_7, __pyx_v_phi);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_q_l, __pyx_v_m_sph, __pyx_t_3) < 0)) __PYX_ERR(0, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":60
 * def calc_q(l_sph, theta, phi):
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):             # <<<<<<<<<<<<<<
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)
 *     for m_sph in range(-l_sph, 0):
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":62
 *     for m_sph in range(l_sph + 1):
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)
 *     for m_sph in range(-l_sph, 0):             # <<<<<<<<<<<<<<
 *         q_l[m_sph] = ((-1)**m_sph) * np.conjugate(sph_harm(l_sph, m_sph, theta, phi))
 *     return q_l
 */
  __pyx_t_1 = PyNumber_Negative(__pyx_v_l_sph); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_0);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 62, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 62, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 62, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_3);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 62, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_m_sph, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":63
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)
 *     for m_sph in range(-l_sph, 0):
 *         q_l[m_sph] = ((-1)**m_sph) * np.conjugate(sph_harm(l_sph, m_sph, theta, phi))             # <<<<<<<<<<<<<<
 *     return q_l
 * 
 */
    __pyx_t_1 = PyNumber_Power(__pyx_int_neg_1, __pyx_v_m_sph, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_conjugate); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_sph_harm_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_9)) {
      PyObject *__pyx_temp[5] = {__pyx_t_10, __pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi};
      __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_7, 4+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 63, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GOTREF(__pyx_t_8);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
      PyObject *__pyx_temp[5] = {__pyx_t_10, __pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi};
      __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_7, 4+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 63, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GOTREF(__pyx_t_8);
    } else
    #endif
    {
      __pyx_t_11 = PyTuple_New(4+__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 63, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_10) {
        __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10); __pyx_t_10 = NULL;
      }
      __Pyx_INCREF(__pyx_v_l_sph);
      __Pyx_GIVEREF(__pyx_v_l_sph);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_7, __pyx_v_l_sph);
      __Pyx_INCREF(__pyx_v_m_sph);
      __Pyx_GIVEREF(__pyx_v_m_sph);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_7, __pyx_v_m_sph);
      __Pyx_INCREF(__pyx_v_theta);
      __Pyx_GIVEREF(__pyx_v_theta);
      PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_7, __pyx_v_theta);
      __Pyx_INCREF(__pyx_v_phi);
      __Pyx_GIVEREF(__pyx_v_phi);
      PyTuple_SET_ITEM(__pyx_t_11, 3+__pyx_t_7, __pyx_v_phi);
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_11, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 63, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_9, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_q_l, __pyx_v_m_sph, __pyx_t_6) < 0)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":62
 *     for m_sph in range(l_sph + 1):
 *         q_l[m_sph] = sph_harm(l_sph, m_sph, theta, phi)
 *     for m_sph in range(-l_sph, 0):             # <<<<<<<<<<<<<<
 *         q_l[m_sph] = ((-1)**m_sph) * np.conjugate(sph_harm(l_sph, m_sph, theta, phi))
 *     return q_l
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":64
 *     for m_sph in range(-l_sph, 0):
 *         q_l[m_sph] = ((-1)**m_sph) * np.conjugate(sph_harm(l_sph, m_sph, theta, phi))
 *     return q_l             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_q_l);
  __pyx_r = __pyx_v_q_l;
  goto __pyx_L0;

  /* "malio_cy/op_q_spherical_cy.pyx":58
 * 
 * 
 * def calc_q(l_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.calc_q", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_q_l);
  __Pyx_XDECREF(__pyx_v_m_sph);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_q_spherical_cy.pyx":67
 * 
 * 
 * def func_to_value(l_sph, func):             # <<<<<<<<<<<<<<
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_7func_to_value(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_17op_q_spherical_cy_7func_to_value = {"func_to_value", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_17op_q_spherical_cy_7func_to_value, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_7func_to_value(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_l_sph = 0;
  PyObject *__pyx_v_func = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("func_to_value (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_l_sph,&__pyx_n_s_func,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_l_sph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_func)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("func_to_value", 1, 2, 2, 1); __PYX_ERR(0, 67, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "func_to_value") < 0)) __PYX_ERR(0, 67, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_l_sph = values[0];
    __pyx_v_func = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("func_to_value", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 67, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.func_to_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_6func_to_value(__pyx_self, __pyx_v_l_sph, __pyx_v_func);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_6func_to_value(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_l_sph, PyObject *__pyx_v_func) {
  PyObject *__pyx_v_sum_norm2 = NULL;
  PyObject *__pyx_v_i_j = NULL;
  PyObject *__pyx_v_comp = NULL;
  double __pyx_v_q_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  double __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("func_to_value", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":68
 * 
 * def func_to_value(l_sph, func):
 *     sum_norm2 = 0.0             # <<<<<<<<<<<<<<
 *     for i_j in range(2 * l_sph + 1):
 *         comp = func[i_j]
 */
  __Pyx_INCREF(__pyx_float_0_0);
  __pyx_v_sum_norm2 = __pyx_float_0_0;

  /* "malio_cy/op_q_spherical_cy.pyx":69
 * def func_to_value(l_sph, func):
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *         comp = func[i_j]
 *         sum_norm2 += np.real(comp * np.conjugate(comp))
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_int_2, __pyx_v_l_sph); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 69, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 69, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 69, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 69, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i_j, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":70
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):
 *         comp = func[i_j]             # <<<<<<<<<<<<<<
 *         sum_norm2 += np.real(comp * np.conjugate(comp))
 *     q_value = math.sqrt(sum_norm2 * (4.0 * math.pi) / (2.0 * l_sph + 1.0))
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_func, __pyx_v_i_j); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_comp, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":71
 *     for i_j in range(2 * l_sph + 1):
 *         comp = func[i_j]
 *         sum_norm2 += np.real(comp * np.conjugate(comp))             # <<<<<<<<<<<<<<
 *     q_value = math.sqrt(sum_norm2 * (4.0 * math.pi) / (2.0 * l_sph + 1.0))
 *     return round(q_value, 14)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_real); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_conjugate); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_v_comp) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_comp);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_v_comp, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_v_sum_norm2, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_sum_norm2, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":69
 * def func_to_value(l_sph, func):
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *         comp = func[i_j]
 *         sum_norm2 += np.real(comp * np.conjugate(comp))
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":72
 *         comp = func[i_j]
 *         sum_norm2 += np.real(comp * np.conjugate(comp))
 *     q_value = math.sqrt(sum_norm2 * (4.0 * math.pi) / (2.0 * l_sph + 1.0))             # <<<<<<<<<<<<<<
 *     return round(q_value, 14)
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble((4.0 * M_PI)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = PyNumber_Multiply(__pyx_v_sum_norm2, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_0, __pyx_v_l_sph); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyFloat_AddObjC(__pyx_t_2, __pyx_float_1_0, 1.0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_q_value = sqrt(__pyx_t_9);

  /* "malio_cy/op_q_spherical_cy.pyx":73
 *         sum_norm2 += np.real(comp * np.conjugate(comp))
 *     q_value = math.sqrt(sum_norm2 * (4.0 * math.pi) / (2.0 * l_sph + 1.0))
 *     return round(q_value, 14)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_q_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_int_14);
  __Pyx_GIVEREF(__pyx_int_14);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_14);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_round, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "malio_cy/op_q_spherical_cy.pyx":67
 * 
 * 
 * def func_to_value(l_sph, func):             # <<<<<<<<<<<<<<
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.func_to_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sum_norm2);
  __Pyx_XDECREF(__pyx_v_i_j);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_q_spherical_cy.pyx":76
 * 
 * 
 * def calc_q_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_9calc_q_wrapper(PyObject *__pyx_self, PyObject *__pyx_v_args); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_17op_q_spherical_cy_9calc_q_wrapper = {"calc_q_wrapper", (PyCFunction)__pyx_pw_8malio_cy_17op_q_spherical_cy_9calc_q_wrapper, METH_O, 0};
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_9calc_q_wrapper(PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_q_wrapper (wrapper)", 0);
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_8calc_q_wrapper(__pyx_self, ((PyObject *)__pyx_v_args));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_8calc_q_wrapper(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_v_box_length = NULL;
  PyObject *__pyx_v_neighbor_list_ii = NULL;
  PyObject *__pyx_v_i_i = NULL;
  PyObject *__pyx_v_l_list = NULL;
  PyObject *__pyx_v_o_factor = NULL;
  PyObject *__pyx_v_oi_oj = NULL;
  PyObject *__pyx_v_p_list = NULL;
  PyObject *__pyx_v_comb = NULL;
  PyObject *__pyx_v_q_func_temp = NULL;
  PyObject *__pyx_v_l_sph = NULL;
  PyObject *__pyx_v_o_f = NULL;
  PyObject *__pyx_v_o_i = NULL;
  PyObject *__pyx_v_o_j = NULL;
  PyObject *__pyx_v_p_weight = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_x_i = NULL;
  PyObject *__pyx_v_q_temp = NULL;
  PyObject *__pyx_v_i_j = NULL;
  PyObject *__pyx_v_x_j = NULL;
  PyObject *__pyx_v_delta = NULL;
  PyObject *__pyx_v_pol = NULL;
  PyObject *__pyx_v_q_l = NULL;
  PyObject *__pyx_v_i_k = NULL;
  Py_ssize_t __pyx_v_N;
  PyObject *__pyx_v_p_fact = NULL;
  PyObject *__pyx_v_oi_list_not_oi = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  Py_ssize_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  Py_ssize_t __pyx_t_14;
  PyObject *(*__pyx_t_15)(PyObject *);
  Py_ssize_t __pyx_t_16;
  PyObject *(*__pyx_t_17)(PyObject *);
  Py_ssize_t __pyx_t_18;
  PyObject *(*__pyx_t_19)(PyObject *);
  int __pyx_t_20;
  __pyx_t_double_complex __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  long __pyx_t_26;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calc_q_wrapper", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":78
 * def calc_q_wrapper(args):
 *     [box_length, neighbor_list_ii,
 *         i_i, l_list, o_factor, oi_oj, p_list] = args             # <<<<<<<<<<<<<<
 * 
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_args))) || (PyList_CheckExact(__pyx_v_args))) {
    PyObject* sequence = __pyx_v_args;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 7)) {
      if (size > 7) __Pyx_RaiseTooManyValuesError(7);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 77, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_6 = PyTuple_GET_ITEM(sequence, 5); 
      __pyx_t_7 = PyTuple_GET_ITEM(sequence, 6); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_5 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_6 = PyList_GET_ITEM(sequence, 5); 
      __pyx_t_7 = PyList_GET_ITEM(sequence, 6); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_t_7);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[7] = {&__pyx_t_1,&__pyx_t_2,&__pyx_t_3,&__pyx_t_4,&__pyx_t_5,&__pyx_t_6,&__pyx_t_7};
      for (i=0; i < 7; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 77, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[7] = {&__pyx_t_1,&__pyx_t_2,&__pyx_t_3,&__pyx_t_4,&__pyx_t_5,&__pyx_t_6,&__pyx_t_7};
    __pyx_t_8 = PyObject_GetIter(__pyx_v_args); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
    for (index=0; index < 7; index++) {
      PyObject* item = __pyx_t_9(__pyx_t_8); if (unlikely(!item)) goto __pyx_L3_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 7) < 0) __PYX_ERR(0, 77, __pyx_L1_error)
    __pyx_t_9 = NULL;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 77, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }

  /* "malio_cy/op_q_spherical_cy.pyx":77
 * 
 * def calc_q_wrapper(args):
 *     [box_length, neighbor_list_ii,             # <<<<<<<<<<<<<<
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 * 
 */
  __pyx_v_box_length = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_neighbor_list_ii = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_i_i = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_l_list = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_v_o_factor = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_v_oi_oj = __pyx_t_6;
  __pyx_t_6 = 0;
  __pyx_v_p_list = __pyx_t_7;
  __pyx_t_7 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":80
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 * 
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
  __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);

  /* "malio_cy/op_q_spherical_cy.pyx":81
 * 
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for o_f in o_factor             # <<<<<<<<<<<<<<
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_6 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_6); __pyx_t_10 = 0;
    __pyx_t_11 = NULL;
  } else {
    __pyx_t_10 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 81, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_11)) {
      if (likely(PyList_CheckExact(__pyx_t_6))) {
        if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_6)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      } else {
        if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      }
    } else {
      __pyx_t_5 = __pyx_t_11(__pyx_t_6);
      if (unlikely(!__pyx_t_5)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 81, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_5);
    __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
      __pyx_t_5 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_5); __pyx_t_12 = 0;
      __pyx_t_13 = NULL;
    } else {
      __pyx_t_12 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_13 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 81, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_13)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_12); __Pyx_INCREF(__pyx_t_4); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 81, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_12); __Pyx_INCREF(__pyx_t_4); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 81, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_13(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 81, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":82
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *     q_func_temp = {}
 */
      if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
        __pyx_t_4 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_4); __pyx_t_14 = 0;
        __pyx_t_15 = NULL;
      } else {
        __pyx_t_14 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_15 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 82, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_15)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_14 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_14); __Pyx_INCREF(__pyx_t_3); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_14 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_14); __Pyx_INCREF(__pyx_t_3); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_15(__pyx_t_4);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 82, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
        __pyx_t_3 = 0;
        if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
          __pyx_t_3 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_3); __pyx_t_16 = 0;
          __pyx_t_17 = NULL;
        } else {
          __pyx_t_16 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_17 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 82, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_17)) {
            if (likely(PyList_CheckExact(__pyx_t_3))) {
              if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_3)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_16); __Pyx_INCREF(__pyx_t_2); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
              #else
              __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              #endif
            } else {
              if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_16); __Pyx_INCREF(__pyx_t_2); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
              #else
              __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              #endif
            }
          } else {
            __pyx_t_2 = __pyx_t_17(__pyx_t_3);
            if (unlikely(!__pyx_t_2)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 82, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_2);
          }
          __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_2);
          __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
            __pyx_t_2 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_2); __pyx_t_18 = 0;
            __pyx_t_19 = NULL;
          } else {
            __pyx_t_18 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_19 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 82, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_19)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_18); __Pyx_INCREF(__pyx_t_1); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
                #else
                __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_1);
                #endif
              } else {
                if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_18); __Pyx_INCREF(__pyx_t_1); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
                #else
                __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_1);
                #endif
              }
            } else {
              __pyx_t_1 = __pyx_t_19(__pyx_t_2);
              if (unlikely(!__pyx_t_1)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 82, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_1);
            }
            __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_1);
            __pyx_t_1 = 0;

            /* "malio_cy/op_q_spherical_cy.pyx":80
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 * 
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
            __pyx_t_1 = PyTuple_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_v_l_sph);
            __Pyx_GIVEREF(__pyx_v_l_sph);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_l_sph);
            __Pyx_INCREF(__pyx_v_o_f);
            __Pyx_GIVEREF(__pyx_v_o_f);
            PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_o_f);
            __Pyx_INCREF(__pyx_v_o_i);
            __Pyx_GIVEREF(__pyx_v_o_i);
            PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_o_i);
            __Pyx_INCREF(__pyx_v_o_j);
            __Pyx_GIVEREF(__pyx_v_o_j);
            PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_o_j);
            __Pyx_INCREF(__pyx_v_p_weight);
            __Pyx_GIVEREF(__pyx_v_p_weight);
            PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_v_p_weight);
            if (unlikely(__Pyx_ListComp_Append(__pyx_t_7, (PyObject*)__pyx_t_1))) __PYX_ERR(0, 80, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "malio_cy/op_q_spherical_cy.pyx":82
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *     q_func_temp = {}
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":81
 * 
 *     comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for o_f in o_factor             # <<<<<<<<<<<<<<
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_comb = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":84
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 *     q_func_temp = {}             # <<<<<<<<<<<<<<
 *     for l_sph, o_f, o_i, o_j, p_weight in comb:
 *         name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 */
  __pyx_t_7 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_v_q_func_temp = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":85
 * 
 *     q_func_temp = {}
 *     for l_sph, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 * 
 */
  __pyx_t_7 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_7); __pyx_t_10 = 0;
  for (;;) {
    if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_7)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_10); __Pyx_INCREF(__pyx_t_6); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 85, __pyx_L1_error)
    #else
    __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 85, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
      PyObject* sequence = __pyx_t_6;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 5)) {
        if (size > 5) __Pyx_RaiseTooManyValuesError(5);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 85, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 3); 
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 4); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 3); 
        __pyx_t_1 = PyList_GET_ITEM(sequence, 4); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[5] = {&__pyx_t_5,&__pyx_t_4,&__pyx_t_3,&__pyx_t_2,&__pyx_t_1};
        for (i=0; i < 5; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 85, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[5] = {&__pyx_t_5,&__pyx_t_4,&__pyx_t_3,&__pyx_t_2,&__pyx_t_1};
      __pyx_t_8 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 85, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
      for (index=0; index < 5; index++) {
        PyObject* item = __pyx_t_9(__pyx_t_8); if (unlikely(!item)) goto __pyx_L17_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 5) < 0) __PYX_ERR(0, 85, __pyx_L1_error)
      __pyx_t_9 = NULL;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L18_unpacking_done;
      __pyx_L17_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 85, __pyx_L1_error)
      __pyx_L18_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":86
 *     q_func_temp = {}
 *     for l_sph, o_f, o_i, o_j, p_weight in comb:
 *         name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 * 
 *         x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_naming); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_v_l_sph);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_l_sph);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
    __Pyx_INCREF(__pyx_v_o_f);
    __Pyx_GIVEREF(__pyx_v_o_f);
    PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_o_f);
    __Pyx_INCREF(__pyx_v_o_i);
    __Pyx_GIVEREF(__pyx_v_o_i);
    PyList_SET_ITEM(__pyx_t_1, 4, __pyx_v_o_i);
    __Pyx_INCREF(__pyx_v_o_j);
    __Pyx_GIVEREF(__pyx_v_o_j);
    PyList_SET_ITEM(__pyx_t_1, 5, __pyx_v_o_j);
    __Pyx_INCREF(__pyx_v_p_weight);
    __Pyx_GIVEREF(__pyx_v_p_weight);
    PyList_SET_ITEM(__pyx_t_1, 6, __pyx_v_p_weight);
    __pyx_t_3 = NULL;
    __pyx_t_20 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_20 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_n_s_q, __pyx_t_1};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_n_s_q, __pyx_t_1};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_20, 2+__pyx_t_20); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(2+__pyx_t_20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 86, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_20, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_20, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":88
 *         name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 * 
 *         x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)             # <<<<<<<<<<<<<<
 * 
 *         # neighbor
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_calc_head_coordinate); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_coord_1d); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_direct_1d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = NULL;
    __pyx_t_20 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_20 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[6] = {__pyx_t_3, __pyx_t_2, __pyx_t_1, __pyx_v_i_i, __pyx_v_o_f, __pyx_v_o_i};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_20, 5+__pyx_t_20); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 88, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[6] = {__pyx_t_3, __pyx_t_2, __pyx_t_1, __pyx_v_i_i, __pyx_v_o_f, __pyx_v_o_i};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_20, 5+__pyx_t_20); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 88, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(5+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 88, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_20, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_20, __pyx_t_1);
      __Pyx_INCREF(__pyx_v_i_i);
      __Pyx_GIVEREF(__pyx_v_i_i);
      PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_20, __pyx_v_i_i);
      __Pyx_INCREF(__pyx_v_o_f);
      __Pyx_GIVEREF(__pyx_v_o_f);
      PyTuple_SET_ITEM(__pyx_t_5, 3+__pyx_t_20, __pyx_v_o_f);
      __Pyx_INCREF(__pyx_v_o_i);
      __Pyx_GIVEREF(__pyx_v_o_i);
      PyTuple_SET_ITEM(__pyx_t_5, 4+__pyx_t_20, __pyx_v_o_i);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 88, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF_SET(__pyx_v_x_i, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":91
 * 
 *         # neighbor
 *         q_temp = np.array([0 + 0j for i in range(2 * l_sph + 1)])             # <<<<<<<<<<<<<<
 *         for i_j in neighbor_list_ii:
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_array); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyNumber_Multiply(__pyx_int_2, __pyx_v_l_sph); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_12 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_12 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 91, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 91, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_12); __Pyx_INCREF(__pyx_t_1); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 91, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_12); __Pyx_INCREF(__pyx_t_1); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 91, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_11(__pyx_t_2);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 91, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_21 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(0, 0), __pyx_t_double_complex_from_parts(0, 0.0));
      __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_t_21); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_1))) __PYX_ERR(0, 91, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_q_temp, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":92
 *         # neighbor
 *         q_temp = np.array([0 + 0j for i in range(2 * l_sph + 1)])
 *         for i_j in neighbor_list_ii:             # <<<<<<<<<<<<<<
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             delta = misc_cy.calc_delta(x_i, x_j, box_length)
 */
    if (likely(PyList_CheckExact(__pyx_v_neighbor_list_ii)) || PyTuple_CheckExact(__pyx_v_neighbor_list_ii)) {
      __pyx_t_6 = __pyx_v_neighbor_list_ii; __Pyx_INCREF(__pyx_t_6); __pyx_t_12 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_12 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_neighbor_list_ii); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 92, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 92, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_12); __Pyx_INCREF(__pyx_t_5); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 92, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 92, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_12); __Pyx_INCREF(__pyx_t_5); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 92, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 92, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_11(__pyx_t_6);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 92, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_v_i_j, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":93
 *         q_temp = np.array([0 + 0j for i in range(2 * l_sph + 1)])
 *         for i_j in neighbor_list_ii:
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)             # <<<<<<<<<<<<<<
 *             delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *             pol = misc_cy.convert_to_theta_phi(delta)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 93, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_calc_head_coordinate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 93, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_coord_1d); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 93, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_direct_1d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 93, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = NULL;
      __pyx_t_20 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_20 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[6] = {__pyx_t_3, __pyx_t_4, __pyx_t_1, __pyx_v_i_j, __pyx_v_o_f, __pyx_v_o_j};
        __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_20, 5+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 93, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[6] = {__pyx_t_3, __pyx_t_4, __pyx_t_1, __pyx_v_i_j, __pyx_v_o_f, __pyx_v_o_j};
        __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_20, 5+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 93, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(5+__pyx_t_20); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 93, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        if (__pyx_t_3) {
          __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_20, __pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_20, __pyx_t_1);
        __Pyx_INCREF(__pyx_v_i_j);
        __Pyx_GIVEREF(__pyx_v_i_j);
        PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_20, __pyx_v_i_j);
        __Pyx_INCREF(__pyx_v_o_f);
        __Pyx_GIVEREF(__pyx_v_o_f);
        PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_20, __pyx_v_o_f);
        __Pyx_INCREF(__pyx_v_o_j);
        __Pyx_GIVEREF(__pyx_v_o_j);
        PyTuple_SET_ITEM(__pyx_t_8, 4+__pyx_t_20, __pyx_v_o_j);
        __pyx_t_4 = 0;
        __pyx_t_1 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 93, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_x_j, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":94
 *         for i_j in neighbor_list_ii:
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             delta = misc_cy.calc_delta(x_i, x_j, box_length)             # <<<<<<<<<<<<<<
 *             pol = misc_cy.convert_to_theta_phi(delta)
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 94, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_calc_delta); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 94, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      __pyx_t_20 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_20 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_v_x_i, __pyx_v_x_j, __pyx_v_box_length};
        __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 94, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_5);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_v_x_i, __pyx_v_x_j, __pyx_v_box_length};
        __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 94, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_5);
      } else
      #endif
      {
        __pyx_t_1 = PyTuple_New(3+__pyx_t_20); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 94, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (__pyx_t_2) {
          __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2); __pyx_t_2 = NULL;
        }
        __Pyx_INCREF(__pyx_v_x_i);
        __Pyx_GIVEREF(__pyx_v_x_i);
        PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_20, __pyx_v_x_i);
        __Pyx_INCREF(__pyx_v_x_j);
        __Pyx_GIVEREF(__pyx_v_x_j);
        PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_20, __pyx_v_x_j);
        __Pyx_INCREF(__pyx_v_box_length);
        __Pyx_GIVEREF(__pyx_v_box_length);
        PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_20, __pyx_v_box_length);
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 94, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_delta, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":95
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *             pol = misc_cy.convert_to_theta_phi(delta)             # <<<<<<<<<<<<<<
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 95, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_convert_to_theta_phi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 95, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_8, __pyx_v_delta) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_delta);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 95, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_pol, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":96
 *             delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *             pol = misc_cy.convert_to_theta_phi(delta)
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])             # <<<<<<<<<<<<<<
 * 
 *             for i_k in range(2 * l_sph + 1):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_calc_q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_pol, __pyx_n_s_theta); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 96, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_pol, __pyx_n_s_phi); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = NULL;
      __pyx_t_20 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
          __pyx_t_20 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_l_sph, __pyx_t_8, __pyx_t_2};
        __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 96, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_l_sph, __pyx_t_8, __pyx_t_2};
        __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 96, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      {
        __pyx_t_3 = PyTuple_New(3+__pyx_t_20); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 96, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (__pyx_t_4) {
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
        }
        __Pyx_INCREF(__pyx_v_l_sph);
        __Pyx_GIVEREF(__pyx_v_l_sph);
        PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_20, __pyx_v_l_sph);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_20, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_20, __pyx_t_2);
        __pyx_t_8 = 0;
        __pyx_t_2 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 96, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_q_l, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":98
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 * 
 *             for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *                 q_temp[i_k] += q_l[i_k]
 * 
 */
      __pyx_t_5 = PyNumber_Multiply(__pyx_int_2, __pyx_v_l_sph); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 98, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 98, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 98, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
        __pyx_t_1 = __pyx_t_5; __Pyx_INCREF(__pyx_t_1); __pyx_t_14 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_14 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 98, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_13 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 98, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_1))) {
            if (__pyx_t_14 >= PyList_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_14); __Pyx_INCREF(__pyx_t_5); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 98, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 98, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_14 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_14); __Pyx_INCREF(__pyx_t_5); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 98, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 98, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_13(__pyx_t_1);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 98, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":99
 * 
 *             for i_k in range(2 * l_sph + 1):
 *                 q_temp[i_k] += q_l[i_k]             # <<<<<<<<<<<<<<
 * 
 *         # self director
 */
        __Pyx_INCREF(__pyx_v_i_k);
        __pyx_t_5 = __pyx_v_i_k;
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_q_temp, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_q_l, __pyx_v_i_k); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = PyNumber_InPlaceAdd(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(PyObject_SetItem(__pyx_v_q_temp, __pyx_t_5, __pyx_t_8) < 0)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":98
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 * 
 *             for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *                 q_temp[i_k] += q_l[i_k]
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":92
 *         # neighbor
 *         q_temp = np.array([0 + 0j for i in range(2 * l_sph + 1)])
 *         for i_j in neighbor_list_ii:             # <<<<<<<<<<<<<<
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             delta = misc_cy.calc_delta(x_i, x_j, box_length)
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":102
 * 
 *         # self director
 *         if type(p_weight) == type('string') and 'N' in p_weight:             # <<<<<<<<<<<<<<
 *             # p_weight == [ 'N', 'N/2', '2*N' ]
 *             N = len(neighbor_list_ii)
 */
    __pyx_t_6 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_v_p_weight)), ((PyObject *)Py_TYPE(__pyx_n_s_string)), Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 102, __pyx_L1_error)
    __pyx_t_23 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_23 < 0)) __PYX_ERR(0, 102, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_23) {
    } else {
      __pyx_t_22 = __pyx_t_23;
      goto __pyx_L26_bool_binop_done;
    }
    __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_N, __pyx_v_p_weight, Py_EQ)); if (unlikely(__pyx_t_23 < 0)) __PYX_ERR(0, 102, __pyx_L1_error)
    __pyx_t_24 = (__pyx_t_23 != 0);
    __pyx_t_22 = __pyx_t_24;
    __pyx_L26_bool_binop_done:;
    if (__pyx_t_22) {

      /* "malio_cy/op_q_spherical_cy.pyx":104
 *         if type(p_weight) == type('string') and 'N' in p_weight:
 *             # p_weight == [ 'N', 'N/2', '2*N' ]
 *             N = len(neighbor_list_ii)             # <<<<<<<<<<<<<<
 *             p_fact = eval(p_weight)
 *         else:
 */
      __pyx_t_12 = PyObject_Length(__pyx_v_neighbor_list_ii); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 104, __pyx_L1_error)
      __pyx_v_N = __pyx_t_12;

      /* "malio_cy/op_q_spherical_cy.pyx":105
 *             # p_weight == [ 'N', 'N/2', '2*N' ]
 *             N = len(neighbor_list_ii)
 *             p_fact = eval(p_weight)             # <<<<<<<<<<<<<<
 *         else:
 *             p_fact = p_weight
 */
      __pyx_t_6 = __Pyx_Globals(); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 105, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_1 = __Pyx_PyDict_NewPresized(28); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 105, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyInt_FromSsize_t(__pyx_v_N); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 105, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (__pyx_t_5) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_N, __pyx_t_5) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_v_args) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_args, __pyx_v_args) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_box_length) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_box_length, __pyx_v_box_length) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_comb) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_comb, __pyx_v_comb) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_delta) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_delta, __pyx_v_delta) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_i) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i, __pyx_v_i) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_i_i) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i_i, __pyx_v_i_i) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_i_j) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i_j, __pyx_v_i_j) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_i_k) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i_k, __pyx_v_i_k) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_l_list) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_l_list, __pyx_v_l_list) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_l_sph) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_l_sph, __pyx_v_l_sph) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_name) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_neighbor_list_ii) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_neighbor_list_ii, __pyx_v_neighbor_list_ii) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_o_f) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_o_f, __pyx_v_o_f) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_o_factor) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_o_factor, __pyx_v_o_factor) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_o_i) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_o_i, __pyx_v_o_i) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_o_j) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_o_j, __pyx_v_o_j) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_oi_list_not_oi) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_oi_list_not_oi, __pyx_v_oi_list_not_oi) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_oi_oj) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_oi_oj, __pyx_v_oi_oj) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_p_fact) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p_fact, __pyx_v_p_fact) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_p_list) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p_list, __pyx_v_p_list) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_p_weight) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p_weight, __pyx_v_p_weight) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_pol) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_pol, __pyx_v_pol) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_q_func_temp) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_q_func_temp, __pyx_v_q_func_temp) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_q_l) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_q_l, __pyx_v_q_l) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_q_temp) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_q_temp, __pyx_v_q_temp) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_x_i) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_x_i, __pyx_v_x_i) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      if (__pyx_v_x_j) {
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_x_j, __pyx_v_x_j) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
      }
      __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 105, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_v_p_weight);
      __Pyx_GIVEREF(__pyx_v_p_weight);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_p_weight);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_1);
      __pyx_t_6 = 0;
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_eval, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 105, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_p_fact, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":102
 * 
 *         # self director
 *         if type(p_weight) == type('string') and 'N' in p_weight:             # <<<<<<<<<<<<<<
 *             # p_weight == [ 'N', 'N/2', '2*N' ]
 *             N = len(neighbor_list_ii)
 */
      goto __pyx_L25;
    }

    /* "malio_cy/op_q_spherical_cy.pyx":107
 *             p_fact = eval(p_weight)
 *         else:
 *             p_fact = p_weight             # <<<<<<<<<<<<<<
 * 
 *         oi_list_not_oi = []
 */
    /*else*/ {
      __Pyx_INCREF(__pyx_v_p_weight);
      __Pyx_XDECREF_SET(__pyx_v_p_fact, __pyx_v_p_weight);
    }
    __pyx_L25:;

    /* "malio_cy/op_q_spherical_cy.pyx":109
 *             p_fact = p_weight
 * 
 *         oi_list_not_oi = []             # <<<<<<<<<<<<<<
 *         for i_j in oi_oj:
 *             if i_j != o_i:
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_oi_list_not_oi, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":110
 * 
 *         oi_list_not_oi = []
 *         for i_j in oi_oj:             # <<<<<<<<<<<<<<
 *             if i_j != o_i:
 *                 oi_list_not_oi.append(i_j)
 */
    if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
      __pyx_t_1 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_1); __pyx_t_12 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_12 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 110, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_11 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 110, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_12); __Pyx_INCREF(__pyx_t_5); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 110, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 110, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_12); __Pyx_INCREF(__pyx_t_5); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 110, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 110, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_11(__pyx_t_1);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 110, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_v_i_j, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":111
 *         oi_list_not_oi = []
 *         for i_j in oi_oj:
 *             if i_j != o_i:             # <<<<<<<<<<<<<<
 *                 oi_list_not_oi.append(i_j)
 *         for i_j in oi_list_not_oi:
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_i_j, __pyx_v_o_i, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 111, __pyx_L1_error)
      __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 111, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_22) {

        /* "malio_cy/op_q_spherical_cy.pyx":112
 *         for i_j in oi_oj:
 *             if i_j != o_i:
 *                 oi_list_not_oi.append(i_j)             # <<<<<<<<<<<<<<
 *         for i_j in oi_list_not_oi:
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]
 */
        __pyx_t_25 = __Pyx_PyList_Append(__pyx_v_oi_list_not_oi, __pyx_v_i_j); if (unlikely(__pyx_t_25 == ((int)-1))) __PYX_ERR(0, 112, __pyx_L1_error)

        /* "malio_cy/op_q_spherical_cy.pyx":111
 *         oi_list_not_oi = []
 *         for i_j in oi_oj:
 *             if i_j != o_i:             # <<<<<<<<<<<<<<
 *                 oi_list_not_oi.append(i_j)
 *         for i_j in oi_list_not_oi:
 */
      }

      /* "malio_cy/op_q_spherical_cy.pyx":110
 * 
 *         oi_list_not_oi = []
 *         for i_j in oi_oj:             # <<<<<<<<<<<<<<
 *             if i_j != o_i:
 *                 oi_list_not_oi.append(i_j)
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":113
 *             if i_j != o_i:
 *                 oi_list_not_oi.append(i_j)
 *         for i_j in oi_list_not_oi:             # <<<<<<<<<<<<<<
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]
 *                    for i in range(3)]
 */
    __pyx_t_1 = __pyx_v_oi_list_not_oi; __Pyx_INCREF(__pyx_t_1); __pyx_t_12 = 0;
    for (;;) {
      if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_12); __Pyx_INCREF(__pyx_t_5); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 113, __pyx_L1_error)
      #else
      __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 113, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_i_j, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":114
 *                 oi_list_not_oi.append(i_j)
 *         for i_j in oi_list_not_oi:
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]             # <<<<<<<<<<<<<<
 *                    for i in range(3)]
 *             delta = misc_cy.calc_delta(
 */
      __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 114, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);

      /* "malio_cy/op_q_spherical_cy.pyx":115
 *         for i_j in oi_list_not_oi:
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]
 *                    for i in range(3)]             # <<<<<<<<<<<<<<
 *             delta = misc_cy.calc_delta(
 *                 x_i, x_j, box_length)
 */
      for (__pyx_t_26 = 0; __pyx_t_26 < 3; __pyx_t_26+=1) {
        __pyx_t_6 = __Pyx_PyInt_From_long(__pyx_t_26); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 115, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":114
 *                 oi_list_not_oi.append(i_j)
 *         for i_j in oi_list_not_oi:
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]             # <<<<<<<<<<<<<<
 *                    for i in range(3)]
 *             delta = misc_cy.calc_delta(
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_coord_1d); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_8 = PyNumber_Multiply(__pyx_int_3, __pyx_v_i_i); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_2 = PyNumber_Add(__pyx_t_8, __pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_direct_1d); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = PyNumber_Multiply(__pyx_int_3, __pyx_v_i_i); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = PyNumber_Add(__pyx_t_6, __pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_5, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_x_j, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":116
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]
 *                    for i in range(3)]
 *             delta = misc_cy.calc_delta(             # <<<<<<<<<<<<<<
 *                 x_i, x_j, box_length)
 *             pol = misc_cy.convert_to_theta_phi(
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_calc_delta); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 116, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":117
 *                    for i in range(3)]
 *             delta = misc_cy.calc_delta(
 *                 x_i, x_j, box_length)             # <<<<<<<<<<<<<<
 *             pol = misc_cy.convert_to_theta_phi(
 *                 delta)
 */
      __pyx_t_3 = NULL;
      __pyx_t_20 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_20 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_6)) {
        PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_x_i, __pyx_v_x_j, __pyx_v_box_length};
        __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 116, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_5);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
        PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_x_i, __pyx_v_x_j, __pyx_v_box_length};
        __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 116, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_5);
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(3+__pyx_t_20); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 116, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        if (__pyx_t_3) {
          __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
        }
        __Pyx_INCREF(__pyx_v_x_i);
        __Pyx_GIVEREF(__pyx_v_x_i);
        PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_20, __pyx_v_x_i);
        __Pyx_INCREF(__pyx_v_x_j);
        __Pyx_GIVEREF(__pyx_v_x_j);
        PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_20, __pyx_v_x_j);
        __Pyx_INCREF(__pyx_v_box_length);
        __Pyx_GIVEREF(__pyx_v_box_length);
        PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_20, __pyx_v_box_length);
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 116, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_delta, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":118
 *             delta = misc_cy.calc_delta(
 *                 x_i, x_j, box_length)
 *             pol = misc_cy.convert_to_theta_phi(             # <<<<<<<<<<<<<<
 *                 delta)
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_convert_to_theta_phi); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":119
 *                 x_i, x_j, box_length)
 *             pol = misc_cy.convert_to_theta_phi(
 *                 delta)             # <<<<<<<<<<<<<<
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 * 
 */
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_v_delta) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_delta);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_pol, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":120
 *             pol = misc_cy.convert_to_theta_phi(
 *                 delta)
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])             # <<<<<<<<<<<<<<
 * 
 *             for i_k in range(2 * l_sph + 1):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_calc_q); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 120, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_pol, __pyx_n_s_theta); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 120, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_pol, __pyx_n_s_phi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 120, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = NULL;
      __pyx_t_20 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_20 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_v_l_sph, __pyx_t_6, __pyx_t_3};
        __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 120, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_v_l_sph, __pyx_t_6, __pyx_t_3};
        __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_20, 3+__pyx_t_20); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 120, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else
      #endif
      {
        __pyx_t_4 = PyTuple_New(3+__pyx_t_20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 120, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (__pyx_t_2) {
          __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
        }
        __Pyx_INCREF(__pyx_v_l_sph);
        __Pyx_GIVEREF(__pyx_v_l_sph);
        PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_20, __pyx_v_l_sph);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_20, __pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_20, __pyx_t_3);
        __pyx_t_6 = 0;
        __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 120, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_q_l, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":122
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 * 
 *             for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *                 q_temp[i_k] += p_fact * q_l[i_k]
 * 
 */
      __pyx_t_5 = PyNumber_Multiply(__pyx_int_2, __pyx_v_l_sph); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 122, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
        __pyx_t_8 = __pyx_t_5; __Pyx_INCREF(__pyx_t_8); __pyx_t_14 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_14 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_11 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 122, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (likely(!__pyx_t_11)) {
          if (likely(PyList_CheckExact(__pyx_t_8))) {
            if (__pyx_t_14 >= PyList_GET_SIZE(__pyx_t_8)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_14); __Pyx_INCREF(__pyx_t_5); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 122, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_14 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_14); __Pyx_INCREF(__pyx_t_5); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 122, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_11(__pyx_t_8);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 122, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":123
 * 
 *             for i_k in range(2 * l_sph + 1):
 *                 q_temp[i_k] += p_fact * q_l[i_k]             # <<<<<<<<<<<<<<
 * 
 *         for i_k in range(2 * l_sph + 1):
 */
        __Pyx_INCREF(__pyx_v_i_k);
        __pyx_t_5 = __pyx_v_i_k;
        __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_q_temp, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 123, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_q_l, __pyx_v_i_k); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 123, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = PyNumber_Multiply(__pyx_v_p_fact, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 123, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 123, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(PyObject_SetItem(__pyx_v_q_temp, __pyx_t_5, __pyx_t_3) < 0)) __PYX_ERR(0, 123, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":122
 *             q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 * 
 *             for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *                 q_temp[i_k] += p_fact * q_l[i_k]
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":113
 *             if i_j != o_i:
 *                 oi_list_not_oi.append(i_j)
 *         for i_j in oi_list_not_oi:             # <<<<<<<<<<<<<<
 *             x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i]
 *                    for i in range(3)]
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":125
 *                 q_temp[i_k] += p_fact * q_l[i_k]
 * 
 *         for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *             q_temp[i_k] = q_temp[i_k] / (float(len(neighbor_list_ii)) + p_fact)
 * 
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_int_2, __pyx_v_l_sph); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_8 = __pyx_t_1; __Pyx_INCREF(__pyx_t_8); __pyx_t_12 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_12 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_11 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 125, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_12); __Pyx_INCREF(__pyx_t_1); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 125, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_12); __Pyx_INCREF(__pyx_t_1); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 125, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_11(__pyx_t_8);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 125, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":126
 * 
 *         for i_k in range(2 * l_sph + 1):
 *             q_temp[i_k] = q_temp[i_k] / (float(len(neighbor_list_ii)) + p_fact)             # <<<<<<<<<<<<<<
 * 
 *         q_func_temp[name] = q_temp
 */
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_q_temp, __pyx_v_i_k); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyObject_Length(__pyx_v_neighbor_list_ii); if (unlikely(__pyx_t_14 == ((Py_ssize_t)-1))) __PYX_ERR(0, 126, __pyx_L1_error)
      __pyx_t_5 = PyFloat_FromDouble(((double)__pyx_t_14)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyNumber_Add(__pyx_t_5, __pyx_v_p_fact); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_q_temp, __pyx_v_i_k, __pyx_t_5) < 0)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":125
 *                 q_temp[i_k] += p_fact * q_l[i_k]
 * 
 *         for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *             q_temp[i_k] = q_temp[i_k] / (float(len(neighbor_list_ii)) + p_fact)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":128
 *             q_temp[i_k] = q_temp[i_k] / (float(len(neighbor_list_ii)) + p_fact)
 * 
 *         q_func_temp[name] = q_temp             # <<<<<<<<<<<<<<
 * 
 *     return q_func_temp
 */
    if (unlikely(PyDict_SetItem(__pyx_v_q_func_temp, __pyx_v_name, __pyx_v_q_temp) < 0)) __PYX_ERR(0, 128, __pyx_L1_error)

    /* "malio_cy/op_q_spherical_cy.pyx":85
 * 
 *     q_func_temp = {}
 *     for l_sph, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":130
 *         q_func_temp[name] = q_temp
 * 
 *     return q_func_temp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_q_func_temp);
  __pyx_r = __pyx_v_q_func_temp;
  goto __pyx_L0;

  /* "malio_cy/op_q_spherical_cy.pyx":76
 * 
 * 
 * def calc_q_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.calc_q_wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_box_length);
  __Pyx_XDECREF(__pyx_v_neighbor_list_ii);
  __Pyx_XDECREF(__pyx_v_i_i);
  __Pyx_XDECREF(__pyx_v_l_list);
  __Pyx_XDECREF(__pyx_v_o_factor);
  __Pyx_XDECREF(__pyx_v_oi_oj);
  __Pyx_XDECREF(__pyx_v_p_list);
  __Pyx_XDECREF(__pyx_v_comb);
  __Pyx_XDECREF(__pyx_v_q_func_temp);
  __Pyx_XDECREF(__pyx_v_l_sph);
  __Pyx_XDECREF(__pyx_v_o_f);
  __Pyx_XDECREF(__pyx_v_o_i);
  __Pyx_XDECREF(__pyx_v_o_j);
  __Pyx_XDECREF(__pyx_v_p_weight);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_x_i);
  __Pyx_XDECREF(__pyx_v_q_temp);
  __Pyx_XDECREF(__pyx_v_i_j);
  __Pyx_XDECREF(__pyx_v_x_j);
  __Pyx_XDECREF(__pyx_v_delta);
  __Pyx_XDECREF(__pyx_v_pol);
  __Pyx_XDECREF(__pyx_v_q_l);
  __Pyx_XDECREF(__pyx_v_i_k);
  __Pyx_XDECREF(__pyx_v_p_fact);
  __Pyx_XDECREF(__pyx_v_oi_list_not_oi);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_q_spherical_cy.pyx":135
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def spherical_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_11spherical_order_parameter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_17op_q_spherical_cy_11spherical_order_parameter = {"spherical_order_parameter", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_17op_q_spherical_cy_11spherical_order_parameter, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_11spherical_order_parameter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coord = 0;
  PyObject *__pyx_v_direct = 0;
  PyObject *__pyx_v_box_length = 0;
  PyObject *__pyx_v_setting = 0;
  PyObject *__pyx_v_neighbor_list = 0;
  PyObject *__pyx_v_thread_num = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("spherical_order_parameter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_coord,&__pyx_n_s_direct,&__pyx_n_s_box_length,&__pyx_n_s_setting,&__pyx_n_s_neighbor_list,&__pyx_n_s_thread_num,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_coord)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_direct)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter", 1, 6, 6, 1); __PYX_ERR(0, 135, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_box_length)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter", 1, 6, 6, 2); __PYX_ERR(0, 135, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_setting)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter", 1, 6, 6, 3); __PYX_ERR(0, 135, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_neighbor_list)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter", 1, 6, 6, 4); __PYX_ERR(0, 135, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_thread_num)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter", 1, 6, 6, 5); __PYX_ERR(0, 135, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "spherical_order_parameter") < 0)) __PYX_ERR(0, 135, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_coord = values[0];
    __pyx_v_direct = values[1];
    __pyx_v_box_length = values[2];
    __pyx_v_setting = values[3];
    __pyx_v_neighbor_list = values[4];
    __pyx_v_thread_num = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("spherical_order_parameter", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 135, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.spherical_order_parameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_10spherical_order_parameter(__pyx_self, __pyx_v_coord, __pyx_v_direct, __pyx_v_box_length, __pyx_v_setting, __pyx_v_neighbor_list, __pyx_v_thread_num);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_10spherical_order_parameter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, PyObject *__pyx_v_thread_num) {
  PyObject *__pyx_v_a_times = NULL;
  PyObject *__pyx_v_b_times = NULL;
  PyObject *__pyx_v_oi_oj = NULL;
  PyObject *__pyx_v_o_factor = NULL;
  PyObject *__pyx_v_l_list = NULL;
  PyObject *__pyx_v_p_list = NULL;
  int __pyx_v_i_i;
  int __pyx_v_i_j;
  int __pyx_v_i_k;
  int __pyx_v_len_c;
  int __pyx_v_o_f;
  int __pyx_v_o_i;
  int __pyx_v_o_j;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_l_neighbor_list_ii;
  int __pyx_v_i_2;
  int __pyx_v_l_sph;
  int __pyx_v_m_sph;
  int __pyx_v_p_weight;
  int __pyx_v_l_sph2p1;
  int __pyx_v_l_q_func_name_old_0;
  double __pyx_v_dist;
  double __pyx_v_theta;
  double __pyx_v_phi;
  double __pyx_v_inv_l_sph2p1;
  double __pyx_v_sum_norm2;
  double __pyx_v_q_value;
  double __pyx_v_PI4;
  double __pyx_v_dl_neighbor_list_ii_1;
  double __pyx_v_dpart;
  double __pyx_v_x_i[3];
  double __pyx_v_x_j[3];
  double __pyx_v_delta[3];
  std::vector<double>  __pyx_v_dbox_length;
  std::vector<std::vector<double> >  __pyx_v_dcoord;
  std::vector<std::vector<double> >  __pyx_v_ddirect;
  std::vector<std::vector<int> >  __pyx_v_ineighbor_list;
  __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_v_q_val;
  __pyx_t_8malio_cy_12malio_cy_def_cvec __pyx_v_q_temp;
  __pyx_t_8malio_cy_12malio_cy_def_cvec __pyx_v_cpart;
  __pyx_t_8malio_cy_12malio_cy_def_cvec_vec __pyx_v_q_func_name_old;
  __pyx_t_double_complex __pyx_v_sphharm;
  __pyx_t_double_complex __pyx_v_part_temp;
  __pyx_t_double_complex __pyx_v_cl_neighbor_list_ii_1;
  __pyx_t_double_complex __pyx_v_I;
  __pyx_t_double_complex __pyx_v_comp;
  PyObject *__pyx_v_q_func_temp = NULL;
  PyObject *__pyx_v_comb = NULL;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_v_name = NULL;
  Py_ssize_t __pyx_v_N;
  PyObject *__pyx_v_p_fact = NULL;
  PyObject *__pyx_v_oi_list_not_oi = NULL;
  PyObject *__pyx_v_q_func = NULL;
  PyObject *__pyx_v_b_t = NULL;
  PyObject *__pyx_v_name_old = NULL;
  int __pyx_v_ii_j;
  int __pyx_v_inei;
  PyObject *__pyx_v_op_data = NULL;
  PyObject *__pyx_v_a_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  std::vector<double>  __pyx_t_3;
  std::vector<std::vector<double> >  __pyx_t_4;
  std::vector<std::vector<int> >  __pyx_t_5;
  __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_t_6;
  __pyx_t_8malio_cy_12malio_cy_def_cvec __pyx_t_7;
  __pyx_t_8malio_cy_12malio_cy_def_cvec_vec __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *(*__pyx_t_13)(PyObject *);
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  PyObject *(*__pyx_t_17)(PyObject *);
  PyObject *__pyx_t_18 = NULL;
  Py_ssize_t __pyx_t_19;
  PyObject *(*__pyx_t_20)(PyObject *);
  PyObject *__pyx_t_21 = NULL;
  Py_ssize_t __pyx_t_22;
  PyObject *(*__pyx_t_23)(PyObject *);
  PyObject *__pyx_t_24 = NULL;
  Py_ssize_t __pyx_t_25;
  PyObject *(*__pyx_t_26)(PyObject *);
  PyObject *__pyx_t_27 = NULL;
  PyObject *__pyx_t_28 = NULL;
  PyObject *__pyx_t_29 = NULL;
  PyObject *__pyx_t_30 = NULL;
  PyObject *__pyx_t_31 = NULL;
  PyObject *__pyx_t_32 = NULL;
  PyObject *(*__pyx_t_33)(PyObject *);
  int __pyx_t_34;
  int __pyx_t_35;
  int __pyx_t_36;
  int __pyx_t_37;
  int __pyx_t_38;
  std::vector<__pyx_t_double_complex> ::size_type __pyx_t_39;
  __pyx_t_double_complex __pyx_t_40;
  long __pyx_t_41;
  long __pyx_t_42;
  int __pyx_t_43;
  int __pyx_t_44;
  int __pyx_t_45;
  double __pyx_t_46[3];
  __pyx_t_double_complex __pyx_t_47;
  double __pyx_t_48;
  Py_ssize_t __pyx_t_49;
  PyObject *(*__pyx_t_50)(PyObject *);
  PyObject *__pyx_t_51 = NULL;
  int __pyx_t_52;
  Py_ssize_t __pyx_t_53;
  PyObject *(*__pyx_t_54)(PyObject *);
  PyObject *__pyx_t_55 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("spherical_order_parameter", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":137
 * def spherical_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']             # <<<<<<<<<<<<<<
 *     b_times = setting['b_in_Q']
 *     oi_oj = setting['oi_oj']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_ave_times); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_a_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":138
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_Q']             # <<<<<<<<<<<<<<
 *     oi_oj = setting['oi_oj']
 *     o_factor = setting['o_factor']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_b_in_Q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_b_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":139
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_Q']
 *     oi_oj = setting['oi_oj']             # <<<<<<<<<<<<<<
 *     o_factor = setting['o_factor']
 *     l_list = setting['l_in_Q']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_oi_oj); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_oi_oj = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":140
 *     b_times = setting['b_in_Q']
 *     oi_oj = setting['oi_oj']
 *     o_factor = setting['o_factor']             # <<<<<<<<<<<<<<
 *     l_list = setting['l_in_Q']
 *     p_list = setting['p_in_Q']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_o_factor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o_factor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":141
 *     oi_oj = setting['oi_oj']
 *     o_factor = setting['o_factor']
 *     l_list = setting['l_in_Q']             # <<<<<<<<<<<<<<
 *     p_list = setting['p_in_Q']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_l_in_Q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":142
 *     o_factor = setting['o_factor']
 *     l_list = setting['l_in_Q']
 *     p_list = setting['p_in_Q']             # <<<<<<<<<<<<<<
 * 
 *     # calc spherical function
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_p_in_Q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_p_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":150
 * 
 *     cdef:
 *         int i_i, i_j, i_k, len_c = len(coord), o_f, o_i, o_j, i, j             # <<<<<<<<<<<<<<
 *         int l_neighbor_list_ii, i_2, l_sph, m_sph, p_weight, l_sph2p1
 *         int l_q_func_name_old_0
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 150, __pyx_L1_error)
  __pyx_v_len_c = __pyx_t_2;

  /* "malio_cy/op_q_spherical_cy.pyx":154
 *         int l_q_func_name_old_0
 *         double dist, theta, phi, inv_l_sph2p1, sum_norm2
 *         double q_value, PI4 = 4.0*math.acos(-1.0), dl_neighbor_list_ii_1, dpart             # <<<<<<<<<<<<<<
 *         double x_i[3]
 *         double x_j[3]
 */
  __pyx_v_PI4 = (4.0 * acos(-1.0));

  /* "malio_cy/op_q_spherical_cy.pyx":158
 *         double x_j[3]
 *         double delta[3]
 *         vector[double] dbox_length = box_length             # <<<<<<<<<<<<<<
 *         vector[vector[double]] dcoord = coord
 *         vector[vector[double]] ddirect = direct
 */
  __pyx_t_3 = __pyx_convert_vector_from_py_double(__pyx_v_box_length); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 158, __pyx_L1_error)
  __pyx_v_dbox_length = __pyx_t_3;

  /* "malio_cy/op_q_spherical_cy.pyx":159
 *         double delta[3]
 *         vector[double] dbox_length = box_length
 *         vector[vector[double]] dcoord = coord             # <<<<<<<<<<<<<<
 *         vector[vector[double]] ddirect = direct
 *         vector[vector[int]] ineighbor_list = neighbor_list
 */
  __pyx_t_4 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(__pyx_v_coord); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 159, __pyx_L1_error)
  __pyx_v_dcoord = __pyx_t_4;

  /* "malio_cy/op_q_spherical_cy.pyx":160
 *         vector[double] dbox_length = box_length
 *         vector[vector[double]] dcoord = coord
 *         vector[vector[double]] ddirect = direct             # <<<<<<<<<<<<<<
 *         vector[vector[int]] ineighbor_list = neighbor_list
 * 
 */
  __pyx_t_4 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(__pyx_v_direct); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 160, __pyx_L1_error)
  __pyx_v_ddirect = __pyx_t_4;

  /* "malio_cy/op_q_spherical_cy.pyx":161
 *         vector[vector[double]] dcoord = coord
 *         vector[vector[double]] ddirect = direct
 *         vector[vector[int]] ineighbor_list = neighbor_list             # <<<<<<<<<<<<<<
 * 
 *         dvec q_val = dvec()
 */
  __pyx_t_5 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(__pyx_v_neighbor_list); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 161, __pyx_L1_error)
  __pyx_v_ineighbor_list = __pyx_t_5;

  /* "malio_cy/op_q_spherical_cy.pyx":163
 *         vector[vector[int]] ineighbor_list = neighbor_list
 * 
 *         dvec q_val = dvec()             # <<<<<<<<<<<<<<
 *         cvec q_temp = cvec()
 *         cvec cpart = cvec()
 */
  try {
    __pyx_t_6 = __pyx_t_8malio_cy_12malio_cy_def_dvec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 163, __pyx_L1_error)
  }
  __pyx_v_q_val = __pyx_t_6;

  /* "malio_cy/op_q_spherical_cy.pyx":164
 * 
 *         dvec q_val = dvec()
 *         cvec q_temp = cvec()             # <<<<<<<<<<<<<<
 *         cvec cpart = cvec()
 *         cvec_vec q_func_name_old = cvec_vec()
 */
  try {
    __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_cvec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 164, __pyx_L1_error)
  }
  __pyx_v_q_temp = __pyx_t_7;

  /* "malio_cy/op_q_spherical_cy.pyx":165
 *         dvec q_val = dvec()
 *         cvec q_temp = cvec()
 *         cvec cpart = cvec()             # <<<<<<<<<<<<<<
 *         cvec_vec q_func_name_old = cvec_vec()
 *         double complex sphharm, part_temp, cl_neighbor_list_ii_1, I = 1j, comp
 */
  try {
    __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_cvec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 165, __pyx_L1_error)
  }
  __pyx_v_cpart = __pyx_t_7;

  /* "malio_cy/op_q_spherical_cy.pyx":166
 *         cvec q_temp = cvec()
 *         cvec cpart = cvec()
 *         cvec_vec q_func_name_old = cvec_vec()             # <<<<<<<<<<<<<<
 *         double complex sphharm, part_temp, cl_neighbor_list_ii_1, I = 1j, comp
 * 
 */
  try {
    __pyx_t_8 = __pyx_t_8malio_cy_12malio_cy_def_cvec_vec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 166, __pyx_L1_error)
  }
  __pyx_v_q_func_name_old = __pyx_t_8;

  /* "malio_cy/op_q_spherical_cy.pyx":167
 *         cvec cpart = cvec()
 *         cvec_vec q_func_name_old = cvec_vec()
 *         double complex sphharm, part_temp, cl_neighbor_list_ii_1, I = 1j, comp             # <<<<<<<<<<<<<<
 * 
 *     q_func_temp= []
 */
  __pyx_v_I = __pyx_t_double_complex_from_parts(0, 1.0);

  /* "malio_cy/op_q_spherical_cy.pyx":169
 *         double complex sphharm, part_temp, cl_neighbor_list_ii_1, I = 1j, comp
 * 
 *     q_func_temp= []             # <<<<<<<<<<<<<<
 *     for i_i in range(len_c):
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_q_func_temp = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":170
 * 
 *     q_func_temp= []
 *     for i_i in range(len_c):             # <<<<<<<<<<<<<<
 * 
 *         l_neighbor_list_ii = len(neighbor_list[i_i])
 */
  __pyx_t_9 = __pyx_v_len_c;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i_i = __pyx_t_11;

    /* "malio_cy/op_q_spherical_cy.pyx":172
 *     for i_i in range(len_c):
 * 
 *         l_neighbor_list_ii = len(neighbor_list[i_i])             # <<<<<<<<<<<<<<
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *                 for l_sph in l_list for o_f in o_factor
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_neighbor_list, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 172, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_l_neighbor_list_ii = __pyx_t_2;

    /* "malio_cy/op_q_spherical_cy.pyx":173
 * 
 *         l_neighbor_list_ii = len(neighbor_list[i_i])
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *                 for l_sph in l_list for o_f in o_factor
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "malio_cy/op_q_spherical_cy.pyx":174
 *         l_neighbor_list_ii = len(neighbor_list[i_i])
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *                 for l_sph in l_list for o_f in o_factor             # <<<<<<<<<<<<<<
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
    if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
      __pyx_t_12 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_12); __pyx_t_2 = 0;
      __pyx_t_13 = NULL;
    } else {
      __pyx_t_2 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = Py_TYPE(__pyx_t_12)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 174, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_13)) {
        if (likely(PyList_CheckExact(__pyx_t_12))) {
          if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_12)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_14 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_14); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
          #else
          __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          #endif
        } else {
          if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_14); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
          #else
          __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          #endif
        }
      } else {
        __pyx_t_14 = __pyx_t_13(__pyx_t_12);
        if (unlikely(!__pyx_t_14)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 174, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_14);
      }
      __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_v_l_sph = __pyx_t_15;
      if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
        __pyx_t_14 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_14); __pyx_t_16 = 0;
        __pyx_t_17 = NULL;
      } else {
        __pyx_t_16 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_17 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 174, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_17)) {
          if (likely(PyList_CheckExact(__pyx_t_14))) {
            if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_14)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_18 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_18); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
            #else
            __pyx_t_18 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 174, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            #endif
          } else {
            if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_18); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
            #else
            __pyx_t_18 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 174, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            #endif
          }
        } else {
          __pyx_t_18 = __pyx_t_17(__pyx_t_14);
          if (unlikely(!__pyx_t_18)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 174, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_18);
        }
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_18); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_v_o_f = __pyx_t_15;

        /* "malio_cy/op_q_spherical_cy.pyx":175
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *                 for l_sph in l_list for o_f in o_factor
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *         res = {}
 */
        if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
          __pyx_t_18 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_18); __pyx_t_19 = 0;
          __pyx_t_20 = NULL;
        } else {
          __pyx_t_19 = -1; __pyx_t_18 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 175, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_20 = Py_TYPE(__pyx_t_18)->tp_iternext; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 175, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_20)) {
            if (likely(PyList_CheckExact(__pyx_t_18))) {
              if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_18)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_21 = PyList_GET_ITEM(__pyx_t_18, __pyx_t_19); __Pyx_INCREF(__pyx_t_21); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 175, __pyx_L1_error)
              #else
              __pyx_t_21 = PySequence_ITEM(__pyx_t_18, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 175, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_21);
              #endif
            } else {
              if (__pyx_t_19 >= PyTuple_GET_SIZE(__pyx_t_18)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_18, __pyx_t_19); __Pyx_INCREF(__pyx_t_21); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 175, __pyx_L1_error)
              #else
              __pyx_t_21 = PySequence_ITEM(__pyx_t_18, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 175, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_21);
              #endif
            }
          } else {
            __pyx_t_21 = __pyx_t_20(__pyx_t_18);
            if (unlikely(!__pyx_t_21)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 175, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_21);
          }
          __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_21); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 175, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
          __pyx_v_o_i = __pyx_t_15;
          if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
            __pyx_t_21 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_21); __pyx_t_22 = 0;
            __pyx_t_23 = NULL;
          } else {
            __pyx_t_22 = -1; __pyx_t_21 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 175, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_21);
            __pyx_t_23 = Py_TYPE(__pyx_t_21)->tp_iternext; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 175, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_23)) {
              if (likely(PyList_CheckExact(__pyx_t_21))) {
                if (__pyx_t_22 >= PyList_GET_SIZE(__pyx_t_21)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_24 = PyList_GET_ITEM(__pyx_t_21, __pyx_t_22); __Pyx_INCREF(__pyx_t_24); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 175, __pyx_L1_error)
                #else
                __pyx_t_24 = PySequence_ITEM(__pyx_t_21, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 175, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_24);
                #endif
              } else {
                if (__pyx_t_22 >= PyTuple_GET_SIZE(__pyx_t_21)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_24 = PyTuple_GET_ITEM(__pyx_t_21, __pyx_t_22); __Pyx_INCREF(__pyx_t_24); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 175, __pyx_L1_error)
                #else
                __pyx_t_24 = PySequence_ITEM(__pyx_t_21, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 175, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_24);
                #endif
              }
            } else {
              __pyx_t_24 = __pyx_t_23(__pyx_t_21);
              if (unlikely(!__pyx_t_24)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 175, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_24);
            }
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 175, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
            __pyx_v_o_j = __pyx_t_15;
            if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
              __pyx_t_24 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_24); __pyx_t_25 = 0;
              __pyx_t_26 = NULL;
            } else {
              __pyx_t_25 = -1; __pyx_t_24 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 175, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_24);
              __pyx_t_26 = Py_TYPE(__pyx_t_24)->tp_iternext; if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 175, __pyx_L1_error)
            }
            for (;;) {
              if (likely(!__pyx_t_26)) {
                if (likely(PyList_CheckExact(__pyx_t_24))) {
                  if (__pyx_t_25 >= PyList_GET_SIZE(__pyx_t_24)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_27 = PyList_GET_ITEM(__pyx_t_24, __pyx_t_25); __Pyx_INCREF(__pyx_t_27); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 175, __pyx_L1_error)
                  #else
                  __pyx_t_27 = PySequence_ITEM(__pyx_t_24, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 175, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_27);
                  #endif
                } else {
                  if (__pyx_t_25 >= PyTuple_GET_SIZE(__pyx_t_24)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_27 = PyTuple_GET_ITEM(__pyx_t_24, __pyx_t_25); __Pyx_INCREF(__pyx_t_27); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 175, __pyx_L1_error)
                  #else
                  __pyx_t_27 = PySequence_ITEM(__pyx_t_24, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 175, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_27);
                  #endif
                }
              } else {
                __pyx_t_27 = __pyx_t_26(__pyx_t_24);
                if (unlikely(!__pyx_t_27)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else __PYX_ERR(0, 175, __pyx_L1_error)
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_27);
              }
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 175, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
              __pyx_v_p_weight = __pyx_t_15;

              /* "malio_cy/op_q_spherical_cy.pyx":173
 * 
 *         l_neighbor_list_ii = len(neighbor_list[i_i])
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *                 for l_sph in l_list for o_f in o_factor
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
              __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_27);
              __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_28);
              __pyx_t_29 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_29);
              __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_30);
              __pyx_t_31 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_31);
              __pyx_t_32 = PyTuple_New(5); if (unlikely(!__pyx_t_32)) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_32);
              __Pyx_GIVEREF(__pyx_t_27);
              PyTuple_SET_ITEM(__pyx_t_32, 0, __pyx_t_27);
              __Pyx_GIVEREF(__pyx_t_28);
              PyTuple_SET_ITEM(__pyx_t_32, 1, __pyx_t_28);
              __Pyx_GIVEREF(__pyx_t_29);
              PyTuple_SET_ITEM(__pyx_t_32, 2, __pyx_t_29);
              __Pyx_GIVEREF(__pyx_t_30);
              PyTuple_SET_ITEM(__pyx_t_32, 3, __pyx_t_30);
              __Pyx_GIVEREF(__pyx_t_31);
              PyTuple_SET_ITEM(__pyx_t_32, 4, __pyx_t_31);
              __pyx_t_27 = 0;
              __pyx_t_28 = 0;
              __pyx_t_29 = 0;
              __pyx_t_30 = 0;
              __pyx_t_31 = 0;
              if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_32))) __PYX_ERR(0, 173, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_32); __pyx_t_32 = 0;

              /* "malio_cy/op_q_spherical_cy.pyx":175
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *                 for l_sph in l_list for o_f in o_factor
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *         res = {}
 */
            }
            __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          }
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        }
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":174
 *         l_neighbor_list_ii = len(neighbor_list[i_i])
 *         comb = [(l_sph, o_f, o_i, o_j, p_weight)
 *                 for l_sph in l_list for o_f in o_factor             # <<<<<<<<<<<<<<
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":177
 *                 for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 *         res = {}             # <<<<<<<<<<<<<<
 *         for l_sph, o_f, o_i, o_j, p_weight in comb:
 *             name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_res, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":178
 * 
 *         res = {}
 *         for l_sph, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *             name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 *             l_sph2p1 = 2*l_sph+1
 */
    __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    for (;;) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_12 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_12); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
      #else
      __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      #endif
      if ((likely(PyTuple_CheckExact(__pyx_t_12))) || (PyList_CheckExact(__pyx_t_12))) {
        PyObject* sequence = __pyx_t_12;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 5)) {
          if (size > 5) __Pyx_RaiseTooManyValuesError(5);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 178, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_14 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_18 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_21 = PyTuple_GET_ITEM(sequence, 2); 
          __pyx_t_24 = PyTuple_GET_ITEM(sequence, 3); 
          __pyx_t_32 = PyTuple_GET_ITEM(sequence, 4); 
        } else {
          __pyx_t_14 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_18 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_21 = PyList_GET_ITEM(sequence, 2); 
          __pyx_t_24 = PyList_GET_ITEM(sequence, 3); 
          __pyx_t_32 = PyList_GET_ITEM(sequence, 4); 
        }
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(__pyx_t_18);
        __Pyx_INCREF(__pyx_t_21);
        __Pyx_INCREF(__pyx_t_24);
        __Pyx_INCREF(__pyx_t_32);
        #else
        {
          Py_ssize_t i;
          PyObject** temps[5] = {&__pyx_t_14,&__pyx_t_18,&__pyx_t_21,&__pyx_t_24,&__pyx_t_32};
          for (i=0; i < 5; i++) {
            PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 178, __pyx_L1_error)
            __Pyx_GOTREF(item);
            *(temps[i]) = item;
          }
        }
        #endif
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      } else {
        Py_ssize_t index = -1;
        PyObject** temps[5] = {&__pyx_t_14,&__pyx_t_18,&__pyx_t_21,&__pyx_t_24,&__pyx_t_32};
        __pyx_t_31 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_31);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_33 = Py_TYPE(__pyx_t_31)->tp_iternext;
        for (index=0; index < 5; index++) {
          PyObject* item = __pyx_t_33(__pyx_t_31); if (unlikely(!item)) goto __pyx_L17_unpacking_failed;
          __Pyx_GOTREF(item);
          *(temps[index]) = item;
        }
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_33(__pyx_t_31), 5) < 0) __PYX_ERR(0, 178, __pyx_L1_error)
        __pyx_t_33 = NULL;
        __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
        goto __pyx_L18_unpacking_done;
        __pyx_L17_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
        __pyx_t_33 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 178, __pyx_L1_error)
        __pyx_L18_unpacking_done:;
      }
      __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_t_34 = __Pyx_PyInt_As_int(__pyx_t_18); if (unlikely((__pyx_t_34 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __pyx_t_35 = __Pyx_PyInt_As_int(__pyx_t_21); if (unlikely((__pyx_t_35 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
      __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      __pyx_t_37 = __Pyx_PyInt_As_int(__pyx_t_32); if (unlikely((__pyx_t_37 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_32); __pyx_t_32 = 0;
      __pyx_v_l_sph = __pyx_t_15;
      __pyx_v_o_f = __pyx_t_34;
      __pyx_v_o_i = __pyx_t_35;
      __pyx_v_o_j = __pyx_t_36;
      __pyx_v_p_weight = __pyx_t_37;

      /* "malio_cy/op_q_spherical_cy.pyx":179
 *         res = {}
 *         for l_sph, o_f, o_i, o_j, p_weight in comb:
 *             name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *             l_sph2p1 = 2*l_sph+1
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_32, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_32)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_32);
      __pyx_t_24 = __Pyx_PyObject_GetAttrStr(__pyx_t_32, __pyx_n_s_naming); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_24);
      __Pyx_DECREF(__pyx_t_32); __pyx_t_32 = 0;
      __pyx_t_32 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_32)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_32);
      __pyx_t_21 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_31 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_31);
      __pyx_t_30 = PyList_New(7); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_30);
      __Pyx_GIVEREF(__pyx_t_32);
      PyList_SET_ITEM(__pyx_t_30, 0, __pyx_t_32);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyList_SET_ITEM(__pyx_t_30, 1, __pyx_int_0);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyList_SET_ITEM(__pyx_t_30, 2, __pyx_int_0);
      __Pyx_GIVEREF(__pyx_t_21);
      PyList_SET_ITEM(__pyx_t_30, 3, __pyx_t_21);
      __Pyx_GIVEREF(__pyx_t_18);
      PyList_SET_ITEM(__pyx_t_30, 4, __pyx_t_18);
      __Pyx_GIVEREF(__pyx_t_14);
      PyList_SET_ITEM(__pyx_t_30, 5, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_31);
      PyList_SET_ITEM(__pyx_t_30, 6, __pyx_t_31);
      __pyx_t_32 = 0;
      __pyx_t_21 = 0;
      __pyx_t_18 = 0;
      __pyx_t_14 = 0;
      __pyx_t_31 = 0;
      __pyx_t_31 = NULL;
      __pyx_t_37 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_24))) {
        __pyx_t_31 = PyMethod_GET_SELF(__pyx_t_24);
        if (likely(__pyx_t_31)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_24);
          __Pyx_INCREF(__pyx_t_31);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_24, function);
          __pyx_t_37 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_24)) {
        PyObject *__pyx_temp[3] = {__pyx_t_31, __pyx_n_s_q, __pyx_t_30};
        __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_24, __pyx_temp+1-__pyx_t_37, 2+__pyx_t_37); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 179, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_31); __pyx_t_31 = 0;
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_24)) {
        PyObject *__pyx_temp[3] = {__pyx_t_31, __pyx_n_s_q, __pyx_t_30};
        __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_24, __pyx_temp+1-__pyx_t_37, 2+__pyx_t_37); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 179, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_31); __pyx_t_31 = 0;
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      } else
      #endif
      {
        __pyx_t_14 = PyTuple_New(2+__pyx_t_37); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 179, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        if (__pyx_t_31) {
          __Pyx_GIVEREF(__pyx_t_31); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_31); __pyx_t_31 = NULL;
        }
        __Pyx_INCREF(__pyx_n_s_q);
        __Pyx_GIVEREF(__pyx_n_s_q);
        PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_37, __pyx_n_s_q);
        __Pyx_GIVEREF(__pyx_t_30);
        PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_37, __pyx_t_30);
        __pyx_t_30 = 0;
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_24, __pyx_t_14, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 179, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      }
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_12);
      __pyx_t_12 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":180
 *         for l_sph, o_f, o_i, o_j, p_weight in comb:
 *             name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 *             l_sph2p1 = 2*l_sph+1             # <<<<<<<<<<<<<<
 * 
 *             ### x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 */
      __pyx_v_l_sph2p1 = ((2 * __pyx_v_l_sph) + 1);

      /* "malio_cy/op_q_spherical_cy.pyx":183
 * 
 *             ### x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 *             for i in range(3):             # <<<<<<<<<<<<<<
 *                 x_i[i] = dcoord[i_i][i] + <double>o_f * <double>o_i * ddirect[i_i][i]
 * 
 */
      for (__pyx_t_37 = 0; __pyx_t_37 < 3; __pyx_t_37+=1) {
        __pyx_v_i = __pyx_t_37;

        /* "malio_cy/op_q_spherical_cy.pyx":184
 *             ### x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 *             for i in range(3):
 *                 x_i[i] = dcoord[i_i][i] + <double>o_f * <double>o_i * ddirect[i_i][i]             # <<<<<<<<<<<<<<
 * 
 *             # neighbor
 */
        (__pyx_v_x_i[__pyx_v_i]) = (((__pyx_v_dcoord[__pyx_v_i_i])[__pyx_v_i]) + ((((double)__pyx_v_o_f) * ((double)__pyx_v_o_i)) * ((__pyx_v_ddirect[__pyx_v_i_i])[__pyx_v_i])));
      }

      /* "malio_cy/op_q_spherical_cy.pyx":188
 *             # neighbor
 *             ### q_temp = np.array([0 + 0j for i in range(2 * l_sph + 1)])
 *             q_temp = cvec(l_sph2p1)             # <<<<<<<<<<<<<<
 *             ### for i_j in neighbor_list[i_i]:
 *             for i_2 in range(l_neighbor_list_ii):
 */
      try {
        __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_cvec(__pyx_v_l_sph2p1);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 188, __pyx_L1_error)
      }
      __pyx_v_q_temp = __pyx_t_7;

      /* "malio_cy/op_q_spherical_cy.pyx":190
 *             q_temp = cvec(l_sph2p1)
 *             ### for i_j in neighbor_list[i_i]:
 *             for i_2 in range(l_neighbor_list_ii):             # <<<<<<<<<<<<<<
 *                 i_j = ineighbor_list[i_i][i_2]
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 */
      __pyx_t_37 = __pyx_v_l_neighbor_list_ii;
      __pyx_t_36 = __pyx_t_37;
      for (__pyx_t_35 = 0; __pyx_t_35 < __pyx_t_36; __pyx_t_35+=1) {
        __pyx_v_i_2 = __pyx_t_35;

        /* "malio_cy/op_q_spherical_cy.pyx":191
 *             ### for i_j in neighbor_list[i_i]:
 *             for i_2 in range(l_neighbor_list_ii):
 *                 i_j = ineighbor_list[i_i][i_2]             # <<<<<<<<<<<<<<
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *                 for i in range(3):
 */
        __pyx_v_i_j = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_i_2]);

        /* "malio_cy/op_q_spherical_cy.pyx":193
 *                 i_j = ineighbor_list[i_i][i_2]
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 */
        for (__pyx_t_34 = 0; __pyx_t_34 < 3; __pyx_t_34+=1) {
          __pyx_v_i = __pyx_t_34;

          /* "malio_cy/op_q_spherical_cy.pyx":194
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *                 for i in range(3):
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]             # <<<<<<<<<<<<<<
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *                 for i in range(3):
 */
          (__pyx_v_x_j[__pyx_v_i]) = (((__pyx_v_dcoord[__pyx_v_i_j])[__pyx_v_i]) + ((((double)__pyx_v_o_f) * ((double)__pyx_v_o_j)) * ((__pyx_v_ddirect[__pyx_v_i_j])[__pyx_v_i])));
        }

        /* "malio_cy/op_q_spherical_cy.pyx":196
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:
 */
        for (__pyx_t_34 = 0; __pyx_t_34 < 3; __pyx_t_34+=1) {
          __pyx_v_i = __pyx_t_34;

          /* "malio_cy/op_q_spherical_cy.pyx":197
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *                 for i in range(3):
 *                     delta[i] = x_j[i] - x_i[i]             # <<<<<<<<<<<<<<
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]
 */
          (__pyx_v_delta[__pyx_v_i]) = ((__pyx_v_x_j[__pyx_v_i]) - (__pyx_v_x_i[__pyx_v_i]));

          /* "malio_cy/op_q_spherical_cy.pyx":198
 *                 for i in range(3):
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 */
          __pyx_t_38 = (((__pyx_v_delta[__pyx_v_i]) < ((-(__pyx_v_dbox_length[__pyx_v_i])) * 0.5)) != 0);
          if (__pyx_t_38) {

            /* "malio_cy/op_q_spherical_cy.pyx":199
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]             # <<<<<<<<<<<<<<
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 *                         delta[i] -= dbox_length[i]
 */
            __pyx_t_15 = __pyx_v_i;
            (__pyx_v_delta[__pyx_t_15]) = ((__pyx_v_delta[__pyx_t_15]) + (__pyx_v_dbox_length[__pyx_v_i]));

            /* "malio_cy/op_q_spherical_cy.pyx":198
 *                 for i in range(3):
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 */
            goto __pyx_L27;
          }

          /* "malio_cy/op_q_spherical_cy.pyx":200
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] -= dbox_length[i]
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 */
          __pyx_t_38 = (((__pyx_v_delta[__pyx_v_i]) >= ((__pyx_v_dbox_length[__pyx_v_i]) * 0.5)) != 0);
          if (__pyx_t_38) {

            /* "malio_cy/op_q_spherical_cy.pyx":201
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 *                         delta[i] -= dbox_length[i]             # <<<<<<<<<<<<<<
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 *                 dist = 0.0
 */
            __pyx_t_15 = __pyx_v_i;
            (__pyx_v_delta[__pyx_t_15]) = ((__pyx_v_delta[__pyx_t_15]) - (__pyx_v_dbox_length[__pyx_v_i]));

            /* "malio_cy/op_q_spherical_cy.pyx":200
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] -= dbox_length[i]
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 */
          }
          __pyx_L27:;
        }

        /* "malio_cy/op_q_spherical_cy.pyx":203
 *                         delta[i] -= dbox_length[i]
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 *                 dist = 0.0             # <<<<<<<<<<<<<<
 *                 for i in range(3):
 *                     dist += delta[i]*delta[i]
 */
        __pyx_v_dist = 0.0;

        /* "malio_cy/op_q_spherical_cy.pyx":204
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 *                 dist = 0.0
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     dist += delta[i]*delta[i]
 *                 dist = math.sqrt(dist)
 */
        for (__pyx_t_34 = 0; __pyx_t_34 < 3; __pyx_t_34+=1) {
          __pyx_v_i = __pyx_t_34;

          /* "malio_cy/op_q_spherical_cy.pyx":205
 *                 dist = 0.0
 *                 for i in range(3):
 *                     dist += delta[i]*delta[i]             # <<<<<<<<<<<<<<
 *                 dist = math.sqrt(dist)
 *                 theta = math.acos(delta[2] / dist)
 */
          __pyx_v_dist = (__pyx_v_dist + ((__pyx_v_delta[__pyx_v_i]) * (__pyx_v_delta[__pyx_v_i])));
        }

        /* "malio_cy/op_q_spherical_cy.pyx":206
 *                 for i in range(3):
 *                     dist += delta[i]*delta[i]
 *                 dist = math.sqrt(dist)             # <<<<<<<<<<<<<<
 *                 theta = math.acos(delta[2] / dist)
 *                 phi = math.atan2(delta[1], delta[0])
 */
        __pyx_v_dist = sqrt(__pyx_v_dist);

        /* "malio_cy/op_q_spherical_cy.pyx":207
 *                     dist += delta[i]*delta[i]
 *                 dist = math.sqrt(dist)
 *                 theta = math.acos(delta[2] / dist)             # <<<<<<<<<<<<<<
 *                 phi = math.atan2(delta[1], delta[0])
 * 
 */
        __pyx_v_theta = acos(((__pyx_v_delta[2]) / __pyx_v_dist));

        /* "malio_cy/op_q_spherical_cy.pyx":208
 *                 dist = math.sqrt(dist)
 *                 theta = math.acos(delta[2] / dist)
 *                 phi = math.atan2(delta[1], delta[0])             # <<<<<<<<<<<<<<
 * 
 *                 ### q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 */
        __pyx_v_phi = atan2((__pyx_v_delta[1]), (__pyx_v_delta[0]));

        /* "malio_cy/op_q_spherical_cy.pyx":213
 *                 ### for i_k in range(2 * l_sph + 1):
 *                 ###     q_temp[i_k] += q_l[i_k]
 *                 q_temp[0] += sph_harm_cy(l_sph, 0, theta, phi)             # <<<<<<<<<<<<<<
 *                 for m_sph in range(1, l_sph + 1):
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)
 */
        __pyx_t_39 = 0;
        __pyx_t_40 = (__pyx_v_q_temp[__pyx_t_39]);
        (__pyx_v_q_temp[__pyx_t_39]) = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_40), __Pyx_CIMAG(__pyx_t_40)), __pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(__pyx_v_l_sph, 0, __pyx_v_theta, __pyx_v_phi, 0));

        /* "malio_cy/op_q_spherical_cy.pyx":214
 *                 ###     q_temp[i_k] += q_l[i_k]
 *                 q_temp[0] += sph_harm_cy(l_sph, 0, theta, phi)
 *                 for m_sph in range(1, l_sph + 1):             # <<<<<<<<<<<<<<
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)
 *                     q_temp[m_sph] += sphharm
 */
        __pyx_t_41 = (__pyx_v_l_sph + 1);
        __pyx_t_42 = __pyx_t_41;
        for (__pyx_t_34 = 1; __pyx_t_34 < __pyx_t_42; __pyx_t_34+=1) {
          __pyx_v_m_sph = __pyx_t_34;

          /* "malio_cy/op_q_spherical_cy.pyx":215
 *                 q_temp[0] += sph_harm_cy(l_sph, 0, theta, phi)
 *                 for m_sph in range(1, l_sph + 1):
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)             # <<<<<<<<<<<<<<
 *                     q_temp[m_sph] += sphharm
 *                     q_temp[l_sph2p1-m_sph] += sphharm
 */
          __pyx_v_sphharm = __pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(__pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi, 0);

          /* "malio_cy/op_q_spherical_cy.pyx":216
 *                 for m_sph in range(1, l_sph + 1):
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)
 *                     q_temp[m_sph] += sphharm             # <<<<<<<<<<<<<<
 *                     q_temp[l_sph2p1-m_sph] += sphharm
 * 
 */
          __pyx_t_15 = __pyx_v_m_sph;
          __pyx_t_40 = (__pyx_v_q_temp[__pyx_t_15]);
          (__pyx_v_q_temp[__pyx_t_15]) = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_40), __Pyx_CIMAG(__pyx_t_40)), __pyx_v_sphharm);

          /* "malio_cy/op_q_spherical_cy.pyx":217
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)
 *                     q_temp[m_sph] += sphharm
 *                     q_temp[l_sph2p1-m_sph] += sphharm             # <<<<<<<<<<<<<<
 * 
 *             # self director
 */
          __pyx_t_15 = (__pyx_v_l_sph2p1 - __pyx_v_m_sph);
          __pyx_t_40 = (__pyx_v_q_temp[__pyx_t_15]);
          (__pyx_v_q_temp[__pyx_t_15]) = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_40), __Pyx_CIMAG(__pyx_t_40)), __pyx_v_sphharm);
        }
      }

      /* "malio_cy/op_q_spherical_cy.pyx":220
 * 
 *             # self director
 *             if type(p_weight) == type('string') and 'N' in p_weight:             # <<<<<<<<<<<<<<
 *                 # p_weight == [ 'N', 'N/2', '2*N' ]
 *                 N = len(neighbor_list[i_i])
 */
      __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_24 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_t_12)), ((PyObject *)Py_TYPE(__pyx_n_s_string)), Py_EQ); __Pyx_XGOTREF(__pyx_t_24); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_43 = __Pyx_PyObject_IsTrue(__pyx_t_24); if (unlikely(__pyx_t_43 < 0)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      if (__pyx_t_43) {
      } else {
        __pyx_t_38 = __pyx_t_43;
        goto __pyx_L33_bool_binop_done;
      }
      __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_24);
      __pyx_t_43 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_N, __pyx_t_24, Py_EQ)); if (unlikely(__pyx_t_43 < 0)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      __pyx_t_44 = (__pyx_t_43 != 0);
      __pyx_t_38 = __pyx_t_44;
      __pyx_L33_bool_binop_done:;
      if (__pyx_t_38) {

        /* "malio_cy/op_q_spherical_cy.pyx":222
 *             if type(p_weight) == type('string') and 'N' in p_weight:
 *                 # p_weight == [ 'N', 'N/2', '2*N' ]
 *                 N = len(neighbor_list[i_i])             # <<<<<<<<<<<<<<
 *                 p_fact = eval(p_weight)
 *             else:
 */
        __pyx_t_24 = __Pyx_GetItemInt(__pyx_v_neighbor_list, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 222, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_24);
        __pyx_t_16 = PyObject_Length(__pyx_t_24); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 222, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        __pyx_v_N = __pyx_t_16;

        /* "malio_cy/op_q_spherical_cy.pyx":223
 *                 # p_weight == [ 'N', 'N/2', '2*N' ]
 *                 N = len(neighbor_list[i_i])
 *                 p_fact = eval(p_weight)             # <<<<<<<<<<<<<<
 *             else:
 *                 p_fact = p_weight
 */
        __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_24);
        __pyx_t_12 = __Pyx_Globals(); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_14 = __Pyx_PyDict_NewPresized(67); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_30 = __pyx_PyComplex_FromComplex(__pyx_v_I); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_I, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyInt_FromSsize_t(__pyx_v_N); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_N, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_PI4); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_PI4, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_a_t) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_a_t, __pyx_v_a_t) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_a_times) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_a_times, __pyx_v_a_times) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_b_t) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_b_t, __pyx_v_b_t) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_b_times) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_b_times, __pyx_v_b_times) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_box_length) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_box_length, __pyx_v_box_length) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __pyx_PyComplex_FromComplex(__pyx_v_cl_neighbor_list_ii_1); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_cl_neighbor_list_ii_1, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_comb) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_comb, __pyx_v_comb) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __pyx_PyComplex_FromComplex(__pyx_v_comp); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_comp, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_coord) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_coord, __pyx_v_coord) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __pyx_convert_vector_to_py___pyx_t_double_complex(__pyx_v_cpart); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_cpart, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __pyx_convert_vector_to_py_double(__pyx_v_dbox_length); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_dbox_length, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___(__pyx_v_dcoord); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_dcoord, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___(__pyx_v_ddirect); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_ddirect, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_carray_to_py_double(__pyx_v_delta, 3); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_delta, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_direct) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_direct, __pyx_v_direct) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_dist); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_dist, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_dl_neighbor_list_ii_1); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_dl_neighbor_list_ii_1, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_dpart); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_dpart, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_i, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_i_2); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_i_2, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_i_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_i_i, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_i_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_i_j, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_i_k); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_i_k, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_ii_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_ii_j, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_inei); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_inei, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(__pyx_v_ineighbor_list); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_ineighbor_list, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_inv_l_sph2p1); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_inv_l_sph2p1, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_j, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_l_list) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_l_list, __pyx_v_l_list) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_l_neighbor_list_ii); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_l_neighbor_list_ii, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_l_q_func_name_old_0); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_l_q_func_name_old_0, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_l_sph, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_l_sph2p1); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_l_sph2p1, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_len_c); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_len_c, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_m_sph); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_m_sph, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_name) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_name_old) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_name_old, __pyx_v_name_old) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_neighbor_list) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_neighbor_list, __pyx_v_neighbor_list) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_o_f, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_o_factor) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_o_factor, __pyx_v_o_factor) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_o_i, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_o_j, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_oi_list_not_oi) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_oi_list_not_oi, __pyx_v_oi_list_not_oi) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_oi_oj) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_oi_oj, __pyx_v_oi_oj) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_op_data) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_op_data, __pyx_v_op_data) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_p_fact) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_p_fact, __pyx_v_p_fact) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_p_list) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_p_list, __pyx_v_p_list) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_p_weight, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __pyx_PyComplex_FromComplex(__pyx_v_part_temp); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_part_temp, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_phi); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_phi, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_q_func) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_q_func, __pyx_v_q_func) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec(__pyx_v_q_func_name_old); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_q_func_name_old, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_q_func_temp) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_q_func_temp, __pyx_v_q_func_temp) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __pyx_convert_vector_to_py___pyx_t_double_complex(__pyx_v_q_temp); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_q_temp, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __pyx_convert_vector_to_py_double(__pyx_v_q_val); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_q_val, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_q_value); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_q_value, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_res) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_res, __pyx_v_res) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        if (__pyx_v_setting) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_setting, __pyx_v_setting) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __pyx_PyComplex_FromComplex(__pyx_v_sphharm); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_sphharm, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_sum_norm2); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_sum_norm2, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyFloat_FromDouble(__pyx_v_theta); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_theta, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        if (__pyx_v_thread_num) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_thread_num, __pyx_v_thread_num) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __pyx_t_30 = __Pyx_carray_to_py_double(__pyx_v_x_i, 3); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_x_i, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_carray_to_py_double(__pyx_v_x_j, 3); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (__pyx_t_30) {
          if (PyDict_SetItem(__pyx_t_14, __pyx_n_s_x_j, __pyx_t_30) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = PyTuple_New(3); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __Pyx_GIVEREF(__pyx_t_24);
        PyTuple_SET_ITEM(__pyx_t_30, 0, __pyx_t_24);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_30, 1, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_14);
        PyTuple_SET_ITEM(__pyx_t_30, 2, __pyx_t_14);
        __pyx_t_24 = 0;
        __pyx_t_12 = 0;
        __pyx_t_14 = 0;
        __pyx_t_14 = __Pyx_PyObject_Call(__pyx_builtin_eval, __pyx_t_30, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __Pyx_XDECREF_SET(__pyx_v_p_fact, __pyx_t_14);
        __pyx_t_14 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":220
 * 
 *             # self director
 *             if type(p_weight) == type('string') and 'N' in p_weight:             # <<<<<<<<<<<<<<
 *                 # p_weight == [ 'N', 'N/2', '2*N' ]
 *                 N = len(neighbor_list[i_i])
 */
        goto __pyx_L32;
      }

      /* "malio_cy/op_q_spherical_cy.pyx":225
 *                 p_fact = eval(p_weight)
 *             else:
 *                 p_fact = p_weight             # <<<<<<<<<<<<<<
 * 
 *             oi_list_not_oi = []
 */
      /*else*/ {
        __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 225, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_XDECREF_SET(__pyx_v_p_fact, __pyx_t_14);
        __pyx_t_14 = 0;
      }
      __pyx_L32:;

      /* "malio_cy/op_q_spherical_cy.pyx":227
 *                 p_fact = p_weight
 * 
 *             oi_list_not_oi = []             # <<<<<<<<<<<<<<
 *             for i_j in oi_oj:
 *                 if i_j != o_i:
 */
      __pyx_t_14 = PyList_New(0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 227, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_XDECREF_SET(__pyx_v_oi_list_not_oi, ((PyObject*)__pyx_t_14));
      __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":228
 * 
 *             oi_list_not_oi = []
 *             for i_j in oi_oj:             # <<<<<<<<<<<<<<
 *                 if i_j != o_i:
 *                     oi_list_not_oi.append(i_j)
 */
      if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
        __pyx_t_14 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_14); __pyx_t_16 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_16 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 228, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_13 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 228, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_14))) {
            if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_14)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_30 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 228, __pyx_L1_error)
            #else
            __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 228, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            #endif
          } else {
            if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_30 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 228, __pyx_L1_error)
            #else
            __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 228, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            #endif
          }
        } else {
          __pyx_t_30 = __pyx_t_13(__pyx_t_14);
          if (unlikely(!__pyx_t_30)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 228, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_30);
        }
        __pyx_t_37 = __Pyx_PyInt_As_int(__pyx_t_30); if (unlikely((__pyx_t_37 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 228, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_v_i_j = __pyx_t_37;

        /* "malio_cy/op_q_spherical_cy.pyx":229
 *             oi_list_not_oi = []
 *             for i_j in oi_oj:
 *                 if i_j != o_i:             # <<<<<<<<<<<<<<
 *                     oi_list_not_oi.append(i_j)
 *             for i_j in oi_list_not_oi:
 */
        __pyx_t_38 = ((__pyx_v_i_j != __pyx_v_o_i) != 0);
        if (__pyx_t_38) {

          /* "malio_cy/op_q_spherical_cy.pyx":230
 *             for i_j in oi_oj:
 *                 if i_j != o_i:
 *                     oi_list_not_oi.append(i_j)             # <<<<<<<<<<<<<<
 *             for i_j in oi_list_not_oi:
 *                 ### x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i] for i in range(3)]
 */
          __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_i_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 230, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __pyx_t_45 = __Pyx_PyList_Append(__pyx_v_oi_list_not_oi, __pyx_t_30); if (unlikely(__pyx_t_45 == ((int)-1))) __PYX_ERR(0, 230, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;

          /* "malio_cy/op_q_spherical_cy.pyx":229
 *             oi_list_not_oi = []
 *             for i_j in oi_oj:
 *                 if i_j != o_i:             # <<<<<<<<<<<<<<
 *                     oi_list_not_oi.append(i_j)
 *             for i_j in oi_list_not_oi:
 */
        }

        /* "malio_cy/op_q_spherical_cy.pyx":228
 * 
 *             oi_list_not_oi = []
 *             for i_j in oi_oj:             # <<<<<<<<<<<<<<
 *                 if i_j != o_i:
 *                     oi_list_not_oi.append(i_j)
 */
      }
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":231
 *                 if i_j != o_i:
 *                     oi_list_not_oi.append(i_j)
 *             for i_j in oi_list_not_oi:             # <<<<<<<<<<<<<<
 *                 ### x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i] for i in range(3)]
 *                 for i in range(3):
 */
      __pyx_t_14 = __pyx_v_oi_list_not_oi; __Pyx_INCREF(__pyx_t_14); __pyx_t_16 = 0;
      for (;;) {
        if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_14)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_30 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 231, __pyx_L1_error)
        #else
        __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 231, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        #endif
        __pyx_t_37 = __Pyx_PyInt_As_int(__pyx_t_30); if (unlikely((__pyx_t_37 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 231, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_v_i_j = __pyx_t_37;

        /* "malio_cy/op_q_spherical_cy.pyx":233
 *             for i_j in oi_list_not_oi:
 *                 ### x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i] for i in range(3)]
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     x_j = dcoord[i_i][i] + direct[i_i][i]
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 */
        for (__pyx_t_37 = 0; __pyx_t_37 < 3; __pyx_t_37+=1) {
          __pyx_v_i = __pyx_t_37;

          /* "malio_cy/op_q_spherical_cy.pyx":234
 *                 ### x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i] for i in range(3)]
 *                 for i in range(3):
 *                     x_j = dcoord[i_i][i] + direct[i_i][i]             # <<<<<<<<<<<<<<
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *                 for i in range(3):
 */
          __pyx_t_30 = PyFloat_FromDouble(((__pyx_v_dcoord[__pyx_v_i_i])[__pyx_v_i])); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __pyx_t_12 = __Pyx_GetItemInt(__pyx_v_direct, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_24 = __Pyx_GetItemInt(__pyx_t_12, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_t_12 = PyNumber_Add(__pyx_t_30, __pyx_t_24); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          if (unlikely(__Pyx_carray_from_py_double(__pyx_t_12, __pyx_t_46, 3) < 0)) __PYX_ERR(0, 234, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          memcpy(&(__pyx_v_x_j[0]), __pyx_t_46, sizeof(__pyx_v_x_j[0]) * (3));
        }

        /* "malio_cy/op_q_spherical_cy.pyx":236
 *                     x_j = dcoord[i_i][i] + direct[i_i][i]
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:
 */
        for (__pyx_t_37 = 0; __pyx_t_37 < 3; __pyx_t_37+=1) {
          __pyx_v_i = __pyx_t_37;

          /* "malio_cy/op_q_spherical_cy.pyx":237
 *                 ### delta = misc_cy.calc_delta(x_i, x_j, box_length)
 *                 for i in range(3):
 *                     delta[i] = x_j[i] - x_i[i]             # <<<<<<<<<<<<<<
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]
 */
          (__pyx_v_delta[__pyx_v_i]) = ((__pyx_v_x_j[__pyx_v_i]) - (__pyx_v_x_i[__pyx_v_i]));

          /* "malio_cy/op_q_spherical_cy.pyx":238
 *                 for i in range(3):
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 */
          __pyx_t_38 = (((__pyx_v_delta[__pyx_v_i]) < ((-(__pyx_v_dbox_length[__pyx_v_i])) * 0.5)) != 0);
          if (__pyx_t_38) {

            /* "malio_cy/op_q_spherical_cy.pyx":239
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]             # <<<<<<<<<<<<<<
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 *                         delta[i] -= dbox_length[i]
 */
            __pyx_t_36 = __pyx_v_i;
            (__pyx_v_delta[__pyx_t_36]) = ((__pyx_v_delta[__pyx_t_36]) + (__pyx_v_dbox_length[__pyx_v_i]));

            /* "malio_cy/op_q_spherical_cy.pyx":238
 *                 for i in range(3):
 *                     delta[i] = x_j[i] - x_i[i]
 *                     if delta[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 */
            goto __pyx_L44;
          }

          /* "malio_cy/op_q_spherical_cy.pyx":240
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] -= dbox_length[i]
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 */
          __pyx_t_38 = (((__pyx_v_delta[__pyx_v_i]) >= ((__pyx_v_dbox_length[__pyx_v_i]) * 0.5)) != 0);
          if (__pyx_t_38) {

            /* "malio_cy/op_q_spherical_cy.pyx":241
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:
 *                         delta[i] -= dbox_length[i]             # <<<<<<<<<<<<<<
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 *                 dist = 0.0
 */
            __pyx_t_36 = __pyx_v_i;
            (__pyx_v_delta[__pyx_t_36]) = ((__pyx_v_delta[__pyx_t_36]) - (__pyx_v_dbox_length[__pyx_v_i]));

            /* "malio_cy/op_q_spherical_cy.pyx":240
 *                     if delta[i] < -dbox_length[i] * 0.5:
 *                         delta[i] += dbox_length[i]
 *                     elif delta[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                         delta[i] -= dbox_length[i]
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 */
          }
          __pyx_L44:;
        }

        /* "malio_cy/op_q_spherical_cy.pyx":243
 *                         delta[i] -= dbox_length[i]
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 *                 dist = 0.0             # <<<<<<<<<<<<<<
 *                 for i in range(3):
 *                     dist += delta[i]*delta[i]
 */
        __pyx_v_dist = 0.0;

        /* "malio_cy/op_q_spherical_cy.pyx":244
 *                 ### pol = misc_cy.convert_to_theta_phi(delta)
 *                 dist = 0.0
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     dist += delta[i]*delta[i]
 *                 dist = math.sqrt(dist)
 */
        for (__pyx_t_37 = 0; __pyx_t_37 < 3; __pyx_t_37+=1) {
          __pyx_v_i = __pyx_t_37;

          /* "malio_cy/op_q_spherical_cy.pyx":245
 *                 dist = 0.0
 *                 for i in range(3):
 *                     dist += delta[i]*delta[i]             # <<<<<<<<<<<<<<
 *                 dist = math.sqrt(dist)
 *                 theta = math.acos(delta[2] / dist)
 */
          __pyx_v_dist = (__pyx_v_dist + ((__pyx_v_delta[__pyx_v_i]) * (__pyx_v_delta[__pyx_v_i])));
        }

        /* "malio_cy/op_q_spherical_cy.pyx":246
 *                 for i in range(3):
 *                     dist += delta[i]*delta[i]
 *                 dist = math.sqrt(dist)             # <<<<<<<<<<<<<<
 *                 theta = math.acos(delta[2] / dist)
 *                 phi = math.atan2(delta[1], delta[0])
 */
        __pyx_v_dist = sqrt(__pyx_v_dist);

        /* "malio_cy/op_q_spherical_cy.pyx":247
 *                     dist += delta[i]*delta[i]
 *                 dist = math.sqrt(dist)
 *                 theta = math.acos(delta[2] / dist)             # <<<<<<<<<<<<<<
 *                 phi = math.atan2(delta[1], delta[0])
 * 
 */
        __pyx_v_theta = acos(((__pyx_v_delta[2]) / __pyx_v_dist));

        /* "malio_cy/op_q_spherical_cy.pyx":248
 *                 dist = math.sqrt(dist)
 *                 theta = math.acos(delta[2] / dist)
 *                 phi = math.atan2(delta[1], delta[0])             # <<<<<<<<<<<<<<
 * 
 *                 ### q_l = calc_q(l_sph, pol['theta'], pol['phi'])
 */
        __pyx_v_phi = atan2((__pyx_v_delta[1]), (__pyx_v_delta[0]));

        /* "malio_cy/op_q_spherical_cy.pyx":253
 *                 ### for i_k in range(2 * l_sph + 1):
 *                 ###     q_temp[i_k] += p_fact * q_l[i_k]
 *                 q_temp[0] += sph_harm_cy(l_sph, 0, theta, phi)*<double complex>p_fact             # <<<<<<<<<<<<<<
 *                 for m_sph in range(1, l_sph + 1):
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)*<double complex>p_fact
 */
        __pyx_t_39 = 0;
        __pyx_t_40 = (__pyx_v_q_temp[__pyx_t_39]);
        __pyx_t_47 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_p_fact); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 253, __pyx_L1_error)
        (__pyx_v_q_temp[__pyx_t_39]) = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_40), __Pyx_CIMAG(__pyx_t_40)), __Pyx_c_prod_double(__pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(__pyx_v_l_sph, 0, __pyx_v_theta, __pyx_v_phi, 0), __pyx_t_double_complex_from_parts(((double)__Pyx_CREAL(__pyx_t_47)), ((double)__Pyx_CIMAG(__pyx_t_47)))));

        /* "malio_cy/op_q_spherical_cy.pyx":254
 *                 ###     q_temp[i_k] += p_fact * q_l[i_k]
 *                 q_temp[0] += sph_harm_cy(l_sph, 0, theta, phi)*<double complex>p_fact
 *                 for m_sph in range(1, l_sph + 1):             # <<<<<<<<<<<<<<
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)*<double complex>p_fact
 *                     q_temp[m_sph] += sphharm
 */
        __pyx_t_41 = (__pyx_v_l_sph + 1);
        __pyx_t_42 = __pyx_t_41;
        for (__pyx_t_37 = 1; __pyx_t_37 < __pyx_t_42; __pyx_t_37+=1) {
          __pyx_v_m_sph = __pyx_t_37;

          /* "malio_cy/op_q_spherical_cy.pyx":255
 *                 q_temp[0] += sph_harm_cy(l_sph, 0, theta, phi)*<double complex>p_fact
 *                 for m_sph in range(1, l_sph + 1):
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)*<double complex>p_fact             # <<<<<<<<<<<<<<
 *                     q_temp[m_sph] += sphharm
 *                     q_temp[l_sph2p1-m_sph] += sphharm
 */
          __pyx_t_47 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_p_fact); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 255, __pyx_L1_error)
          __pyx_v_sphharm = __Pyx_c_prod_double(__pyx_f_8malio_cy_17op_q_spherical_cy_sph_harm_cy(__pyx_v_l_sph, __pyx_v_m_sph, __pyx_v_theta, __pyx_v_phi, 0), __pyx_t_double_complex_from_parts(((double)__Pyx_CREAL(__pyx_t_47)), ((double)__Pyx_CIMAG(__pyx_t_47))));

          /* "malio_cy/op_q_spherical_cy.pyx":256
 *                 for m_sph in range(1, l_sph + 1):
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)*<double complex>p_fact
 *                     q_temp[m_sph] += sphharm             # <<<<<<<<<<<<<<
 *                     q_temp[l_sph2p1-m_sph] += sphharm
 * 
 */
          __pyx_t_36 = __pyx_v_m_sph;
          __pyx_t_47 = (__pyx_v_q_temp[__pyx_t_36]);
          (__pyx_v_q_temp[__pyx_t_36]) = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_47), __Pyx_CIMAG(__pyx_t_47)), __pyx_v_sphharm);

          /* "malio_cy/op_q_spherical_cy.pyx":257
 *                     sphharm = sph_harm_cy(l_sph, m_sph, theta, phi)*<double complex>p_fact
 *                     q_temp[m_sph] += sphharm
 *                     q_temp[l_sph2p1-m_sph] += sphharm             # <<<<<<<<<<<<<<
 * 
 *             for i_k in range(2 * l_sph + 1):
 */
          __pyx_t_36 = (__pyx_v_l_sph2p1 - __pyx_v_m_sph);
          __pyx_t_47 = (__pyx_v_q_temp[__pyx_t_36]);
          (__pyx_v_q_temp[__pyx_t_36]) = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_47), __Pyx_CIMAG(__pyx_t_47)), __pyx_v_sphharm);
        }

        /* "malio_cy/op_q_spherical_cy.pyx":231
 *                 if i_j != o_i:
 *                     oi_list_not_oi.append(i_j)
 *             for i_j in oi_list_not_oi:             # <<<<<<<<<<<<<<
 *                 ### x_j = [coord_1d[3 * i_i + i] + direct_1d[3 * i_i + i] for i in range(3)]
 *                 for i in range(3):
 */
      }
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":259
 *                     q_temp[l_sph2p1-m_sph] += sphharm
 * 
 *             for i_k in range(2 * l_sph + 1):             # <<<<<<<<<<<<<<
 *                 ### q_temp[i_k] = q_temp[i_k] / (float(len(neighbor_list[i_i])) + p_fact)
 *                 q_temp[i_k] = q_temp[i_k] / (<double>l_neighbor_list_ii + <double>p_fact)
 */
      __pyx_t_41 = ((2 * __pyx_v_l_sph) + 1);
      __pyx_t_42 = __pyx_t_41;
      for (__pyx_t_37 = 0; __pyx_t_37 < __pyx_t_42; __pyx_t_37+=1) {
        __pyx_v_i_k = __pyx_t_37;

        /* "malio_cy/op_q_spherical_cy.pyx":261
 *             for i_k in range(2 * l_sph + 1):
 *                 ### q_temp[i_k] = q_temp[i_k] / (float(len(neighbor_list[i_i])) + p_fact)
 *                 q_temp[i_k] = q_temp[i_k] / (<double>l_neighbor_list_ii + <double>p_fact)             # <<<<<<<<<<<<<<
 * 
 *             res[name] = q_temp
 */
        __pyx_t_47 = (__pyx_v_q_temp[__pyx_v_i_k]);
        __pyx_t_48 = __pyx_PyFloat_AsDouble(__pyx_v_p_fact); if (unlikely((__pyx_t_48 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 261, __pyx_L1_error)
        (__pyx_v_q_temp[__pyx_v_i_k]) = __Pyx_c_quot_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_47), __Pyx_CIMAG(__pyx_t_47)), __pyx_t_double_complex_from_parts((((double)__pyx_v_l_neighbor_list_ii) + ((double)__pyx_t_48)), 0));
      }

      /* "malio_cy/op_q_spherical_cy.pyx":263
 *                 q_temp[i_k] = q_temp[i_k] / (<double>l_neighbor_list_ii + <double>p_fact)
 * 
 *             res[name] = q_temp             # <<<<<<<<<<<<<<
 * 
 *         q_func_temp.append(res)
 */
      __pyx_t_14 = __pyx_convert_vector_to_py___pyx_t_double_complex(__pyx_v_q_temp); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 263, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      if (unlikely(PyDict_SetItem(__pyx_v_res, __pyx_v_name, __pyx_t_14) < 0)) __PYX_ERR(0, 263, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":178
 * 
 *         res = {}
 *         for l_sph, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *             name = misc_cy.naming('q', [l_sph, 0, 0, o_f, o_i, o_j, p_weight])
 *             l_sph2p1 = 2*l_sph+1
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":265
 *             res[name] = q_temp
 * 
 *         q_func_temp.append(res)             # <<<<<<<<<<<<<<
 * 
 *     q_func = misc_cy.data_num_name_to_data_name_num(q_func_temp, len_c)
 */
    __pyx_t_45 = __Pyx_PyList_Append(__pyx_v_q_func_temp, __pyx_v_res); if (unlikely(__pyx_t_45 == ((int)-1))) __PYX_ERR(0, 265, __pyx_L1_error)
  }

  /* "malio_cy/op_q_spherical_cy.pyx":267
 *         q_func_temp.append(res)
 * 
 *     q_func = misc_cy.data_num_name_to_data_name_num(q_func_temp, len_c)             # <<<<<<<<<<<<<<
 * 
 *     # calc function average
 */
  __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_data_num_name_to_data_name_num); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_len_c); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_24 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
    __pyx_t_24 = PyMethod_GET_SELF(__pyx_t_12);
    if (likely(__pyx_t_24)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
      __Pyx_INCREF(__pyx_t_24);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_12, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_12)) {
    PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_v_q_func_temp, __pyx_t_14};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_12, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_12)) {
    PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_v_q_func_temp, __pyx_t_14};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_12, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  } else
  #endif
  {
    __pyx_t_30 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 267, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_30);
    if (__pyx_t_24) {
      __Pyx_GIVEREF(__pyx_t_24); PyTuple_SET_ITEM(__pyx_t_30, 0, __pyx_t_24); __pyx_t_24 = NULL;
    }
    __Pyx_INCREF(__pyx_v_q_func_temp);
    __Pyx_GIVEREF(__pyx_v_q_func_temp);
    PyTuple_SET_ITEM(__pyx_t_30, 0+__pyx_t_9, __pyx_v_q_func_temp);
    __Pyx_GIVEREF(__pyx_t_14);
    PyTuple_SET_ITEM(__pyx_t_30, 1+__pyx_t_9, __pyx_t_14);
    __pyx_t_14 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
  }
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __pyx_v_q_func = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":270
 * 
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "malio_cy/op_q_spherical_cy.pyx":271
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_12 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_12); __pyx_t_2 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_13 = Py_TYPE(__pyx_t_12)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 271, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_12))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_12)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_30 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_30); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 271, __pyx_L1_error)
        #else
        __pyx_t_30 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_30 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_30); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 271, __pyx_L1_error)
        #else
        __pyx_t_30 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 271, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        #endif
      }
    } else {
      __pyx_t_30 = __pyx_t_13(__pyx_t_12);
      if (unlikely(!__pyx_t_30)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 271, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_30);
    }
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_30); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
    __pyx_v_l_sph = __pyx_t_9;
    __pyx_t_30 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_b_times); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_30);
    if (likely(PyList_CheckExact(__pyx_t_30)) || PyTuple_CheckExact(__pyx_t_30)) {
      __pyx_t_14 = __pyx_t_30; __Pyx_INCREF(__pyx_t_14); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
    } else {
      __pyx_t_16 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_30); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 271, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_17 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 271, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
    for (;;) {
      if (likely(!__pyx_t_17)) {
        if (likely(PyList_CheckExact(__pyx_t_14))) {
          if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_14)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_30 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 271, __pyx_L1_error)
          #else
          __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 271, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          #endif
        } else {
          if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_30 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 271, __pyx_L1_error)
          #else
          __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 271, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          #endif
        }
      } else {
        __pyx_t_30 = __pyx_t_17(__pyx_t_14);
        if (unlikely(!__pyx_t_30)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 271, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_30);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_30);
      __pyx_t_30 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":272
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor             # <<<<<<<<<<<<<<
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
      if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
        __pyx_t_30 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_30); __pyx_t_19 = 0;
        __pyx_t_20 = NULL;
      } else {
        __pyx_t_19 = -1; __pyx_t_30 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 272, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_20 = Py_TYPE(__pyx_t_30)->tp_iternext; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 272, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_20)) {
          if (likely(PyList_CheckExact(__pyx_t_30))) {
            if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_30)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_24 = PyList_GET_ITEM(__pyx_t_30, __pyx_t_19); __Pyx_INCREF(__pyx_t_24); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 272, __pyx_L1_error)
            #else
            __pyx_t_24 = PySequence_ITEM(__pyx_t_30, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_24);
            #endif
          } else {
            if (__pyx_t_19 >= PyTuple_GET_SIZE(__pyx_t_30)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_24 = PyTuple_GET_ITEM(__pyx_t_30, __pyx_t_19); __Pyx_INCREF(__pyx_t_24); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 272, __pyx_L1_error)
            #else
            __pyx_t_24 = PySequence_ITEM(__pyx_t_30, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_24);
            #endif
          }
        } else {
          __pyx_t_24 = __pyx_t_20(__pyx_t_30);
          if (unlikely(!__pyx_t_24)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 272, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_24);
        }
        __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 272, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        __pyx_v_o_f = __pyx_t_9;

        /* "malio_cy/op_q_spherical_cy.pyx":273
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 */
        if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
          __pyx_t_24 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_24); __pyx_t_22 = 0;
          __pyx_t_23 = NULL;
        } else {
          __pyx_t_22 = -1; __pyx_t_24 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 273, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __pyx_t_23 = Py_TYPE(__pyx_t_24)->tp_iternext; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 273, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_23)) {
            if (likely(PyList_CheckExact(__pyx_t_24))) {
              if (__pyx_t_22 >= PyList_GET_SIZE(__pyx_t_24)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_31 = PyList_GET_ITEM(__pyx_t_24, __pyx_t_22); __Pyx_INCREF(__pyx_t_31); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
              #else
              __pyx_t_31 = PySequence_ITEM(__pyx_t_24, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 273, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_31);
              #endif
            } else {
              if (__pyx_t_22 >= PyTuple_GET_SIZE(__pyx_t_24)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_31 = PyTuple_GET_ITEM(__pyx_t_24, __pyx_t_22); __Pyx_INCREF(__pyx_t_31); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
              #else
              __pyx_t_31 = PySequence_ITEM(__pyx_t_24, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 273, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_31);
              #endif
            }
          } else {
            __pyx_t_31 = __pyx_t_23(__pyx_t_24);
            if (unlikely(!__pyx_t_31)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 273, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_31);
          }
          __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_31); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
          __pyx_v_o_i = __pyx_t_9;
          if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
            __pyx_t_31 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_31); __pyx_t_25 = 0;
            __pyx_t_26 = NULL;
          } else {
            __pyx_t_25 = -1; __pyx_t_31 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 273, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_31);
            __pyx_t_26 = Py_TYPE(__pyx_t_31)->tp_iternext; if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 273, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_26)) {
              if (likely(PyList_CheckExact(__pyx_t_31))) {
                if (__pyx_t_25 >= PyList_GET_SIZE(__pyx_t_31)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_18 = PyList_GET_ITEM(__pyx_t_31, __pyx_t_25); __Pyx_INCREF(__pyx_t_18); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
                #else
                __pyx_t_18 = PySequence_ITEM(__pyx_t_31, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 273, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_18);
                #endif
              } else {
                if (__pyx_t_25 >= PyTuple_GET_SIZE(__pyx_t_31)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_31, __pyx_t_25); __Pyx_INCREF(__pyx_t_18); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
                #else
                __pyx_t_18 = PySequence_ITEM(__pyx_t_31, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 273, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_18);
                #endif
              }
            } else {
              __pyx_t_18 = __pyx_t_26(__pyx_t_31);
              if (unlikely(!__pyx_t_18)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 273, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_18);
            }
            __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_18); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __pyx_v_o_j = __pyx_t_9;
            if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
              __pyx_t_18 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_18); __pyx_t_49 = 0;
              __pyx_t_50 = NULL;
            } else {
              __pyx_t_49 = -1; __pyx_t_18 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 273, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_18);
              __pyx_t_50 = Py_TYPE(__pyx_t_18)->tp_iternext; if (unlikely(!__pyx_t_50)) __PYX_ERR(0, 273, __pyx_L1_error)
            }
            for (;;) {
              if (likely(!__pyx_t_50)) {
                if (likely(PyList_CheckExact(__pyx_t_18))) {
                  if (__pyx_t_49 >= PyList_GET_SIZE(__pyx_t_18)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_21 = PyList_GET_ITEM(__pyx_t_18, __pyx_t_49); __Pyx_INCREF(__pyx_t_21); __pyx_t_49++; if (unlikely(0 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
                  #else
                  __pyx_t_21 = PySequence_ITEM(__pyx_t_18, __pyx_t_49); __pyx_t_49++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 273, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_21);
                  #endif
                } else {
                  if (__pyx_t_49 >= PyTuple_GET_SIZE(__pyx_t_18)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_18, __pyx_t_49); __Pyx_INCREF(__pyx_t_21); __pyx_t_49++; if (unlikely(0 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
                  #else
                  __pyx_t_21 = PySequence_ITEM(__pyx_t_18, __pyx_t_49); __pyx_t_49++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 273, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_21);
                  #endif
                }
              } else {
                __pyx_t_21 = __pyx_t_50(__pyx_t_18);
                if (unlikely(!__pyx_t_21)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else __PYX_ERR(0, 273, __pyx_L1_error)
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_21);
              }
              __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_21); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
              __pyx_v_p_weight = __pyx_t_9;

              /* "malio_cy/op_q_spherical_cy.pyx":270
 * 
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 */
              __pyx_t_21 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_21);
              __pyx_t_32 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_32)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_32);
              __pyx_t_29 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_29);
              __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_28);
              __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_27);
              __pyx_t_51 = PyTuple_New(6); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_51);
              __Pyx_GIVEREF(__pyx_t_21);
              PyTuple_SET_ITEM(__pyx_t_51, 0, __pyx_t_21);
              __Pyx_INCREF(__pyx_v_b_t);
              __Pyx_GIVEREF(__pyx_v_b_t);
              PyTuple_SET_ITEM(__pyx_t_51, 1, __pyx_v_b_t);
              __Pyx_GIVEREF(__pyx_t_32);
              PyTuple_SET_ITEM(__pyx_t_51, 2, __pyx_t_32);
              __Pyx_GIVEREF(__pyx_t_29);
              PyTuple_SET_ITEM(__pyx_t_51, 3, __pyx_t_29);
              __Pyx_GIVEREF(__pyx_t_28);
              PyTuple_SET_ITEM(__pyx_t_51, 4, __pyx_t_28);
              __Pyx_GIVEREF(__pyx_t_27);
              PyTuple_SET_ITEM(__pyx_t_51, 5, __pyx_t_27);
              __pyx_t_21 = 0;
              __pyx_t_32 = 0;
              __pyx_t_29 = 0;
              __pyx_t_28 = 0;
              __pyx_t_27 = 0;
              if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_51))) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;

              /* "malio_cy/op_q_spherical_cy.pyx":273
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 */
            }
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          }
          __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
        }
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":272
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor             # <<<<<<<<<<<<<<
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":271
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  }
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_XDECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":275
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
  __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_12 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_12); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 275, __pyx_L1_error)
    #else
    __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_12))) || (PyList_CheckExact(__pyx_t_12))) {
      PyObject* sequence = __pyx_t_12;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 6)) {
        if (size > 6) __Pyx_RaiseTooManyValuesError(6);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 275, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_14 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_30 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_24 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_31 = PyTuple_GET_ITEM(sequence, 3); 
        __pyx_t_18 = PyTuple_GET_ITEM(sequence, 4); 
        __pyx_t_51 = PyTuple_GET_ITEM(sequence, 5); 
      } else {
        __pyx_t_14 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_30 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_24 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_31 = PyList_GET_ITEM(sequence, 3); 
        __pyx_t_18 = PyList_GET_ITEM(sequence, 4); 
        __pyx_t_51 = PyList_GET_ITEM(sequence, 5); 
      }
      __Pyx_INCREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_t_30);
      __Pyx_INCREF(__pyx_t_24);
      __Pyx_INCREF(__pyx_t_31);
      __Pyx_INCREF(__pyx_t_18);
      __Pyx_INCREF(__pyx_t_51);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[6] = {&__pyx_t_14,&__pyx_t_30,&__pyx_t_24,&__pyx_t_31,&__pyx_t_18,&__pyx_t_51};
        for (i=0; i < 6; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 275, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[6] = {&__pyx_t_14,&__pyx_t_30,&__pyx_t_24,&__pyx_t_31,&__pyx_t_18,&__pyx_t_51};
      __pyx_t_27 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 275, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_27);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_33 = Py_TYPE(__pyx_t_27)->tp_iternext;
      for (index=0; index < 6; index++) {
        PyObject* item = __pyx_t_33(__pyx_t_27); if (unlikely(!item)) goto __pyx_L65_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_33(__pyx_t_27), 6) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
      __pyx_t_33 = NULL;
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
      goto __pyx_L66_unpacking_done;
      __pyx_L65_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
      __pyx_t_33 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 275, __pyx_L1_error)
      __pyx_L66_unpacking_done:;
    }
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_31); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
    __pyx_t_37 = __Pyx_PyInt_As_int(__pyx_t_18); if (unlikely((__pyx_t_37 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_51); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;
    __pyx_v_l_sph = __pyx_t_9;
    __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_30);
    __pyx_t_30 = 0;
    __pyx_v_o_f = __pyx_t_10;
    __pyx_v_o_i = __pyx_t_11;
    __pyx_v_o_j = __pyx_t_37;
    __pyx_v_p_weight = __pyx_t_36;

    /* "malio_cy/op_q_spherical_cy.pyx":276
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *         l_q_func_name_old_0 = len(q_func[name_old][0])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_51, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_51);
    __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_51, __pyx_n_s_naming); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;
    __pyx_t_51 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_51);
    __pyx_t_31 = __Pyx_PyInt_AddObjC(__pyx_v_b_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_31);
    __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_24);
    __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_30);
    __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    __pyx_t_28 = PyList_New(7); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_28);
    __Pyx_GIVEREF(__pyx_t_51);
    PyList_SET_ITEM(__pyx_t_28, 0, __pyx_t_51);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_28, 1, __pyx_int_0);
    __Pyx_GIVEREF(__pyx_t_31);
    PyList_SET_ITEM(__pyx_t_28, 2, __pyx_t_31);
    __Pyx_GIVEREF(__pyx_t_24);
    PyList_SET_ITEM(__pyx_t_28, 3, __pyx_t_24);
    __Pyx_GIVEREF(__pyx_t_30);
    PyList_SET_ITEM(__pyx_t_28, 4, __pyx_t_30);
    __Pyx_GIVEREF(__pyx_t_14);
    PyList_SET_ITEM(__pyx_t_28, 5, __pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_27);
    PyList_SET_ITEM(__pyx_t_28, 6, __pyx_t_27);
    __pyx_t_51 = 0;
    __pyx_t_31 = 0;
    __pyx_t_24 = 0;
    __pyx_t_30 = 0;
    __pyx_t_14 = 0;
    __pyx_t_27 = 0;
    __pyx_t_27 = NULL;
    __pyx_t_36 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_18))) {
      __pyx_t_27 = PyMethod_GET_SELF(__pyx_t_18);
      if (likely(__pyx_t_27)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
        __Pyx_INCREF(__pyx_t_27);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_18, function);
        __pyx_t_36 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_18)) {
      PyObject *__pyx_temp[3] = {__pyx_t_27, __pyx_n_s_q, __pyx_t_28};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_36, 2+__pyx_t_36); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 276, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_27); __pyx_t_27 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_18)) {
      PyObject *__pyx_temp[3] = {__pyx_t_27, __pyx_n_s_q, __pyx_t_28};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_36, 2+__pyx_t_36); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 276, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_27); __pyx_t_27 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
    } else
    #endif
    {
      __pyx_t_14 = PyTuple_New(2+__pyx_t_36); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 276, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      if (__pyx_t_27) {
        __Pyx_GIVEREF(__pyx_t_27); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_27); __pyx_t_27 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_36, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_28);
      PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_36, __pyx_t_28);
      __pyx_t_28 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_14, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 276, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":277
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *         l_q_func_name_old_0 = len(q_func[name_old][0])
 *         q_func_name_old = cvec_vec(len_c,cvec(l_q_func_name_old_0))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_naming); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_28);
    __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_30);
    __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_24);
    __pyx_t_31 = PyList_New(7); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_31);
    __Pyx_GIVEREF(__pyx_t_18);
    PyList_SET_ITEM(__pyx_t_31, 0, __pyx_t_18);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_31, 1, __pyx_int_0);
    __Pyx_INCREF(__pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_v_b_t);
    PyList_SET_ITEM(__pyx_t_31, 2, __pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_t_28);
    PyList_SET_ITEM(__pyx_t_31, 3, __pyx_t_28);
    __Pyx_GIVEREF(__pyx_t_27);
    PyList_SET_ITEM(__pyx_t_31, 4, __pyx_t_27);
    __Pyx_GIVEREF(__pyx_t_30);
    PyList_SET_ITEM(__pyx_t_31, 5, __pyx_t_30);
    __Pyx_GIVEREF(__pyx_t_24);
    PyList_SET_ITEM(__pyx_t_31, 6, __pyx_t_24);
    __pyx_t_18 = 0;
    __pyx_t_28 = 0;
    __pyx_t_27 = 0;
    __pyx_t_30 = 0;
    __pyx_t_24 = 0;
    __pyx_t_24 = NULL;
    __pyx_t_36 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
      __pyx_t_24 = PyMethod_GET_SELF(__pyx_t_14);
      if (likely(__pyx_t_24)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
        __Pyx_INCREF(__pyx_t_24);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_14, function);
        __pyx_t_36 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_14)) {
      PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_n_s_q, __pyx_t_31};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_36, 2+__pyx_t_36); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 277, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
      PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_n_s_q, __pyx_t_31};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_36, 2+__pyx_t_36); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 277, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
    } else
    #endif
    {
      __pyx_t_30 = PyTuple_New(2+__pyx_t_36); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 277, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_30);
      if (__pyx_t_24) {
        __Pyx_GIVEREF(__pyx_t_24); PyTuple_SET_ITEM(__pyx_t_30, 0, __pyx_t_24); __pyx_t_24 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_30, 0+__pyx_t_36, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_31);
      PyTuple_SET_ITEM(__pyx_t_30, 1+__pyx_t_36, __pyx_t_31);
      __pyx_t_31 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_30, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 277, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":278
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *         l_q_func_name_old_0 = len(q_func[name_old][0])             # <<<<<<<<<<<<<<
 *         q_func_name_old = cvec_vec(len_c,cvec(l_q_func_name_old_0))
 *         for i in range(len_c):
 */
    __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_v_q_func, __pyx_v_name_old); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_12, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_16 = PyObject_Length(__pyx_t_14); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 278, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_v_l_q_func_name_old_0 = __pyx_t_16;

    /* "malio_cy/op_q_spherical_cy.pyx":279
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *         l_q_func_name_old_0 = len(q_func[name_old][0])
 *         q_func_name_old = cvec_vec(len_c,cvec(l_q_func_name_old_0))             # <<<<<<<<<<<<<<
 *         for i in range(len_c):
 *             for j in range(l_q_func_name_old_0):
 */
    try {
      __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_cvec(__pyx_v_l_q_func_name_old_0);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 279, __pyx_L1_error)
    }
    try {
      __pyx_t_8 = __pyx_t_8malio_cy_12malio_cy_def_cvec_vec(__pyx_v_len_c, __pyx_t_7);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 279, __pyx_L1_error)
    }
    __pyx_v_q_func_name_old = __pyx_t_8;

    /* "malio_cy/op_q_spherical_cy.pyx":280
 *         l_q_func_name_old_0 = len(q_func[name_old][0])
 *         q_func_name_old = cvec_vec(len_c,cvec(l_q_func_name_old_0))
 *         for i in range(len_c):             # <<<<<<<<<<<<<<
 *             for j in range(l_q_func_name_old_0):
 *                 q_func_name_old[i][j] = q_func[name_old][i][j]
 */
    __pyx_t_36 = __pyx_v_len_c;
    __pyx_t_37 = __pyx_t_36;
    for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_37; __pyx_t_11+=1) {
      __pyx_v_i = __pyx_t_11;

      /* "malio_cy/op_q_spherical_cy.pyx":281
 *         q_func_name_old = cvec_vec(len_c,cvec(l_q_func_name_old_0))
 *         for i in range(len_c):
 *             for j in range(l_q_func_name_old_0):             # <<<<<<<<<<<<<<
 *                 q_func_name_old[i][j] = q_func[name_old][i][j]
 *         ### q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])
 */
      __pyx_t_10 = __pyx_v_l_q_func_name_old_0;
      __pyx_t_9 = __pyx_t_10;
      for (__pyx_t_35 = 0; __pyx_t_35 < __pyx_t_9; __pyx_t_35+=1) {
        __pyx_v_j = __pyx_t_35;

        /* "malio_cy/op_q_spherical_cy.pyx":282
 *         for i in range(len_c):
 *             for j in range(l_q_func_name_old_0):
 *                 q_func_name_old[i][j] = q_func[name_old][i][j]             # <<<<<<<<<<<<<<
 *         ### q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])
 *         q_func[name] = []  # [[1,2,3],[1,2,3], ... ]
 */
        __pyx_t_14 = __Pyx_PyObject_GetItem(__pyx_v_q_func, __pyx_v_name_old); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 282, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_14, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 282, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_12, __pyx_v_j, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 282, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_47 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_14); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 282, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        ((__pyx_v_q_func_name_old[__pyx_v_i])[__pyx_v_j]) = __pyx_t_47;
      }
    }

    /* "malio_cy/op_q_spherical_cy.pyx":284
 *                 q_func_name_old[i][j] = q_func[name_old][i][j]
 *         ### q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])
 *         q_func[name] = []  # [[1,2,3],[1,2,3], ... ]             # <<<<<<<<<<<<<<
 *         for i_i in range(len_c):
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 */
    __pyx_t_14 = PyList_New(0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 284, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (unlikely(PyObject_SetItem(__pyx_v_q_func, __pyx_v_name, __pyx_t_14) < 0)) __PYX_ERR(0, 284, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":285
 *         ### q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])
 *         q_func[name] = []  # [[1,2,3],[1,2,3], ... ]
 *         for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 *             cl_neighbor_list_ii_1 = <double complex>(l_neighbor_list_ii + 1)
 */
    __pyx_t_36 = __pyx_v_len_c;
    __pyx_t_37 = __pyx_t_36;
    for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_37; __pyx_t_11+=1) {
      __pyx_v_i_i = __pyx_t_11;

      /* "malio_cy/op_q_spherical_cy.pyx":286
 *         q_func[name] = []  # [[1,2,3],[1,2,3], ... ]
 *         for i_i in range(len_c):
 *             l_neighbor_list_ii = len(neighbor_list[i_i])             # <<<<<<<<<<<<<<
 *             cl_neighbor_list_ii_1 = <double complex>(l_neighbor_list_ii + 1)
 *             ### part = [0 for i in range(l_q_func_name_old_0)]
 */
      __pyx_t_14 = __Pyx_GetItemInt(__pyx_v_neighbor_list, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 286, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_16 = PyObject_Length(__pyx_t_14); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 286, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_v_l_neighbor_list_ii = __pyx_t_16;

      /* "malio_cy/op_q_spherical_cy.pyx":287
 *         for i_i in range(len_c):
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 *             cl_neighbor_list_ii_1 = <double complex>(l_neighbor_list_ii + 1)             # <<<<<<<<<<<<<<
 *             ### part = [0 for i in range(l_q_func_name_old_0)]
 *             cpart = cvec(l_q_func_name_old_0)
 */
      __pyx_v_cl_neighbor_list_ii_1 = __pyx_t_double_complex_from_parts(((double)(__pyx_v_l_neighbor_list_ii + 1)), 0);

      /* "malio_cy/op_q_spherical_cy.pyx":289
 *             cl_neighbor_list_ii_1 = <double complex>(l_neighbor_list_ii + 1)
 *             ### part = [0 for i in range(l_q_func_name_old_0)]
 *             cpart = cvec(l_q_func_name_old_0)             # <<<<<<<<<<<<<<
 *             for i_j in range(l_q_func_name_old_0):
 *                 part_temp = 0.0 + I*0.0
 */
      try {
        __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_cvec(__pyx_v_l_q_func_name_old_0);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 289, __pyx_L1_error)
      }
      __pyx_v_cpart = __pyx_t_7;

      /* "malio_cy/op_q_spherical_cy.pyx":290
 *             ### part = [0 for i in range(l_q_func_name_old_0)]
 *             cpart = cvec(l_q_func_name_old_0)
 *             for i_j in range(l_q_func_name_old_0):             # <<<<<<<<<<<<<<
 *                 part_temp = 0.0 + I*0.0
 *                 for ii_j in range(l_neighbor_list_ii):
 */
      __pyx_t_10 = __pyx_v_l_q_func_name_old_0;
      __pyx_t_9 = __pyx_t_10;
      for (__pyx_t_35 = 0; __pyx_t_35 < __pyx_t_9; __pyx_t_35+=1) {
        __pyx_v_i_j = __pyx_t_35;

        /* "malio_cy/op_q_spherical_cy.pyx":291
 *             cpart = cvec(l_q_func_name_old_0)
 *             for i_j in range(l_q_func_name_old_0):
 *                 part_temp = 0.0 + I*0.0             # <<<<<<<<<<<<<<
 *                 for ii_j in range(l_neighbor_list_ii):
 *                     inei = ineighbor_list[i_i][ii_j]
 */
        __pyx_v_part_temp = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(0.0, 0), __Pyx_c_prod_double(__pyx_v_I, __pyx_t_double_complex_from_parts(0.0, 0)));

        /* "malio_cy/op_q_spherical_cy.pyx":292
 *             for i_j in range(l_q_func_name_old_0):
 *                 part_temp = 0.0 + I*0.0
 *                 for ii_j in range(l_neighbor_list_ii):             # <<<<<<<<<<<<<<
 *                     inei = ineighbor_list[i_i][ii_j]
 *                     part_temp += q_func_name_old[inei][i_j]
 */
        __pyx_t_34 = __pyx_v_l_neighbor_list_ii;
        __pyx_t_15 = __pyx_t_34;
        for (__pyx_t_52 = 0; __pyx_t_52 < __pyx_t_15; __pyx_t_52+=1) {
          __pyx_v_ii_j = __pyx_t_52;

          /* "malio_cy/op_q_spherical_cy.pyx":293
 *                 part_temp = 0.0 + I*0.0
 *                 for ii_j in range(l_neighbor_list_ii):
 *                     inei = ineighbor_list[i_i][ii_j]             # <<<<<<<<<<<<<<
 *                     part_temp += q_func_name_old[inei][i_j]
 *                 part_temp += q_func_name_old[i_i][i_j]
 */
          __pyx_v_inei = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_ii_j]);

          /* "malio_cy/op_q_spherical_cy.pyx":294
 *                 for ii_j in range(l_neighbor_list_ii):
 *                     inei = ineighbor_list[i_i][ii_j]
 *                     part_temp += q_func_name_old[inei][i_j]             # <<<<<<<<<<<<<<
 *                 part_temp += q_func_name_old[i_i][i_j]
 *                 ### part.append(part_temp/cl_neighbor_list_ii_1)
 */
          __pyx_t_47 = ((__pyx_v_q_func_name_old[__pyx_v_inei])[__pyx_v_i_j]);
          __pyx_v_part_temp = __Pyx_c_sum_double(__pyx_v_part_temp, __pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_47), __Pyx_CIMAG(__pyx_t_47)));
        }

        /* "malio_cy/op_q_spherical_cy.pyx":295
 *                     inei = ineighbor_list[i_i][ii_j]
 *                     part_temp += q_func_name_old[inei][i_j]
 *                 part_temp += q_func_name_old[i_i][i_j]             # <<<<<<<<<<<<<<
 *                 ### part.append(part_temp/cl_neighbor_list_ii_1)
 *                 cpart[i_j] = part_temp/cl_neighbor_list_ii_1
 */
        __pyx_t_47 = ((__pyx_v_q_func_name_old[__pyx_v_i_i])[__pyx_v_i_j]);
        __pyx_v_part_temp = __Pyx_c_sum_double(__pyx_v_part_temp, __pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_t_47), __Pyx_CIMAG(__pyx_t_47)));

        /* "malio_cy/op_q_spherical_cy.pyx":297
 *                 part_temp += q_func_name_old[i_i][i_j]
 *                 ### part.append(part_temp/cl_neighbor_list_ii_1)
 *                 cpart[i_j] = part_temp/cl_neighbor_list_ii_1             # <<<<<<<<<<<<<<
 * 
 *             ### q_func[name].append(part)
 */
        (__pyx_v_cpart[__pyx_v_i_j]) = __Pyx_c_quot_double(__pyx_v_part_temp, __pyx_v_cl_neighbor_list_ii_1);
      }

      /* "malio_cy/op_q_spherical_cy.pyx":300
 * 
 *             ### q_func[name].append(part)
 *             q_func[name].append(cpart)             # <<<<<<<<<<<<<<
 * 
 *     # func to value
 */
      __pyx_t_14 = __Pyx_PyObject_GetItem(__pyx_v_q_func, __pyx_v_name); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 300, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_12 = __pyx_convert_vector_to_py___pyx_t_double_complex(__pyx_v_cpart); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 300, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_45 = __Pyx_PyObject_Append(__pyx_t_14, __pyx_t_12); if (unlikely(__pyx_t_45 == ((int)-1))) __PYX_ERR(0, 300, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }

    /* "malio_cy/op_q_spherical_cy.pyx":275
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":303
 * 
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "malio_cy/op_q_spherical_cy.pyx":304
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     op_data = {}
 *     for l_sph in l_list:
 */
  if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
    __pyx_t_12 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_12); __pyx_t_2 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_13 = Py_TYPE(__pyx_t_12)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 304, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_12))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_12)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_14 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_14); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
        #else
        __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 304, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_14); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
        #else
        __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 304, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        #endif
      }
    } else {
      __pyx_t_14 = __pyx_t_13(__pyx_t_12);
      if (unlikely(!__pyx_t_14)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 304, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_14);
    }
    __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 304, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_v_o_f = __pyx_t_36;
    if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
      __pyx_t_14 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_14); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
    } else {
      __pyx_t_16 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_17 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 304, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_17)) {
        if (likely(PyList_CheckExact(__pyx_t_14))) {
          if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_14)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_30 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
          #else
          __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 304, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          #endif
        } else {
          if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_30 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_16); __Pyx_INCREF(__pyx_t_30); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
          #else
          __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 304, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          #endif
        }
      } else {
        __pyx_t_30 = __pyx_t_17(__pyx_t_14);
        if (unlikely(!__pyx_t_30)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 304, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_30);
      }
      __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_30); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      __pyx_v_o_i = __pyx_t_36;
      if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
        __pyx_t_30 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_30); __pyx_t_19 = 0;
        __pyx_t_20 = NULL;
      } else {
        __pyx_t_19 = -1; __pyx_t_30 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 304, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_20 = Py_TYPE(__pyx_t_30)->tp_iternext; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 304, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_20)) {
          if (likely(PyList_CheckExact(__pyx_t_30))) {
            if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_30)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_31 = PyList_GET_ITEM(__pyx_t_30, __pyx_t_19); __Pyx_INCREF(__pyx_t_31); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
            #else
            __pyx_t_31 = PySequence_ITEM(__pyx_t_30, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 304, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_31);
            #endif
          } else {
            if (__pyx_t_19 >= PyTuple_GET_SIZE(__pyx_t_30)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_31 = PyTuple_GET_ITEM(__pyx_t_30, __pyx_t_19); __Pyx_INCREF(__pyx_t_31); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
            #else
            __pyx_t_31 = PySequence_ITEM(__pyx_t_30, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 304, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_31);
            #endif
          }
        } else {
          __pyx_t_31 = __pyx_t_20(__pyx_t_30);
          if (unlikely(!__pyx_t_31)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 304, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_31);
        }
        __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_31); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 304, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
        __pyx_v_o_j = __pyx_t_36;
        if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
          __pyx_t_31 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_31); __pyx_t_22 = 0;
          __pyx_t_23 = NULL;
        } else {
          __pyx_t_22 = -1; __pyx_t_31 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 304, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_31);
          __pyx_t_23 = Py_TYPE(__pyx_t_31)->tp_iternext; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 304, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_23)) {
            if (likely(PyList_CheckExact(__pyx_t_31))) {
              if (__pyx_t_22 >= PyList_GET_SIZE(__pyx_t_31)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_24 = PyList_GET_ITEM(__pyx_t_31, __pyx_t_22); __Pyx_INCREF(__pyx_t_24); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
              #else
              __pyx_t_24 = PySequence_ITEM(__pyx_t_31, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 304, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_24);
              #endif
            } else {
              if (__pyx_t_22 >= PyTuple_GET_SIZE(__pyx_t_31)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_24 = PyTuple_GET_ITEM(__pyx_t_31, __pyx_t_22); __Pyx_INCREF(__pyx_t_24); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
              #else
              __pyx_t_24 = PySequence_ITEM(__pyx_t_31, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 304, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_24);
              #endif
            }
          } else {
            __pyx_t_24 = __pyx_t_23(__pyx_t_31);
            if (unlikely(!__pyx_t_24)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 304, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_24);
          }
          __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 304, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          __pyx_v_p_weight = __pyx_t_36;

          /* "malio_cy/op_q_spherical_cy.pyx":303
 * 
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 */
          __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_24);
          __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_28);
          __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_51 = PyTuple_New(4); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_51);
          __Pyx_GIVEREF(__pyx_t_24);
          PyTuple_SET_ITEM(__pyx_t_51, 0, __pyx_t_24);
          __Pyx_GIVEREF(__pyx_t_27);
          PyTuple_SET_ITEM(__pyx_t_51, 1, __pyx_t_27);
          __Pyx_GIVEREF(__pyx_t_28);
          PyTuple_SET_ITEM(__pyx_t_51, 2, __pyx_t_28);
          __Pyx_GIVEREF(__pyx_t_18);
          PyTuple_SET_ITEM(__pyx_t_51, 3, __pyx_t_18);
          __pyx_t_24 = 0;
          __pyx_t_27 = 0;
          __pyx_t_28 = 0;
          __pyx_t_18 = 0;
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_51))) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;

          /* "malio_cy/op_q_spherical_cy.pyx":304
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     op_data = {}
 *     for l_sph in l_list:
 */
        }
        __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
      }
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  }
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":305
 *     comb = [(o_f, o_i, o_j, p_weight)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}             # <<<<<<<<<<<<<<
 *     for l_sph in l_list:
 *         l_sph2p1 = 2*l_sph+1
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_op_data = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":306
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 *     for l_sph in l_list:             # <<<<<<<<<<<<<<
 *         l_sph2p1 = 2*l_sph+1
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_1 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_13 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 306, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_12 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_12); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 306, __pyx_L1_error)
        #else
        __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 306, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_12 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_12); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 306, __pyx_L1_error)
        #else
        __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 306, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        #endif
      }
    } else {
      __pyx_t_12 = __pyx_t_13(__pyx_t_1);
      if (unlikely(!__pyx_t_12)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 306, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_12);
    }
    __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_12); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_v_l_sph = __pyx_t_36;

    /* "malio_cy/op_q_spherical_cy.pyx":307
 *     op_data = {}
 *     for l_sph in l_list:
 *         l_sph2p1 = 2*l_sph+1             # <<<<<<<<<<<<<<
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 *         for b_t in range(b_times + 1):
 */
    __pyx_v_l_sph2p1 = ((2 * __pyx_v_l_sph) + 1);

    /* "malio_cy/op_q_spherical_cy.pyx":308
 *     for l_sph in l_list:
 *         l_sph2p1 = 2*l_sph+1
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:
 */
    __pyx_v_inv_l_sph2p1 = (1.0 / ((double)__pyx_v_l_sph2p1));

    /* "malio_cy/op_q_spherical_cy.pyx":309
 *         l_sph2p1 = 2*l_sph+1
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
    __pyx_t_12 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
      __pyx_t_12 = __pyx_t_14; __Pyx_INCREF(__pyx_t_12); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
    } else {
      __pyx_t_16 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_17 = Py_TYPE(__pyx_t_12)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 309, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    for (;;) {
      if (likely(!__pyx_t_17)) {
        if (likely(PyList_CheckExact(__pyx_t_12))) {
          if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_12)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_14 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_16); __Pyx_INCREF(__pyx_t_14); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 309, __pyx_L1_error)
          #else
          __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 309, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          #endif
        } else {
          if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_16); __Pyx_INCREF(__pyx_t_14); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 309, __pyx_L1_error)
          #else
          __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 309, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          #endif
        }
      } else {
        __pyx_t_14 = __pyx_t_17(__pyx_t_12);
        if (unlikely(!__pyx_t_14)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 309, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_14);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_14);
      __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":310
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 ### q_val = []
 */
      __pyx_t_14 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_14); __pyx_t_19 = 0;
      for (;;) {
        if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_14)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_30 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_19); __Pyx_INCREF(__pyx_t_30); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 310, __pyx_L1_error)
        #else
        __pyx_t_30 = PySequence_ITEM(__pyx_t_14, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 310, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        #endif
        if ((likely(PyTuple_CheckExact(__pyx_t_30))) || (PyList_CheckExact(__pyx_t_30))) {
          PyObject* sequence = __pyx_t_30;
          Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
          if (unlikely(size != 4)) {
            if (size > 4) __Pyx_RaiseTooManyValuesError(4);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            __PYX_ERR(0, 310, __pyx_L1_error)
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_31 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_51 = PyTuple_GET_ITEM(sequence, 1); 
            __pyx_t_18 = PyTuple_GET_ITEM(sequence, 2); 
            __pyx_t_28 = PyTuple_GET_ITEM(sequence, 3); 
          } else {
            __pyx_t_31 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_51 = PyList_GET_ITEM(sequence, 1); 
            __pyx_t_18 = PyList_GET_ITEM(sequence, 2); 
            __pyx_t_28 = PyList_GET_ITEM(sequence, 3); 
          }
          __Pyx_INCREF(__pyx_t_31);
          __Pyx_INCREF(__pyx_t_51);
          __Pyx_INCREF(__pyx_t_18);
          __Pyx_INCREF(__pyx_t_28);
          #else
          {
            Py_ssize_t i;
            PyObject** temps[4] = {&__pyx_t_31,&__pyx_t_51,&__pyx_t_18,&__pyx_t_28};
            for (i=0; i < 4; i++) {
              PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 310, __pyx_L1_error)
              __Pyx_GOTREF(item);
              *(temps[i]) = item;
            }
          }
          #endif
          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        } else {
          Py_ssize_t index = -1;
          PyObject** temps[4] = {&__pyx_t_31,&__pyx_t_51,&__pyx_t_18,&__pyx_t_28};
          __pyx_t_27 = PyObject_GetIter(__pyx_t_30); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 310, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
          __pyx_t_33 = Py_TYPE(__pyx_t_27)->tp_iternext;
          for (index=0; index < 4; index++) {
            PyObject* item = __pyx_t_33(__pyx_t_27); if (unlikely(!item)) goto __pyx_L91_unpacking_failed;
            __Pyx_GOTREF(item);
            *(temps[index]) = item;
          }
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_33(__pyx_t_27), 4) < 0) __PYX_ERR(0, 310, __pyx_L1_error)
          __pyx_t_33 = NULL;
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          goto __pyx_L92_unpacking_done;
          __pyx_L91_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          __pyx_t_33 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          __PYX_ERR(0, 310, __pyx_L1_error)
          __pyx_L92_unpacking_done:;
        }
        __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_31); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 310, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
        __pyx_t_37 = __Pyx_PyInt_As_int(__pyx_t_51); if (unlikely((__pyx_t_37 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 310, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_51); __pyx_t_51 = 0;
        __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_18); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 310, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_28); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 310, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
        __pyx_v_o_f = __pyx_t_36;
        __pyx_v_o_i = __pyx_t_37;
        __pyx_v_o_j = __pyx_t_11;
        __pyx_v_p_weight = __pyx_t_10;

        /* "malio_cy/op_q_spherical_cy.pyx":311
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *                 ### q_val = []
 *                 q_val = dvec()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_28, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_28);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_28, __pyx_n_s_naming); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
        __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_28);
        __pyx_t_51 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_51);
        __pyx_t_31 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_31);
        __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_24);
        __pyx_t_29 = PyList_New(7); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __Pyx_GIVEREF(__pyx_t_28);
        PyList_SET_ITEM(__pyx_t_29, 0, __pyx_t_28);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_29, 1, __pyx_int_0);
        __Pyx_INCREF(__pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_v_b_t);
        PyList_SET_ITEM(__pyx_t_29, 2, __pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_t_51);
        PyList_SET_ITEM(__pyx_t_29, 3, __pyx_t_51);
        __Pyx_GIVEREF(__pyx_t_31);
        PyList_SET_ITEM(__pyx_t_29, 4, __pyx_t_31);
        __Pyx_GIVEREF(__pyx_t_27);
        PyList_SET_ITEM(__pyx_t_29, 5, __pyx_t_27);
        __Pyx_GIVEREF(__pyx_t_24);
        PyList_SET_ITEM(__pyx_t_29, 6, __pyx_t_24);
        __pyx_t_28 = 0;
        __pyx_t_51 = 0;
        __pyx_t_31 = 0;
        __pyx_t_27 = 0;
        __pyx_t_24 = 0;
        __pyx_t_24 = NULL;
        __pyx_t_10 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_24 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_24)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_24);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_10 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_18)) {
          PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_n_s_q, __pyx_t_29};
          __pyx_t_30 = __Pyx_PyFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 311, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
          __Pyx_GOTREF(__pyx_t_30);
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_18)) {
          PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_n_s_q, __pyx_t_29};
          __pyx_t_30 = __Pyx_PyCFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 311, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
          __Pyx_GOTREF(__pyx_t_30);
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        } else
        #endif
        {
          __pyx_t_27 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 311, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          if (__pyx_t_24) {
            __Pyx_GIVEREF(__pyx_t_24); PyTuple_SET_ITEM(__pyx_t_27, 0, __pyx_t_24); __pyx_t_24 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_q);
          __Pyx_GIVEREF(__pyx_n_s_q);
          PyTuple_SET_ITEM(__pyx_t_27, 0+__pyx_t_10, __pyx_n_s_q);
          __Pyx_GIVEREF(__pyx_t_29);
          PyTuple_SET_ITEM(__pyx_t_27, 1+__pyx_t_10, __pyx_t_29);
          __pyx_t_29 = 0;
          __pyx_t_30 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_27, NULL); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 311, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        }
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_30);
        __pyx_t_30 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":313
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 ### q_val = []
 *                 q_val = dvec()             # <<<<<<<<<<<<<<
 *                 for i_i in range(len_c):
 *                     ### q_val.append(func_to_value(l_sph, q_func[name][i_i]))
 */
        try {
          __pyx_t_6 = __pyx_t_8malio_cy_12malio_cy_def_dvec();
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 313, __pyx_L1_error)
        }
        __pyx_v_q_val = __pyx_t_6;

        /* "malio_cy/op_q_spherical_cy.pyx":314
 *                 ### q_val = []
 *                 q_val = dvec()
 *                 for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *                     ### q_val.append(func_to_value(l_sph, q_func[name][i_i]))
 *                     ### def func_to_value(l_sph, func):
 */
        __pyx_t_10 = __pyx_v_len_c;
        __pyx_t_11 = __pyx_t_10;
        for (__pyx_t_37 = 0; __pyx_t_37 < __pyx_t_11; __pyx_t_37+=1) {
          __pyx_v_i_i = __pyx_t_37;

          /* "malio_cy/op_q_spherical_cy.pyx":317
 *                     ### q_val.append(func_to_value(l_sph, q_func[name][i_i]))
 *                     ### def func_to_value(l_sph, func):
 *                     sum_norm2 = 0.0             # <<<<<<<<<<<<<<
 *                     for i_j in range(l_sph2p1):
 *                         comp = q_func[name][i_i][i_j]
 */
          __pyx_v_sum_norm2 = 0.0;

          /* "malio_cy/op_q_spherical_cy.pyx":318
 *                     ### def func_to_value(l_sph, func):
 *                     sum_norm2 = 0.0
 *                     for i_j in range(l_sph2p1):             # <<<<<<<<<<<<<<
 *                         comp = q_func[name][i_i][i_j]
 *                         ### sum_norm2 += np.real(comp * np.conjugate(comp))
 */
          __pyx_t_36 = __pyx_v_l_sph2p1;
          __pyx_t_9 = __pyx_t_36;
          for (__pyx_t_35 = 0; __pyx_t_35 < __pyx_t_9; __pyx_t_35+=1) {
            __pyx_v_i_j = __pyx_t_35;

            /* "malio_cy/op_q_spherical_cy.pyx":319
 *                     sum_norm2 = 0.0
 *                     for i_j in range(l_sph2p1):
 *                         comp = q_func[name][i_i][i_j]             # <<<<<<<<<<<<<<
 *                         ### sum_norm2 += np.real(comp * np.conjugate(comp))
 *                         sum_norm2 += (comp*comp.conjugate()).real
 */
            __pyx_t_30 = __Pyx_PyObject_GetItem(__pyx_v_q_func, __pyx_v_name); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 319, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            __pyx_t_18 = __Pyx_GetItemInt(__pyx_t_30, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 319, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
            __pyx_t_30 = __Pyx_GetItemInt(__pyx_t_18, __pyx_v_i_j, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 319, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __pyx_t_47 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_30); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 319, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
            __pyx_v_comp = __pyx_t_47;

            /* "malio_cy/op_q_spherical_cy.pyx":321
 *                         comp = q_func[name][i_i][i_j]
 *                         ### sum_norm2 += np.real(comp * np.conjugate(comp))
 *                         sum_norm2 += (comp*comp.conjugate()).real             # <<<<<<<<<<<<<<
 *                     q_value = math.sqrt(sum_norm2*PI4*inv_l_sph2p1)
 *                     q_value = round(q_value, 14)
 */
            __pyx_v_sum_norm2 = (__pyx_v_sum_norm2 + __Pyx_CREAL(__Pyx_c_prod_double(__pyx_v_comp, __Pyx_c_conj_double(__pyx_v_comp))));
          }

          /* "malio_cy/op_q_spherical_cy.pyx":322
 *                         ### sum_norm2 += np.real(comp * np.conjugate(comp))
 *                         sum_norm2 += (comp*comp.conjugate()).real
 *                     q_value = math.sqrt(sum_norm2*PI4*inv_l_sph2p1)             # <<<<<<<<<<<<<<
 *                     q_value = round(q_value, 14)
 * 
 */
          __pyx_v_q_value = sqrt(((__pyx_v_sum_norm2 * __pyx_v_PI4) * __pyx_v_inv_l_sph2p1));

          /* "malio_cy/op_q_spherical_cy.pyx":323
 *                         sum_norm2 += (comp*comp.conjugate()).real
 *                     q_value = math.sqrt(sum_norm2*PI4*inv_l_sph2p1)
 *                     q_value = round(q_value, 14)             # <<<<<<<<<<<<<<
 * 
 *                     ### q_val.push_back(func_to_value(l_sph, q_func[name][i_i]))
 */
          __pyx_t_30 = PyFloat_FromDouble(__pyx_v_q_value); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __pyx_t_18 = PyTuple_New(2); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_GIVEREF(__pyx_t_30);
          PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_30);
          __Pyx_INCREF(__pyx_int_14);
          __Pyx_GIVEREF(__pyx_int_14);
          PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_int_14);
          __pyx_t_30 = 0;
          __pyx_t_30 = __Pyx_PyObject_Call(__pyx_builtin_round, __pyx_t_18, NULL); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 323, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_48 = __pyx_PyFloat_AsDouble(__pyx_t_30); if (unlikely((__pyx_t_48 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 323, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
          __pyx_v_q_value = __pyx_t_48;

          /* "malio_cy/op_q_spherical_cy.pyx":326
 * 
 *                     ### q_val.push_back(func_to_value(l_sph, q_func[name][i_i]))
 *                     q_val.push_back(q_value)             # <<<<<<<<<<<<<<
 *                 op_data[name] = q_val
 * 
 */
          try {
            __pyx_v_q_val.push_back(__pyx_v_q_value);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 326, __pyx_L1_error)
          }
        }

        /* "malio_cy/op_q_spherical_cy.pyx":327
 *                     ### q_val.push_back(func_to_value(l_sph, q_func[name][i_i]))
 *                     q_val.push_back(q_value)
 *                 op_data[name] = q_val             # <<<<<<<<<<<<<<
 * 
 *     # neighbor value averaging
 */
        __pyx_t_30 = __pyx_convert_vector_to_py_double(__pyx_v_q_val); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 327, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        if (unlikely(PyDict_SetItem(__pyx_v_op_data, __pyx_v_name, __pyx_t_30) < 0)) __PYX_ERR(0, 327, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":310
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 ### q_val = []
 */
      }
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":309
 *         l_sph2p1 = 2*l_sph+1
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
    }
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":306
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 *     for l_sph in l_list:             # <<<<<<<<<<<<<<
 *         l_sph2p1 = 2*l_sph+1
 *         inv_l_sph2p1 = 1.0/<double>l_sph2p1
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":330
 * 
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "malio_cy/op_q_spherical_cy.pyx":331
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list             # <<<<<<<<<<<<<<
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_12 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_12); __pyx_t_2 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_13 = Py_TYPE(__pyx_t_12)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 331, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_12))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_12)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_14 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_14); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 331, __pyx_L1_error)
        #else
        __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 331, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_2); __Pyx_INCREF(__pyx_t_14); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 331, __pyx_L1_error)
        #else
        __pyx_t_14 = PySequence_ITEM(__pyx_t_12, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 331, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        #endif
      }
    } else {
      __pyx_t_14 = __pyx_t_13(__pyx_t_12);
      if (unlikely(!__pyx_t_14)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 331, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_14);
    }
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 331, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_v_l_sph = __pyx_t_10;

    /* "malio_cy/op_q_spherical_cy.pyx":332
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list
 *             for a_t in range(a_times)             # <<<<<<<<<<<<<<
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_a_times); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 332, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
      __pyx_t_30 = __pyx_t_14; __Pyx_INCREF(__pyx_t_30); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
    } else {
      __pyx_t_16 = -1; __pyx_t_30 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_30);
      __pyx_t_17 = Py_TYPE(__pyx_t_30)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 332, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    for (;;) {
      if (likely(!__pyx_t_17)) {
        if (likely(PyList_CheckExact(__pyx_t_30))) {
          if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_30)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_14 = PyList_GET_ITEM(__pyx_t_30, __pyx_t_16); __Pyx_INCREF(__pyx_t_14); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 332, __pyx_L1_error)
          #else
          __pyx_t_14 = PySequence_ITEM(__pyx_t_30, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 332, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          #endif
        } else {
          if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_30)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_30, __pyx_t_16); __Pyx_INCREF(__pyx_t_14); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 332, __pyx_L1_error)
          #else
          __pyx_t_14 = PySequence_ITEM(__pyx_t_30, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 332, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          #endif
        }
      } else {
        __pyx_t_14 = __pyx_t_17(__pyx_t_30);
        if (unlikely(!__pyx_t_14)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 332, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_14);
      }
      __Pyx_XDECREF_SET(__pyx_v_a_t, __pyx_t_14);
      __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":333
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 */
      __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_18 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_14); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      if (likely(PyList_CheckExact(__pyx_t_18)) || PyTuple_CheckExact(__pyx_t_18)) {
        __pyx_t_14 = __pyx_t_18; __Pyx_INCREF(__pyx_t_14); __pyx_t_19 = 0;
        __pyx_t_20 = NULL;
      } else {
        __pyx_t_19 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_18); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_20 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 333, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      for (;;) {
        if (likely(!__pyx_t_20)) {
          if (likely(PyList_CheckExact(__pyx_t_14))) {
            if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_14)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_18 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_19); __Pyx_INCREF(__pyx_t_18); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 333, __pyx_L1_error)
            #else
            __pyx_t_18 = PySequence_ITEM(__pyx_t_14, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 333, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            #endif
          } else {
            if (__pyx_t_19 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_19); __Pyx_INCREF(__pyx_t_18); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 333, __pyx_L1_error)
            #else
            __pyx_t_18 = PySequence_ITEM(__pyx_t_14, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 333, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            #endif
          }
        } else {
          __pyx_t_18 = __pyx_t_20(__pyx_t_14);
          if (unlikely(!__pyx_t_18)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 333, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_18);
        }
        __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":334
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q', [l_sph, a_t+1, b_t, o_f, o_i, o_j, p_weight])
 */
        if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
          __pyx_t_18 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_18); __pyx_t_22 = 0;
          __pyx_t_23 = NULL;
        } else {
          __pyx_t_22 = -1; __pyx_t_18 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 334, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_23 = Py_TYPE(__pyx_t_18)->tp_iternext; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 334, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_23)) {
            if (likely(PyList_CheckExact(__pyx_t_18))) {
              if (__pyx_t_22 >= PyList_GET_SIZE(__pyx_t_18)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_27 = PyList_GET_ITEM(__pyx_t_18, __pyx_t_22); __Pyx_INCREF(__pyx_t_27); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
              #else
              __pyx_t_27 = PySequence_ITEM(__pyx_t_18, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 334, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_27);
              #endif
            } else {
              if (__pyx_t_22 >= PyTuple_GET_SIZE(__pyx_t_18)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_27 = PyTuple_GET_ITEM(__pyx_t_18, __pyx_t_22); __Pyx_INCREF(__pyx_t_27); __pyx_t_22++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
              #else
              __pyx_t_27 = PySequence_ITEM(__pyx_t_18, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 334, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_27);
              #endif
            }
          } else {
            __pyx_t_27 = __pyx_t_23(__pyx_t_18);
            if (unlikely(!__pyx_t_27)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 334, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_27);
          }
          __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          __pyx_v_o_f = __pyx_t_10;
          if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
            __pyx_t_27 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_27); __pyx_t_25 = 0;
            __pyx_t_26 = NULL;
          } else {
            __pyx_t_25 = -1; __pyx_t_27 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 334, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __pyx_t_26 = Py_TYPE(__pyx_t_27)->tp_iternext; if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 334, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_26)) {
              if (likely(PyList_CheckExact(__pyx_t_27))) {
                if (__pyx_t_25 >= PyList_GET_SIZE(__pyx_t_27)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_29 = PyList_GET_ITEM(__pyx_t_27, __pyx_t_25); __Pyx_INCREF(__pyx_t_29); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
                #else
                __pyx_t_29 = PySequence_ITEM(__pyx_t_27, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 334, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_29);
                #endif
              } else {
                if (__pyx_t_25 >= PyTuple_GET_SIZE(__pyx_t_27)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_29 = PyTuple_GET_ITEM(__pyx_t_27, __pyx_t_25); __Pyx_INCREF(__pyx_t_29); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
                #else
                __pyx_t_29 = PySequence_ITEM(__pyx_t_27, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 334, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_29);
                #endif
              }
            } else {
              __pyx_t_29 = __pyx_t_26(__pyx_t_27);
              if (unlikely(!__pyx_t_29)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 334, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_29);
            }
            __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_29); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
            __pyx_v_o_i = __pyx_t_10;
            if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
              __pyx_t_29 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_29); __pyx_t_49 = 0;
              __pyx_t_50 = NULL;
            } else {
              __pyx_t_49 = -1; __pyx_t_29 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 334, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_29);
              __pyx_t_50 = Py_TYPE(__pyx_t_29)->tp_iternext; if (unlikely(!__pyx_t_50)) __PYX_ERR(0, 334, __pyx_L1_error)
            }
            for (;;) {
              if (likely(!__pyx_t_50)) {
                if (likely(PyList_CheckExact(__pyx_t_29))) {
                  if (__pyx_t_49 >= PyList_GET_SIZE(__pyx_t_29)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_24 = PyList_GET_ITEM(__pyx_t_29, __pyx_t_49); __Pyx_INCREF(__pyx_t_24); __pyx_t_49++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
                  #else
                  __pyx_t_24 = PySequence_ITEM(__pyx_t_29, __pyx_t_49); __pyx_t_49++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 334, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_24);
                  #endif
                } else {
                  if (__pyx_t_49 >= PyTuple_GET_SIZE(__pyx_t_29)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_24 = PyTuple_GET_ITEM(__pyx_t_29, __pyx_t_49); __Pyx_INCREF(__pyx_t_24); __pyx_t_49++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
                  #else
                  __pyx_t_24 = PySequence_ITEM(__pyx_t_29, __pyx_t_49); __pyx_t_49++; if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 334, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_24);
                  #endif
                }
              } else {
                __pyx_t_24 = __pyx_t_50(__pyx_t_29);
                if (unlikely(!__pyx_t_24)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else __PYX_ERR(0, 334, __pyx_L1_error)
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_24);
              }
              __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
              __pyx_v_o_j = __pyx_t_10;
              if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
                __pyx_t_24 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_24); __pyx_t_53 = 0;
                __pyx_t_54 = NULL;
              } else {
                __pyx_t_53 = -1; __pyx_t_24 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 334, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_24);
                __pyx_t_54 = Py_TYPE(__pyx_t_24)->tp_iternext; if (unlikely(!__pyx_t_54)) __PYX_ERR(0, 334, __pyx_L1_error)
              }
              for (;;) {
                if (likely(!__pyx_t_54)) {
                  if (likely(PyList_CheckExact(__pyx_t_24))) {
                    if (__pyx_t_53 >= PyList_GET_SIZE(__pyx_t_24)) break;
                    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                    __pyx_t_31 = PyList_GET_ITEM(__pyx_t_24, __pyx_t_53); __Pyx_INCREF(__pyx_t_31); __pyx_t_53++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
                    #else
                    __pyx_t_31 = PySequence_ITEM(__pyx_t_24, __pyx_t_53); __pyx_t_53++; if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 334, __pyx_L1_error)
                    __Pyx_GOTREF(__pyx_t_31);
                    #endif
                  } else {
                    if (__pyx_t_53 >= PyTuple_GET_SIZE(__pyx_t_24)) break;
                    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                    __pyx_t_31 = PyTuple_GET_ITEM(__pyx_t_24, __pyx_t_53); __Pyx_INCREF(__pyx_t_31); __pyx_t_53++; if (unlikely(0 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
                    #else
                    __pyx_t_31 = PySequence_ITEM(__pyx_t_24, __pyx_t_53); __pyx_t_53++; if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 334, __pyx_L1_error)
                    __Pyx_GOTREF(__pyx_t_31);
                    #endif
                  }
                } else {
                  __pyx_t_31 = __pyx_t_54(__pyx_t_24);
                  if (unlikely(!__pyx_t_31)) {
                    PyObject* exc_type = PyErr_Occurred();
                    if (exc_type) {
                      if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                      else __PYX_ERR(0, 334, __pyx_L1_error)
                    }
                    break;
                  }
                  __Pyx_GOTREF(__pyx_t_31);
                }
                __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_31); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
                __Pyx_DECREF(__pyx_t_31); __pyx_t_31 = 0;
                __pyx_v_p_weight = __pyx_t_10;

                /* "malio_cy/op_q_spherical_cy.pyx":330
 * 
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 */
                __pyx_t_31 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_31)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_31);
                __pyx_t_51 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_51)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_51);
                __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_28);
                __pyx_t_32 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_32)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_32);
                __pyx_t_21 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_21);
                __pyx_t_55 = PyTuple_New(7); if (unlikely(!__pyx_t_55)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_55);
                __Pyx_GIVEREF(__pyx_t_31);
                PyTuple_SET_ITEM(__pyx_t_55, 0, __pyx_t_31);
                __Pyx_INCREF(__pyx_v_a_t);
                __Pyx_GIVEREF(__pyx_v_a_t);
                PyTuple_SET_ITEM(__pyx_t_55, 1, __pyx_v_a_t);
                __Pyx_INCREF(__pyx_v_b_t);
                __Pyx_GIVEREF(__pyx_v_b_t);
                PyTuple_SET_ITEM(__pyx_t_55, 2, __pyx_v_b_t);
                __Pyx_GIVEREF(__pyx_t_51);
                PyTuple_SET_ITEM(__pyx_t_55, 3, __pyx_t_51);
                __Pyx_GIVEREF(__pyx_t_28);
                PyTuple_SET_ITEM(__pyx_t_55, 4, __pyx_t_28);
                __Pyx_GIVEREF(__pyx_t_32);
                PyTuple_SET_ITEM(__pyx_t_55, 5, __pyx_t_32);
                __Pyx_GIVEREF(__pyx_t_21);
                PyTuple_SET_ITEM(__pyx_t_55, 6, __pyx_t_21);
                __pyx_t_31 = 0;
                __pyx_t_51 = 0;
                __pyx_t_28 = 0;
                __pyx_t_32 = 0;
                __pyx_t_21 = 0;
                if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_55))) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;

                /* "malio_cy/op_q_spherical_cy.pyx":334
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q', [l_sph, a_t+1, b_t, o_f, o_i, o_j, p_weight])
 */
              }
              __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
            }
            __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
          }
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        }
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":333
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 */
      }
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":332
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list
 *             for a_t in range(a_times)             # <<<<<<<<<<<<<<
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    }
    __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":331
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list             # <<<<<<<<<<<<<<
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 */
  }
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":335
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name     = misc_cy.naming('q', [l_sph, a_t+1, b_t, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, a_t  , b_t, o_f, o_i, o_j, p_weight])
 */
  __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_12 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_12); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 335, __pyx_L1_error)
    #else
    __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_12))) || (PyList_CheckExact(__pyx_t_12))) {
      PyObject* sequence = __pyx_t_12;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 7)) {
        if (size > 7) __Pyx_RaiseTooManyValuesError(7);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 335, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_30 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_14 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_18 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_27 = PyTuple_GET_ITEM(sequence, 3); 
        __pyx_t_29 = PyTuple_GET_ITEM(sequence, 4); 
        __pyx_t_24 = PyTuple_GET_ITEM(sequence, 5); 
        __pyx_t_55 = PyTuple_GET_ITEM(sequence, 6); 
      } else {
        __pyx_t_30 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_14 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_18 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_27 = PyList_GET_ITEM(sequence, 3); 
        __pyx_t_29 = PyList_GET_ITEM(sequence, 4); 
        __pyx_t_24 = PyList_GET_ITEM(sequence, 5); 
        __pyx_t_55 = PyList_GET_ITEM(sequence, 6); 
      }
      __Pyx_INCREF(__pyx_t_30);
      __Pyx_INCREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_t_18);
      __Pyx_INCREF(__pyx_t_27);
      __Pyx_INCREF(__pyx_t_29);
      __Pyx_INCREF(__pyx_t_24);
      __Pyx_INCREF(__pyx_t_55);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[7] = {&__pyx_t_30,&__pyx_t_14,&__pyx_t_18,&__pyx_t_27,&__pyx_t_29,&__pyx_t_24,&__pyx_t_55};
        for (i=0; i < 7; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 335, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[7] = {&__pyx_t_30,&__pyx_t_14,&__pyx_t_18,&__pyx_t_27,&__pyx_t_29,&__pyx_t_24,&__pyx_t_55};
      __pyx_t_21 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 335, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_33 = Py_TYPE(__pyx_t_21)->tp_iternext;
      for (index=0; index < 7; index++) {
        PyObject* item = __pyx_t_33(__pyx_t_21); if (unlikely(!item)) goto __pyx_L113_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_33(__pyx_t_21), 7) < 0) __PYX_ERR(0, 335, __pyx_L1_error)
      __pyx_t_33 = NULL;
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
      goto __pyx_L114_unpacking_done;
      __pyx_L113_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
      __pyx_t_33 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 335, __pyx_L1_error)
      __pyx_L114_unpacking_done:;
    }
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_30); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
    __pyx_t_37 = __Pyx_PyInt_As_int(__pyx_t_29); if (unlikely((__pyx_t_37 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
    __pyx_t_36 = __Pyx_PyInt_As_int(__pyx_t_24); if (unlikely((__pyx_t_36 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_55); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
    __pyx_v_l_sph = __pyx_t_10;
    __Pyx_XDECREF_SET(__pyx_v_a_t, __pyx_t_14);
    __pyx_t_14 = 0;
    __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_18);
    __pyx_t_18 = 0;
    __pyx_v_o_f = __pyx_t_11;
    __pyx_v_o_i = __pyx_t_37;
    __pyx_v_o_j = __pyx_t_36;
    __pyx_v_p_weight = __pyx_t_9;

    /* "malio_cy/op_q_spherical_cy.pyx":336
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q', [l_sph, a_t+1, b_t, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *         name_old = misc_cy.naming('q', [l_sph, a_t  , b_t, o_f, o_i, o_j, p_weight])
 *         ### op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_55, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_55)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_55);
    __pyx_t_24 = __Pyx_PyObject_GetAttrStr(__pyx_t_55, __pyx_n_s_naming); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_24);
    __Pyx_DECREF(__pyx_t_55); __pyx_t_55 = 0;
    __pyx_t_55 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_55)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_55);
    __pyx_t_29 = __Pyx_PyInt_AddObjC(__pyx_v_a_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_29);
    __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_30);
    __pyx_t_21 = PyList_New(7); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_GIVEREF(__pyx_t_55);
    PyList_SET_ITEM(__pyx_t_21, 0, __pyx_t_55);
    __Pyx_GIVEREF(__pyx_t_29);
    PyList_SET_ITEM(__pyx_t_21, 1, __pyx_t_29);
    __Pyx_INCREF(__pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_v_b_t);
    PyList_SET_ITEM(__pyx_t_21, 2, __pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_t_27);
    PyList_SET_ITEM(__pyx_t_21, 3, __pyx_t_27);
    __Pyx_GIVEREF(__pyx_t_18);
    PyList_SET_ITEM(__pyx_t_21, 4, __pyx_t_18);
    __Pyx_GIVEREF(__pyx_t_14);
    PyList_SET_ITEM(__pyx_t_21, 5, __pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_30);
    PyList_SET_ITEM(__pyx_t_21, 6, __pyx_t_30);
    __pyx_t_55 = 0;
    __pyx_t_29 = 0;
    __pyx_t_27 = 0;
    __pyx_t_18 = 0;
    __pyx_t_14 = 0;
    __pyx_t_30 = 0;
    __pyx_t_30 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_24))) {
      __pyx_t_30 = PyMethod_GET_SELF(__pyx_t_24);
      if (likely(__pyx_t_30)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_24);
        __Pyx_INCREF(__pyx_t_30);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_24, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_24)) {
      PyObject *__pyx_temp[3] = {__pyx_t_30, __pyx_n_s_q, __pyx_t_21};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_24, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 336, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_30); __pyx_t_30 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_24)) {
      PyObject *__pyx_temp[3] = {__pyx_t_30, __pyx_n_s_q, __pyx_t_21};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_24, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 336, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_30); __pyx_t_30 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    } else
    #endif
    {
      __pyx_t_14 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      if (__pyx_t_30) {
        __Pyx_GIVEREF(__pyx_t_30); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_30); __pyx_t_30 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_9, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_21);
      PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_9, __pyx_t_21);
      __pyx_t_21 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_24, __pyx_t_14, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":337
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q', [l_sph, a_t+1, b_t, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, a_t  , b_t, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *         ### op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])
 *         ### val_ave = []
 */
    __Pyx_GetModuleGlobalName(__pyx_t_24, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_24);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_24, __pyx_n_s_naming); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
    __pyx_t_24 = __Pyx_PyInt_From_int(__pyx_v_l_sph); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_24);
    __pyx_t_21 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_30);
    __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_p_weight); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    __pyx_t_29 = PyList_New(7); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_29);
    __Pyx_GIVEREF(__pyx_t_24);
    PyList_SET_ITEM(__pyx_t_29, 0, __pyx_t_24);
    __Pyx_INCREF(__pyx_v_a_t);
    __Pyx_GIVEREF(__pyx_v_a_t);
    PyList_SET_ITEM(__pyx_t_29, 1, __pyx_v_a_t);
    __Pyx_INCREF(__pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_v_b_t);
    PyList_SET_ITEM(__pyx_t_29, 2, __pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_t_21);
    PyList_SET_ITEM(__pyx_t_29, 3, __pyx_t_21);
    __Pyx_GIVEREF(__pyx_t_30);
    PyList_SET_ITEM(__pyx_t_29, 4, __pyx_t_30);
    __Pyx_GIVEREF(__pyx_t_18);
    PyList_SET_ITEM(__pyx_t_29, 5, __pyx_t_18);
    __Pyx_GIVEREF(__pyx_t_27);
    PyList_SET_ITEM(__pyx_t_29, 6, __pyx_t_27);
    __pyx_t_24 = 0;
    __pyx_t_21 = 0;
    __pyx_t_30 = 0;
    __pyx_t_18 = 0;
    __pyx_t_27 = 0;
    __pyx_t_27 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
      __pyx_t_27 = PyMethod_GET_SELF(__pyx_t_14);
      if (likely(__pyx_t_27)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
        __Pyx_INCREF(__pyx_t_27);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_14, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_14)) {
      PyObject *__pyx_temp[3] = {__pyx_t_27, __pyx_n_s_q, __pyx_t_29};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 337, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_27); __pyx_t_27 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
      PyObject *__pyx_temp[3] = {__pyx_t_27, __pyx_n_s_q, __pyx_t_29};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 337, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_27); __pyx_t_27 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
    } else
    #endif
    {
      __pyx_t_18 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 337, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      if (__pyx_t_27) {
        __Pyx_GIVEREF(__pyx_t_27); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_27); __pyx_t_27 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_9, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_29);
      PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_9, __pyx_t_29);
      __pyx_t_29 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_18, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 337, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":340
 *         ### op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])
 *         ### val_ave = []
 *         q_val = dvec()             # <<<<<<<<<<<<<<
 *         for i_i in range(len_c):
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 */
    try {
      __pyx_t_6 = __pyx_t_8malio_cy_12malio_cy_def_dvec();
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 340, __pyx_L1_error)
    }
    __pyx_v_q_val = __pyx_t_6;

    /* "malio_cy/op_q_spherical_cy.pyx":341
 *         ### val_ave = []
 *         q_val = dvec()
 *         for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 *             dl_neighbor_list_ii_1 = <double>(l_neighbor_list_ii + 1)
 */
    __pyx_t_9 = __pyx_v_len_c;
    __pyx_t_36 = __pyx_t_9;
    for (__pyx_t_37 = 0; __pyx_t_37 < __pyx_t_36; __pyx_t_37+=1) {
      __pyx_v_i_i = __pyx_t_37;

      /* "malio_cy/op_q_spherical_cy.pyx":342
 *         q_val = dvec()
 *         for i_i in range(len_c):
 *             l_neighbor_list_ii = len(neighbor_list[i_i])             # <<<<<<<<<<<<<<
 *             dl_neighbor_list_ii_1 = <double>(l_neighbor_list_ii + 1)
 *             dpart = 0.0
 */
      __pyx_t_12 = __Pyx_GetItemInt(__pyx_v_neighbor_list, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 342, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_16 = PyObject_Length(__pyx_t_12); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 342, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_v_l_neighbor_list_ii = __pyx_t_16;

      /* "malio_cy/op_q_spherical_cy.pyx":343
 *         for i_i in range(len_c):
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 *             dl_neighbor_list_ii_1 = <double>(l_neighbor_list_ii + 1)             # <<<<<<<<<<<<<<
 *             dpart = 0.0
 *             for ii_j in range(l_neighbor_list_ii):
 */
      __pyx_v_dl_neighbor_list_ii_1 = ((double)(__pyx_v_l_neighbor_list_ii + 1));

      /* "malio_cy/op_q_spherical_cy.pyx":344
 *             l_neighbor_list_ii = len(neighbor_list[i_i])
 *             dl_neighbor_list_ii_1 = <double>(l_neighbor_list_ii + 1)
 *             dpart = 0.0             # <<<<<<<<<<<<<<
 *             for ii_j in range(l_neighbor_list_ii):
 *                 inei = ineighbor_list[i_i][ii_j]
 */
      __pyx_v_dpart = 0.0;

      /* "malio_cy/op_q_spherical_cy.pyx":345
 *             dl_neighbor_list_ii_1 = <double>(l_neighbor_list_ii + 1)
 *             dpart = 0.0
 *             for ii_j in range(l_neighbor_list_ii):             # <<<<<<<<<<<<<<
 *                 inei = ineighbor_list[i_i][ii_j]
 *                 dpart += op_data[name_old][inei]
 */
      __pyx_t_11 = __pyx_v_l_neighbor_list_ii;
      __pyx_t_10 = __pyx_t_11;
      for (__pyx_t_35 = 0; __pyx_t_35 < __pyx_t_10; __pyx_t_35+=1) {
        __pyx_v_ii_j = __pyx_t_35;

        /* "malio_cy/op_q_spherical_cy.pyx":346
 *             dpart = 0.0
 *             for ii_j in range(l_neighbor_list_ii):
 *                 inei = ineighbor_list[i_i][ii_j]             # <<<<<<<<<<<<<<
 *                 dpart += op_data[name_old][inei]
 *                 ### part.append(op_data[name_old][inei])
 */
        __pyx_v_inei = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_ii_j]);

        /* "malio_cy/op_q_spherical_cy.pyx":347
 *             for ii_j in range(l_neighbor_list_ii):
 *                 inei = ineighbor_list[i_i][ii_j]
 *                 dpart += op_data[name_old][inei]             # <<<<<<<<<<<<<<
 *                 ### part.append(op_data[name_old][inei])
 *             dpart += op_data[name_old][i_i]
 */
        __pyx_t_12 = PyFloat_FromDouble(__pyx_v_dpart); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 347, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_14 = __Pyx_PyDict_GetItem(__pyx_v_op_data, __pyx_v_name_old); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 347, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_18 = __Pyx_GetItemInt(__pyx_t_14, __pyx_v_inei, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 347, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = PyNumber_InPlaceAdd(__pyx_t_12, __pyx_t_18); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 347, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_48 = __pyx_PyFloat_AsDouble(__pyx_t_14); if (unlikely((__pyx_t_48 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 347, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_v_dpart = __pyx_t_48;
      }

      /* "malio_cy/op_q_spherical_cy.pyx":349
 *                 dpart += op_data[name_old][inei]
 *                 ### part.append(op_data[name_old][inei])
 *             dpart += op_data[name_old][i_i]             # <<<<<<<<<<<<<<
 *             ### val_ave.append(np.average(part))
 *             q_val.push_back(dpart/dl_neighbor_list_ii_1)
 */
      __pyx_t_14 = PyFloat_FromDouble(__pyx_v_dpart); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_18 = __Pyx_PyDict_GetItem(__pyx_v_op_data, __pyx_v_name_old); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_18, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __pyx_t_18 = PyNumber_InPlaceAdd(__pyx_t_14, __pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_48 = __pyx_PyFloat_AsDouble(__pyx_t_18); if (unlikely((__pyx_t_48 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 349, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __pyx_v_dpart = __pyx_t_48;

      /* "malio_cy/op_q_spherical_cy.pyx":351
 *             dpart += op_data[name_old][i_i]
 *             ### val_ave.append(np.average(part))
 *             q_val.push_back(dpart/dl_neighbor_list_ii_1)             # <<<<<<<<<<<<<<
 *         ### op_data[name] = val_ave
 *         op_data[name] = q_val
 */
      try {
        __pyx_v_q_val.push_back((__pyx_v_dpart / __pyx_v_dl_neighbor_list_ii_1));
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 351, __pyx_L1_error)
      }
    }

    /* "malio_cy/op_q_spherical_cy.pyx":353
 *             q_val.push_back(dpart/dl_neighbor_list_ii_1)
 *         ### op_data[name] = val_ave
 *         op_data[name] = q_val             # <<<<<<<<<<<<<<
 * 
 *     return op_data
 */
    __pyx_t_18 = __pyx_convert_vector_to_py_double(__pyx_v_q_val); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    if (unlikely(PyDict_SetItem(__pyx_v_op_data, __pyx_v_name, __pyx_t_18) < 0)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":335
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name     = misc_cy.naming('q', [l_sph, a_t+1, b_t, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, a_t  , b_t, o_f, o_i, o_j, p_weight])
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":355
 *         op_data[name] = q_val
 * 
 *     return op_data             # <<<<<<<<<<<<<<
 * 
 * def spherical_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_op_data);
  __pyx_r = __pyx_v_op_data;
  goto __pyx_L0;

  /* "malio_cy/op_q_spherical_cy.pyx":135
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def spherical_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_24);
  __Pyx_XDECREF(__pyx_t_27);
  __Pyx_XDECREF(__pyx_t_28);
  __Pyx_XDECREF(__pyx_t_29);
  __Pyx_XDECREF(__pyx_t_30);
  __Pyx_XDECREF(__pyx_t_31);
  __Pyx_XDECREF(__pyx_t_32);
  __Pyx_XDECREF(__pyx_t_51);
  __Pyx_XDECREF(__pyx_t_55);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.spherical_order_parameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a_times);
  __Pyx_XDECREF(__pyx_v_b_times);
  __Pyx_XDECREF(__pyx_v_oi_oj);
  __Pyx_XDECREF(__pyx_v_o_factor);
  __Pyx_XDECREF(__pyx_v_l_list);
  __Pyx_XDECREF(__pyx_v_p_list);
  __Pyx_XDECREF(__pyx_v_q_func_temp);
  __Pyx_XDECREF(__pyx_v_comb);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_p_fact);
  __Pyx_XDECREF(__pyx_v_oi_list_not_oi);
  __Pyx_XDECREF(__pyx_v_q_func);
  __Pyx_XDECREF(__pyx_v_b_t);
  __Pyx_XDECREF(__pyx_v_name_old);
  __Pyx_XDECREF(__pyx_v_op_data);
  __Pyx_XDECREF(__pyx_v_a_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_q_spherical_cy.pyx":357
 *     return op_data
 * 
 * def spherical_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_13spherical_order_parameter_org(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_17op_q_spherical_cy_13spherical_order_parameter_org = {"spherical_order_parameter_org", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_17op_q_spherical_cy_13spherical_order_parameter_org, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_17op_q_spherical_cy_13spherical_order_parameter_org(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coord = 0;
  PyObject *__pyx_v_direct = 0;
  PyObject *__pyx_v_box_length = 0;
  PyObject *__pyx_v_setting = 0;
  PyObject *__pyx_v_neighbor_list = 0;
  PyObject *__pyx_v_thread_num = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("spherical_order_parameter_org (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_coord,&__pyx_n_s_direct,&__pyx_n_s_box_length,&__pyx_n_s_setting,&__pyx_n_s_neighbor_list,&__pyx_n_s_thread_num,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_coord)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_direct)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter_org", 1, 6, 6, 1); __PYX_ERR(0, 357, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_box_length)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter_org", 1, 6, 6, 2); __PYX_ERR(0, 357, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_setting)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter_org", 1, 6, 6, 3); __PYX_ERR(0, 357, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_neighbor_list)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter_org", 1, 6, 6, 4); __PYX_ERR(0, 357, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_thread_num)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("spherical_order_parameter_org", 1, 6, 6, 5); __PYX_ERR(0, 357, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "spherical_order_parameter_org") < 0)) __PYX_ERR(0, 357, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_coord = values[0];
    __pyx_v_direct = values[1];
    __pyx_v_box_length = values[2];
    __pyx_v_setting = values[3];
    __pyx_v_neighbor_list = values[4];
    __pyx_v_thread_num = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("spherical_order_parameter_org", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 357, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.spherical_order_parameter_org", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_17op_q_spherical_cy_12spherical_order_parameter_org(__pyx_self, __pyx_v_coord, __pyx_v_direct, __pyx_v_box_length, __pyx_v_setting, __pyx_v_neighbor_list, __pyx_v_thread_num);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_17op_q_spherical_cy_12spherical_order_parameter_org(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, PyObject *__pyx_v_thread_num) {
  PyObject *__pyx_v_a_times = NULL;
  PyObject *__pyx_v_b_times = NULL;
  PyObject *__pyx_v_oi_oj = NULL;
  PyObject *__pyx_v_o_factor = NULL;
  PyObject *__pyx_v_l_list = NULL;
  PyObject *__pyx_v_p_list = NULL;
  PyObject *__pyx_v_now_pool = NULL;
  PyObject *__pyx_v_args = NULL;
  PyObject *__pyx_v_q_func_temp = NULL;
  PyObject *__pyx_v_q_func = NULL;
  PyObject *__pyx_v_comb = NULL;
  PyObject *__pyx_v_l_sph = NULL;
  PyObject *__pyx_v_b_t = NULL;
  PyObject *__pyx_v_o_f = NULL;
  PyObject *__pyx_v_o_i = NULL;
  PyObject *__pyx_v_o_j = NULL;
  PyObject *__pyx_v_p_weight = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_name_old = NULL;
  PyObject *__pyx_v_op_data = NULL;
  PyObject *__pyx_v_q_val = NULL;
  Py_ssize_t __pyx_v_i_i;
  PyObject *__pyx_v_a_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *(*__pyx_t_12)(PyObject *);
  Py_ssize_t __pyx_t_13;
  PyObject *(*__pyx_t_14)(PyObject *);
  PyObject *__pyx_t_15 = NULL;
  Py_ssize_t __pyx_t_16;
  PyObject *(*__pyx_t_17)(PyObject *);
  PyObject *__pyx_t_18 = NULL;
  Py_ssize_t __pyx_t_19;
  PyObject *(*__pyx_t_20)(PyObject *);
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  PyObject *(*__pyx_t_23)(PyObject *);
  int __pyx_t_24;
  Py_ssize_t __pyx_t_25;
  PyObject *(*__pyx_t_26)(PyObject *);
  PyObject *__pyx_t_27 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("spherical_order_parameter_org", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":359
 * def spherical_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']             # <<<<<<<<<<<<<<
 *     b_times = setting['b_in_Q']
 *     oi_oj = setting['oi_oj']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_ave_times); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_a_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":360
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_Q']             # <<<<<<<<<<<<<<
 *     oi_oj = setting['oi_oj']
 *     o_factor = setting['o_factor']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_b_in_Q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_b_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":361
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_Q']
 *     oi_oj = setting['oi_oj']             # <<<<<<<<<<<<<<
 *     o_factor = setting['o_factor']
 *     l_list = setting['l_in_Q']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_oi_oj); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_oi_oj = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":362
 *     b_times = setting['b_in_Q']
 *     oi_oj = setting['oi_oj']
 *     o_factor = setting['o_factor']             # <<<<<<<<<<<<<<
 *     l_list = setting['l_in_Q']
 *     p_list = setting['p_in_Q']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_o_factor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o_factor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":363
 *     oi_oj = setting['oi_oj']
 *     o_factor = setting['o_factor']
 *     l_list = setting['l_in_Q']             # <<<<<<<<<<<<<<
 *     p_list = setting['p_in_Q']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_l_in_Q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":364
 *     o_factor = setting['o_factor']
 *     l_list = setting['l_in_Q']
 *     p_list = setting['p_in_Q']             # <<<<<<<<<<<<<<
 * 
 *     # calc spherical function
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_p_in_Q); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_p_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":369
 *     # prepare parallel
 *     global coord_1d
 *     coord_1d = Array('d', misc_cy.convert_3dim_to_1dim(coord), lock=False)             # <<<<<<<<<<<<<<
 * 
 *     global direct_1d
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_convert_3dim_to_1dim); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_v_coord) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_coord);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_n_s_d);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_lock, Py_False) < 0) __PYX_ERR(0, 369, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_coord_1d, __pyx_t_3) < 0) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":372
 * 
 *     global direct_1d
 *     direct_1d = Array('d', misc_cy.convert_3dim_to_1dim(direct), lock=False)             # <<<<<<<<<<<<<<
 * 
 *     now_pool = Pool(thread_num)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_convert_3dim_to_1dim); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_v_direct) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_direct);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_n_s_d);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_lock, Py_False) < 0) __PYX_ERR(0, 372, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_direct_1d, __pyx_t_4) < 0) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":374
 *     direct_1d = Array('d', misc_cy.convert_3dim_to_1dim(direct), lock=False)
 * 
 *     now_pool = Pool(thread_num)             # <<<<<<<<<<<<<<
 *     args = [[box_length, neighbor_list[i_i], i_i, l_list, o_factor, oi_oj, p_list]
 *             for i_i in range(len(coord))]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Pool); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_thread_num) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_thread_num);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_now_pool = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":375
 * 
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, l_list, o_factor, oi_oj, p_list]             # <<<<<<<<<<<<<<
 *             for i_i in range(len(coord))]
 *     q_func_temp = now_pool.map(calc_q_wrapper, args)
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "malio_cy/op_q_spherical_cy.pyx":376
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, l_list, o_factor, oi_oj, p_list]
 *             for i_i in range(len(coord))]             # <<<<<<<<<<<<<<
 *     q_func_temp = now_pool.map(calc_q_wrapper, args)
 *     now_pool.close()
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 376, __pyx_L1_error)
  __pyx_t_6 = __pyx_t_5;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
    __pyx_v_i_i = __pyx_t_7;

    /* "malio_cy/op_q_spherical_cy.pyx":375
 * 
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, l_list, o_factor, oi_oj, p_list]             # <<<<<<<<<<<<<<
 *             for i_i in range(len(coord))]
 *     q_func_temp = now_pool.map(calc_q_wrapper, args)
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_neighbor_list, __pyx_v_i_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyInt_FromSsize_t(__pyx_v_i_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyList_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_box_length);
    __Pyx_GIVEREF(__pyx_v_box_length);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_box_length);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_l_list);
    __Pyx_GIVEREF(__pyx_v_l_list);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_v_l_list);
    __Pyx_INCREF(__pyx_v_o_factor);
    __Pyx_GIVEREF(__pyx_v_o_factor);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_v_o_factor);
    __Pyx_INCREF(__pyx_v_oi_oj);
    __Pyx_GIVEREF(__pyx_v_oi_oj);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_v_oi_oj);
    __Pyx_INCREF(__pyx_v_p_list);
    __Pyx_GIVEREF(__pyx_v_p_list);
    PyList_SET_ITEM(__pyx_t_3, 6, __pyx_v_p_list);
    __pyx_t_2 = 0;
    __pyx_t_1 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 375, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_args = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":377
 *     args = [[box_length, neighbor_list[i_i], i_i, l_list, o_factor, oi_oj, p_list]
 *             for i_i in range(len(coord))]
 *     q_func_temp = now_pool.map(calc_q_wrapper, args)             # <<<<<<<<<<<<<<
 *     now_pool.close()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_now_pool, __pyx_n_s_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_calc_q_wrapper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_1, __pyx_v_args};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 377, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_1, __pyx_v_args};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 377, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_2) {
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_2); __pyx_t_2 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_v_args);
    __pyx_t_1 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_q_func_temp = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":378
 *             for i_i in range(len(coord))]
 *     q_func_temp = now_pool.map(calc_q_wrapper, args)
 *     now_pool.close()             # <<<<<<<<<<<<<<
 * 
 *     del coord_1d
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_now_pool, __pyx_n_s_close); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_4 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":380
 *     now_pool.close()
 * 
 *     del coord_1d             # <<<<<<<<<<<<<<
 *     del direct_1d
 * 
 */
  if (__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_coord_1d) < 0) __PYX_ERR(0, 380, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":381
 * 
 *     del coord_1d
 *     del direct_1d             # <<<<<<<<<<<<<<
 * 
 *     q_func = misc_cy.data_num_name_to_data_name_num(q_func_temp, len(coord))
 */
  if (__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_direct_1d) < 0) __PYX_ERR(0, 381, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":383
 *     del direct_1d
 * 
 *     q_func = misc_cy.data_num_name_to_data_name_num(q_func_temp, len(coord))             # <<<<<<<<<<<<<<
 * 
 *     # calc function average
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_data_num_name_to_data_name_num); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 383, __pyx_L1_error)
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_9)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_q_func_temp, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_q_func_temp, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_1) {
      __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1); __pyx_t_1 = NULL;
    }
    __Pyx_INCREF(__pyx_v_q_func_temp);
    __Pyx_GIVEREF(__pyx_v_q_func_temp);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_8, __pyx_v_q_func_temp);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_8, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_v_q_func = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":386
 * 
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "malio_cy/op_q_spherical_cy.pyx":387
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_9 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_9); __pyx_t_5 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_9 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = Py_TYPE(__pyx_t_9)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 387, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_9))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_9)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_9, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 387, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_9, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_9)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_9, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 387, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_9, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_10(__pyx_t_9);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 387, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_b_times); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 387, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_11 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 387, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 387, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 387, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_11(__pyx_t_3);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 387, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":388
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor             # <<<<<<<<<<<<<<
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
      if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
        __pyx_t_2 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 388, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_12 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 388, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_2))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 388, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 388, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          }
        } else {
          __pyx_t_1 = __pyx_t_12(__pyx_t_2);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 388, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":389
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 */
        if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
          __pyx_t_1 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_1); __pyx_t_13 = 0;
          __pyx_t_14 = NULL;
        } else {
          __pyx_t_13 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 389, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_14 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 389, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_14)) {
            if (likely(PyList_CheckExact(__pyx_t_1))) {
              if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_15 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_13); __Pyx_INCREF(__pyx_t_15); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
              #else
              __pyx_t_15 = PySequence_ITEM(__pyx_t_1, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 389, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              #endif
            } else {
              if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_15 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_13); __Pyx_INCREF(__pyx_t_15); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
              #else
              __pyx_t_15 = PySequence_ITEM(__pyx_t_1, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 389, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              #endif
            }
          } else {
            __pyx_t_15 = __pyx_t_14(__pyx_t_1);
            if (unlikely(!__pyx_t_15)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 389, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_15);
          }
          __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_15);
          __pyx_t_15 = 0;
          if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
            __pyx_t_15 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_15); __pyx_t_16 = 0;
            __pyx_t_17 = NULL;
          } else {
            __pyx_t_16 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 389, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __pyx_t_17 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 389, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_17)) {
              if (likely(PyList_CheckExact(__pyx_t_15))) {
                if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_15)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_18 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_16); __Pyx_INCREF(__pyx_t_18); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
                #else
                __pyx_t_18 = PySequence_ITEM(__pyx_t_15, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 389, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_18);
                #endif
              } else {
                if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_16); __Pyx_INCREF(__pyx_t_18); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
                #else
                __pyx_t_18 = PySequence_ITEM(__pyx_t_15, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 389, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_18);
                #endif
              }
            } else {
              __pyx_t_18 = __pyx_t_17(__pyx_t_15);
              if (unlikely(!__pyx_t_18)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 389, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_18);
            }
            __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_18);
            __pyx_t_18 = 0;
            if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
              __pyx_t_18 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_18); __pyx_t_19 = 0;
              __pyx_t_20 = NULL;
            } else {
              __pyx_t_19 = -1; __pyx_t_18 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 389, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_18);
              __pyx_t_20 = Py_TYPE(__pyx_t_18)->tp_iternext; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 389, __pyx_L1_error)
            }
            for (;;) {
              if (likely(!__pyx_t_20)) {
                if (likely(PyList_CheckExact(__pyx_t_18))) {
                  if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_18)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_21 = PyList_GET_ITEM(__pyx_t_18, __pyx_t_19); __Pyx_INCREF(__pyx_t_21); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
                  #else
                  __pyx_t_21 = PySequence_ITEM(__pyx_t_18, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 389, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_21);
                  #endif
                } else {
                  if (__pyx_t_19 >= PyTuple_GET_SIZE(__pyx_t_18)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_18, __pyx_t_19); __Pyx_INCREF(__pyx_t_21); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
                  #else
                  __pyx_t_21 = PySequence_ITEM(__pyx_t_18, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 389, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_21);
                  #endif
                }
              } else {
                __pyx_t_21 = __pyx_t_20(__pyx_t_18);
                if (unlikely(!__pyx_t_21)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else __PYX_ERR(0, 389, __pyx_L1_error)
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_21);
              }
              __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_21);
              __pyx_t_21 = 0;

              /* "malio_cy/op_q_spherical_cy.pyx":386
 * 
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 */
              __pyx_t_21 = PyTuple_New(6); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_21);
              __Pyx_INCREF(__pyx_v_l_sph);
              __Pyx_GIVEREF(__pyx_v_l_sph);
              PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_v_l_sph);
              __Pyx_INCREF(__pyx_v_b_t);
              __Pyx_GIVEREF(__pyx_v_b_t);
              PyTuple_SET_ITEM(__pyx_t_21, 1, __pyx_v_b_t);
              __Pyx_INCREF(__pyx_v_o_f);
              __Pyx_GIVEREF(__pyx_v_o_f);
              PyTuple_SET_ITEM(__pyx_t_21, 2, __pyx_v_o_f);
              __Pyx_INCREF(__pyx_v_o_i);
              __Pyx_GIVEREF(__pyx_v_o_i);
              PyTuple_SET_ITEM(__pyx_t_21, 3, __pyx_v_o_i);
              __Pyx_INCREF(__pyx_v_o_j);
              __Pyx_GIVEREF(__pyx_v_o_j);
              PyTuple_SET_ITEM(__pyx_t_21, 4, __pyx_v_o_j);
              __Pyx_INCREF(__pyx_v_p_weight);
              __Pyx_GIVEREF(__pyx_v_p_weight);
              PyTuple_SET_ITEM(__pyx_t_21, 5, __pyx_v_p_weight);
              if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_21))) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

              /* "malio_cy/op_q_spherical_cy.pyx":389
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 */
            }
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          }
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":388
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)
 *             for o_f in o_factor             # <<<<<<<<<<<<<<
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":387
 *     # calc function average
 *     comb = [(l_sph, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list for b_t in range(b_times)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_v_comb = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":391
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
  __pyx_t_4 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_9 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_9); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 391, __pyx_L1_error)
    #else
    __pyx_t_9 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_9))) || (PyList_CheckExact(__pyx_t_9))) {
      PyObject* sequence = __pyx_t_9;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 6)) {
        if (size > 6) __Pyx_RaiseTooManyValuesError(6);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 391, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_15 = PyTuple_GET_ITEM(sequence, 3); 
        __pyx_t_18 = PyTuple_GET_ITEM(sequence, 4); 
        __pyx_t_21 = PyTuple_GET_ITEM(sequence, 5); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_1 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_15 = PyList_GET_ITEM(sequence, 3); 
        __pyx_t_18 = PyList_GET_ITEM(sequence, 4); 
        __pyx_t_21 = PyList_GET_ITEM(sequence, 5); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_15);
      __Pyx_INCREF(__pyx_t_18);
      __Pyx_INCREF(__pyx_t_21);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[6] = {&__pyx_t_3,&__pyx_t_2,&__pyx_t_1,&__pyx_t_15,&__pyx_t_18,&__pyx_t_21};
        for (i=0; i < 6; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 391, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[6] = {&__pyx_t_3,&__pyx_t_2,&__pyx_t_1,&__pyx_t_15,&__pyx_t_18,&__pyx_t_21};
      __pyx_t_22 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 391, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_22);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_23 = Py_TYPE(__pyx_t_22)->tp_iternext;
      for (index=0; index < 6; index++) {
        PyObject* item = __pyx_t_23(__pyx_t_22); if (unlikely(!item)) goto __pyx_L19_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_23(__pyx_t_22), 6) < 0) __PYX_ERR(0, 391, __pyx_L1_error)
      __pyx_t_23 = NULL;
      __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
      goto __pyx_L20_unpacking_done;
      __pyx_L19_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
      __pyx_t_23 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 391, __pyx_L1_error)
      __pyx_L20_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_15);
    __pyx_t_15 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_18);
    __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_21);
    __pyx_t_21 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":392
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *         q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_21, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_21, __pyx_n_s_naming); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    __pyx_t_21 = __Pyx_PyInt_AddObjC(__pyx_v_b_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __pyx_t_15 = PyList_New(7); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(__pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_v_l_sph);
    PyList_SET_ITEM(__pyx_t_15, 0, __pyx_v_l_sph);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_15, 1, __pyx_int_0);
    __Pyx_GIVEREF(__pyx_t_21);
    PyList_SET_ITEM(__pyx_t_15, 2, __pyx_t_21);
    __Pyx_INCREF(__pyx_v_o_f);
    __Pyx_GIVEREF(__pyx_v_o_f);
    PyList_SET_ITEM(__pyx_t_15, 3, __pyx_v_o_f);
    __Pyx_INCREF(__pyx_v_o_i);
    __Pyx_GIVEREF(__pyx_v_o_i);
    PyList_SET_ITEM(__pyx_t_15, 4, __pyx_v_o_i);
    __Pyx_INCREF(__pyx_v_o_j);
    __Pyx_GIVEREF(__pyx_v_o_j);
    PyList_SET_ITEM(__pyx_t_15, 5, __pyx_v_o_j);
    __Pyx_INCREF(__pyx_v_p_weight);
    __Pyx_GIVEREF(__pyx_v_p_weight);
    PyList_SET_ITEM(__pyx_t_15, 6, __pyx_v_p_weight);
    __pyx_t_21 = 0;
    __pyx_t_21 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_18))) {
      __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_18);
      if (likely(__pyx_t_21)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
        __Pyx_INCREF(__pyx_t_21);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_18, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_18)) {
      PyObject *__pyx_temp[3] = {__pyx_t_21, __pyx_n_s_q, __pyx_t_15};
      __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 392, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_18)) {
      PyObject *__pyx_temp[3] = {__pyx_t_21, __pyx_n_s_q, __pyx_t_15};
      __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 392, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    } else
    #endif
    {
      __pyx_t_1 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 392, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__pyx_t_21) {
        __Pyx_GIVEREF(__pyx_t_21); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_21); __pyx_t_21 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_8, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_15);
      PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_8, __pyx_t_15);
      __pyx_t_15 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_1, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 392, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":393
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *         q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_naming); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_18 = PyList_New(7); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_INCREF(__pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_v_l_sph);
    PyList_SET_ITEM(__pyx_t_18, 0, __pyx_v_l_sph);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_18, 1, __pyx_int_0);
    __Pyx_INCREF(__pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_v_b_t);
    PyList_SET_ITEM(__pyx_t_18, 2, __pyx_v_b_t);
    __Pyx_INCREF(__pyx_v_o_f);
    __Pyx_GIVEREF(__pyx_v_o_f);
    PyList_SET_ITEM(__pyx_t_18, 3, __pyx_v_o_f);
    __Pyx_INCREF(__pyx_v_o_i);
    __Pyx_GIVEREF(__pyx_v_o_i);
    PyList_SET_ITEM(__pyx_t_18, 4, __pyx_v_o_i);
    __Pyx_INCREF(__pyx_v_o_j);
    __Pyx_GIVEREF(__pyx_v_o_j);
    PyList_SET_ITEM(__pyx_t_18, 5, __pyx_v_o_j);
    __Pyx_INCREF(__pyx_v_p_weight);
    __Pyx_GIVEREF(__pyx_v_p_weight);
    PyList_SET_ITEM(__pyx_t_18, 6, __pyx_v_p_weight);
    __pyx_t_15 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_15)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_15);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_15, __pyx_n_s_q, __pyx_t_18};
      __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_15, __pyx_n_s_q, __pyx_t_18};
      __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    } else
    #endif
    {
      __pyx_t_21 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      if (__pyx_t_15) {
        __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_t_15); __pyx_t_15 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_21, 0+__pyx_t_8, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_21, 1+__pyx_t_8, __pyx_t_18);
      __pyx_t_18 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_21, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":394
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *         q_func[name] = misc_cy.v_neighb_ave(neighbor_list, q_func[name_old])             # <<<<<<<<<<<<<<
 * 
 *     # func to value
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_21 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_v_neighb_ave); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_q_func, __pyx_v_name_old); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_18 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_21))) {
      __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_21);
      if (likely(__pyx_t_18)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_21);
        __Pyx_INCREF(__pyx_t_18);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_21, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_21)) {
      PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_v_neighbor_list, __pyx_t_1};
      __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_21, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_21)) {
      PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_v_neighbor_list, __pyx_t_1};
      __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_21, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_15 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      if (__pyx_t_18) {
        __Pyx_GIVEREF(__pyx_t_18); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_18); __pyx_t_18 = NULL;
      }
      __Pyx_INCREF(__pyx_v_neighbor_list);
      __Pyx_GIVEREF(__pyx_v_neighbor_list);
      PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_8, __pyx_v_neighbor_list);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_8, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_21, __pyx_t_15, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    }
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_q_func, __pyx_v_name, __pyx_t_9) < 0)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":391
 *             for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 * 
 *     for l_sph, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name = misc_cy.naming('q', [l_sph, 0, b_t+1, o_f, o_i, o_j, p_weight])
 *         name_old = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":397
 * 
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "malio_cy/op_q_spherical_cy.pyx":398
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     op_data = {}
 *     for l_sph in l_list:
 */
  if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
    __pyx_t_9 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_9); __pyx_t_5 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_9 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = Py_TYPE(__pyx_t_9)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 398, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_9))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_9)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_21 = PyList_GET_ITEM(__pyx_t_9, __pyx_t_5); __Pyx_INCREF(__pyx_t_21); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
        #else
        __pyx_t_21 = PySequence_ITEM(__pyx_t_9, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_9)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_9, __pyx_t_5); __Pyx_INCREF(__pyx_t_21); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
        #else
        __pyx_t_21 = PySequence_ITEM(__pyx_t_9, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        #endif
      }
    } else {
      __pyx_t_21 = __pyx_t_10(__pyx_t_9);
      if (unlikely(!__pyx_t_21)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 398, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_21);
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_21);
    __pyx_t_21 = 0;
    if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
      __pyx_t_21 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_21); __pyx_t_6 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_21 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      __pyx_t_11 = Py_TYPE(__pyx_t_21)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 398, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_21))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_21)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_15 = PyList_GET_ITEM(__pyx_t_21, __pyx_t_6); __Pyx_INCREF(__pyx_t_15); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
          #else
          __pyx_t_15 = PySequence_ITEM(__pyx_t_21, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_21)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_15 = PyTuple_GET_ITEM(__pyx_t_21, __pyx_t_6); __Pyx_INCREF(__pyx_t_15); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
          #else
          __pyx_t_15 = PySequence_ITEM(__pyx_t_21, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          #endif
        }
      } else {
        __pyx_t_15 = __pyx_t_11(__pyx_t_21);
        if (unlikely(!__pyx_t_15)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 398, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_15);
      }
      __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_15);
      __pyx_t_15 = 0;
      if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
        __pyx_t_15 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_15); __pyx_t_7 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 398, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_12 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 398, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_15))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_15)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_15, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_15, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          }
        } else {
          __pyx_t_1 = __pyx_t_12(__pyx_t_15);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 398, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_1);
        __pyx_t_1 = 0;
        if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
          __pyx_t_1 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_1); __pyx_t_13 = 0;
          __pyx_t_14 = NULL;
        } else {
          __pyx_t_13 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_14 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 398, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_14)) {
            if (likely(PyList_CheckExact(__pyx_t_1))) {
              if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_18 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_13); __Pyx_INCREF(__pyx_t_18); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
              #else
              __pyx_t_18 = PySequence_ITEM(__pyx_t_1, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 398, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_18);
              #endif
            } else {
              if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_13); __Pyx_INCREF(__pyx_t_18); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
              #else
              __pyx_t_18 = PySequence_ITEM(__pyx_t_1, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 398, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_18);
              #endif
            }
          } else {
            __pyx_t_18 = __pyx_t_14(__pyx_t_1);
            if (unlikely(!__pyx_t_18)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 398, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_18);
          }
          __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_18);
          __pyx_t_18 = 0;

          /* "malio_cy/op_q_spherical_cy.pyx":397
 * 
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 */
          __pyx_t_18 = PyTuple_New(4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_INCREF(__pyx_v_o_f);
          __Pyx_GIVEREF(__pyx_v_o_f);
          PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_v_o_f);
          __Pyx_INCREF(__pyx_v_o_i);
          __Pyx_GIVEREF(__pyx_v_o_i);
          PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_v_o_i);
          __Pyx_INCREF(__pyx_v_o_j);
          __Pyx_GIVEREF(__pyx_v_o_j);
          PyTuple_SET_ITEM(__pyx_t_18, 2, __pyx_v_o_j);
          __Pyx_INCREF(__pyx_v_p_weight);
          __Pyx_GIVEREF(__pyx_v_p_weight);
          PyTuple_SET_ITEM(__pyx_t_18, 3, __pyx_v_p_weight);
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_18))) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

          /* "malio_cy/op_q_spherical_cy.pyx":398
 *     # func to value
 *     comb = [(o_f, o_i, o_j, p_weight)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     op_data = {}
 *     for l_sph in l_list:
 */
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    }
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_4));
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":399
 *     comb = [(o_f, o_i, o_j, p_weight)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}             # <<<<<<<<<<<<<<
 *     for l_sph in l_list:
 *         for b_t in range(b_times + 1):
 */
  __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_op_data = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":400
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 *     for l_sph in l_list:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_4 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 400, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 400, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_9 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_9); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 400, __pyx_L1_error)
        #else
        __pyx_t_9 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_9); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 400, __pyx_L1_error)
        #else
        __pyx_t_9 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        #endif
      }
    } else {
      __pyx_t_9 = __pyx_t_10(__pyx_t_4);
      if (unlikely(!__pyx_t_9)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 400, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":401
 *     op_data = {}
 *     for l_sph in l_list:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
    __pyx_t_9 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 401, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_21 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_9); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 401, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (likely(PyList_CheckExact(__pyx_t_21)) || PyTuple_CheckExact(__pyx_t_21)) {
      __pyx_t_9 = __pyx_t_21; __Pyx_INCREF(__pyx_t_9); __pyx_t_6 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_9 = PyObject_GetIter(__pyx_t_21); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 401, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = Py_TYPE(__pyx_t_9)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 401, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_9))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_9)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_21 = PyList_GET_ITEM(__pyx_t_9, __pyx_t_6); __Pyx_INCREF(__pyx_t_21); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 401, __pyx_L1_error)
          #else
          __pyx_t_21 = PySequence_ITEM(__pyx_t_9, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 401, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_9)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_9, __pyx_t_6); __Pyx_INCREF(__pyx_t_21); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 401, __pyx_L1_error)
          #else
          __pyx_t_21 = PySequence_ITEM(__pyx_t_9, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 401, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          #endif
        }
      } else {
        __pyx_t_21 = __pyx_t_11(__pyx_t_9);
        if (unlikely(!__pyx_t_21)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 401, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_21);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_21);
      __pyx_t_21 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":402
 *     for l_sph in l_list:
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 q_val = []
 */
      __pyx_t_21 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_21); __pyx_t_7 = 0;
      for (;;) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_21)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_15 = PyList_GET_ITEM(__pyx_t_21, __pyx_t_7); __Pyx_INCREF(__pyx_t_15); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 402, __pyx_L1_error)
        #else
        __pyx_t_15 = PySequence_ITEM(__pyx_t_21, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 402, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        #endif
        if ((likely(PyTuple_CheckExact(__pyx_t_15))) || (PyList_CheckExact(__pyx_t_15))) {
          PyObject* sequence = __pyx_t_15;
          Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
          if (unlikely(size != 4)) {
            if (size > 4) __Pyx_RaiseTooManyValuesError(4);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            __PYX_ERR(0, 402, __pyx_L1_error)
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_18 = PyTuple_GET_ITEM(sequence, 1); 
            __pyx_t_2 = PyTuple_GET_ITEM(sequence, 2); 
            __pyx_t_3 = PyTuple_GET_ITEM(sequence, 3); 
          } else {
            __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_18 = PyList_GET_ITEM(sequence, 1); 
            __pyx_t_2 = PyList_GET_ITEM(sequence, 2); 
            __pyx_t_3 = PyList_GET_ITEM(sequence, 3); 
          }
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_18);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          #else
          {
            Py_ssize_t i;
            PyObject** temps[4] = {&__pyx_t_1,&__pyx_t_18,&__pyx_t_2,&__pyx_t_3};
            for (i=0; i < 4; i++) {
              PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 402, __pyx_L1_error)
              __Pyx_GOTREF(item);
              *(temps[i]) = item;
            }
          }
          #endif
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        } else {
          Py_ssize_t index = -1;
          PyObject** temps[4] = {&__pyx_t_1,&__pyx_t_18,&__pyx_t_2,&__pyx_t_3};
          __pyx_t_22 = PyObject_GetIter(__pyx_t_15); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 402, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_22);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_t_23 = Py_TYPE(__pyx_t_22)->tp_iternext;
          for (index=0; index < 4; index++) {
            PyObject* item = __pyx_t_23(__pyx_t_22); if (unlikely(!item)) goto __pyx_L35_unpacking_failed;
            __Pyx_GOTREF(item);
            *(temps[index]) = item;
          }
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_23(__pyx_t_22), 4) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
          __pyx_t_23 = NULL;
          __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
          goto __pyx_L36_unpacking_done;
          __pyx_L35_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
          __pyx_t_23 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          __PYX_ERR(0, 402, __pyx_L1_error)
          __pyx_L36_unpacking_done:;
        }
        __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_1);
        __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":403
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])             # <<<<<<<<<<<<<<
 *                 q_val = []
 *                 for i_i in range(len(coord)):
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 403, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_naming); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 403, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyList_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 403, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_v_l_sph);
        __Pyx_GIVEREF(__pyx_v_l_sph);
        PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_l_sph);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_3, 1, __pyx_int_0);
        __Pyx_INCREF(__pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_v_b_t);
        PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_b_t);
        __Pyx_INCREF(__pyx_v_o_f);
        __Pyx_GIVEREF(__pyx_v_o_f);
        PyList_SET_ITEM(__pyx_t_3, 3, __pyx_v_o_f);
        __Pyx_INCREF(__pyx_v_o_i);
        __Pyx_GIVEREF(__pyx_v_o_i);
        PyList_SET_ITEM(__pyx_t_3, 4, __pyx_v_o_i);
        __Pyx_INCREF(__pyx_v_o_j);
        __Pyx_GIVEREF(__pyx_v_o_j);
        PyList_SET_ITEM(__pyx_t_3, 5, __pyx_v_o_j);
        __Pyx_INCREF(__pyx_v_p_weight);
        __Pyx_GIVEREF(__pyx_v_p_weight);
        PyList_SET_ITEM(__pyx_t_3, 6, __pyx_v_p_weight);
        __pyx_t_18 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
            __pyx_t_8 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_2)) {
          PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_n_s_q, __pyx_t_3};
          __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
          PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_n_s_q, __pyx_t_3};
          __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        {
          __pyx_t_1 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (__pyx_t_18) {
            __Pyx_GIVEREF(__pyx_t_18); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_18); __pyx_t_18 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_q);
          __Pyx_GIVEREF(__pyx_n_s_q);
          PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_8, __pyx_n_s_q);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_8, __pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_15);
        __pyx_t_15 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":404
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 q_val = []             # <<<<<<<<<<<<<<
 *                 for i_i in range(len(coord)):
 *                     q_val.append(func_to_value(l_sph, q_func[name][i_i]))
 */
        __pyx_t_15 = PyList_New(0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 404, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_XDECREF_SET(__pyx_v_q_val, ((PyObject*)__pyx_t_15));
        __pyx_t_15 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":405
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 q_val = []
 *                 for i_i in range(len(coord)):             # <<<<<<<<<<<<<<
 *                     q_val.append(func_to_value(l_sph, q_func[name][i_i]))
 *                 op_data[name] = q_val
 */
        __pyx_t_13 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 405, __pyx_L1_error)
        __pyx_t_16 = __pyx_t_13;
        for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_16; __pyx_t_19+=1) {
          __pyx_v_i_i = __pyx_t_19;

          /* "malio_cy/op_q_spherical_cy.pyx":406
 *                 q_val = []
 *                 for i_i in range(len(coord)):
 *                     q_val.append(func_to_value(l_sph, q_func[name][i_i]))             # <<<<<<<<<<<<<<
 *                 op_data[name] = q_val
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_func_to_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_q_func, __pyx_v_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_i_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = NULL;
          __pyx_t_8 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_8 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_l_sph, __pyx_t_3};
            __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_l_sph, __pyx_t_3};
            __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_18 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            if (__pyx_t_1) {
              __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_1); __pyx_t_1 = NULL;
            }
            __Pyx_INCREF(__pyx_v_l_sph);
            __Pyx_GIVEREF(__pyx_v_l_sph);
            PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_8, __pyx_v_l_sph);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_8, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_18, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_24 = __Pyx_PyList_Append(__pyx_v_q_val, __pyx_t_15); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }

        /* "malio_cy/op_q_spherical_cy.pyx":407
 *                 for i_i in range(len(coord)):
 *                     q_val.append(func_to_value(l_sph, q_func[name][i_i]))
 *                 op_data[name] = q_val             # <<<<<<<<<<<<<<
 * 
 *     # neighbor value averaging
 */
        if (unlikely(PyDict_SetItem(__pyx_v_op_data, __pyx_v_name, __pyx_v_q_val) < 0)) __PYX_ERR(0, 407, __pyx_L1_error)

        /* "malio_cy/op_q_spherical_cy.pyx":402
 *     for l_sph in l_list:
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 *                 q_val = []
 */
      }
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":401
 *     op_data = {}
 *     for l_sph in l_list:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for o_f, o_i, o_j, p_weight in comb:
 *                 name = misc_cy.naming('q', [l_sph, 0, b_t, o_f, o_i, o_j, p_weight])
 */
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":400
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     op_data = {}
 *     for l_sph in l_list:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for o_f, o_i, o_j, p_weight in comb:
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":410
 * 
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "malio_cy/op_q_spherical_cy.pyx":411
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list             # <<<<<<<<<<<<<<
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 */
  if (likely(PyList_CheckExact(__pyx_v_l_list)) || PyTuple_CheckExact(__pyx_v_l_list)) {
    __pyx_t_9 = __pyx_v_l_list; __Pyx_INCREF(__pyx_t_9); __pyx_t_5 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_9 = PyObject_GetIter(__pyx_v_l_list); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 411, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = Py_TYPE(__pyx_t_9)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 411, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_9))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_9)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_21 = PyList_GET_ITEM(__pyx_t_9, __pyx_t_5); __Pyx_INCREF(__pyx_t_21); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 411, __pyx_L1_error)
        #else
        __pyx_t_21 = PySequence_ITEM(__pyx_t_9, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_9)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_9, __pyx_t_5); __Pyx_INCREF(__pyx_t_21); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 411, __pyx_L1_error)
        #else
        __pyx_t_21 = PySequence_ITEM(__pyx_t_9, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        #endif
      }
    } else {
      __pyx_t_21 = __pyx_t_10(__pyx_t_9);
      if (unlikely(!__pyx_t_21)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 411, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_21);
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_21);
    __pyx_t_21 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":412
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list
 *             for a_t in range(a_times)             # <<<<<<<<<<<<<<
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    __pyx_t_21 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_a_times); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 412, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_21);
    if (likely(PyList_CheckExact(__pyx_t_21)) || PyTuple_CheckExact(__pyx_t_21)) {
      __pyx_t_15 = __pyx_t_21; __Pyx_INCREF(__pyx_t_15); __pyx_t_6 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_t_21); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 412, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_11 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 412, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_15))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_21 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_6); __Pyx_INCREF(__pyx_t_21); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 412, __pyx_L1_error)
          #else
          __pyx_t_21 = PySequence_ITEM(__pyx_t_15, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_6); __Pyx_INCREF(__pyx_t_21); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 412, __pyx_L1_error)
          #else
          __pyx_t_21 = PySequence_ITEM(__pyx_t_15, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          #endif
        }
      } else {
        __pyx_t_21 = __pyx_t_11(__pyx_t_15);
        if (unlikely(!__pyx_t_21)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 412, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_21);
      }
      __Pyx_XDECREF_SET(__pyx_v_a_t, __pyx_t_21);
      __pyx_t_21 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":413
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 */
      __pyx_t_21 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 413, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_21); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 413, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
      if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
        __pyx_t_21 = __pyx_t_2; __Pyx_INCREF(__pyx_t_21); __pyx_t_7 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_21 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 413, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_21);
        __pyx_t_12 = Py_TYPE(__pyx_t_21)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 413, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_21))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_21)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_21, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 413, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_21, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 413, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_21)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_21, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 413, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_21, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 413, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_12(__pyx_t_21);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 413, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":414
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])
 */
        if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
          __pyx_t_2 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_2); __pyx_t_13 = 0;
          __pyx_t_14 = NULL;
        } else {
          __pyx_t_13 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 414, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 414, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_14)) {
            if (likely(PyList_CheckExact(__pyx_t_2))) {
              if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_18 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_13); __Pyx_INCREF(__pyx_t_18); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
              #else
              __pyx_t_18 = PySequence_ITEM(__pyx_t_2, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_18);
              #endif
            } else {
              if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_13); __Pyx_INCREF(__pyx_t_18); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
              #else
              __pyx_t_18 = PySequence_ITEM(__pyx_t_2, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_18);
              #endif
            }
          } else {
            __pyx_t_18 = __pyx_t_14(__pyx_t_2);
            if (unlikely(!__pyx_t_18)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 414, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_18);
          }
          __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_18);
          __pyx_t_18 = 0;
          if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
            __pyx_t_18 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_18); __pyx_t_16 = 0;
            __pyx_t_17 = NULL;
          } else {
            __pyx_t_16 = -1; __pyx_t_18 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_18);
            __pyx_t_17 = Py_TYPE(__pyx_t_18)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 414, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_17)) {
              if (likely(PyList_CheckExact(__pyx_t_18))) {
                if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_18)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_18, __pyx_t_16); __Pyx_INCREF(__pyx_t_3); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_18, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 414, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_18)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_18, __pyx_t_16); __Pyx_INCREF(__pyx_t_3); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_18, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 414, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_17(__pyx_t_18);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 414, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
            __pyx_t_3 = 0;
            if (likely(PyList_CheckExact(__pyx_v_oi_oj)) || PyTuple_CheckExact(__pyx_v_oi_oj)) {
              __pyx_t_3 = __pyx_v_oi_oj; __Pyx_INCREF(__pyx_t_3); __pyx_t_19 = 0;
              __pyx_t_20 = NULL;
            } else {
              __pyx_t_19 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_oi_oj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_20 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 414, __pyx_L1_error)
            }
            for (;;) {
              if (likely(!__pyx_t_20)) {
                if (likely(PyList_CheckExact(__pyx_t_3))) {
                  if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_3)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_19); __Pyx_INCREF(__pyx_t_1); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
                  #else
                  __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_1);
                  #endif
                } else {
                  if (__pyx_t_19 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                  #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                  __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_19); __Pyx_INCREF(__pyx_t_1); __pyx_t_19++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
                  #else
                  __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
                  __Pyx_GOTREF(__pyx_t_1);
                  #endif
                }
              } else {
                __pyx_t_1 = __pyx_t_20(__pyx_t_3);
                if (unlikely(!__pyx_t_1)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else __PYX_ERR(0, 414, __pyx_L1_error)
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_1);
              }
              __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_1);
              __pyx_t_1 = 0;
              if (likely(PyList_CheckExact(__pyx_v_p_list)) || PyTuple_CheckExact(__pyx_v_p_list)) {
                __pyx_t_1 = __pyx_v_p_list; __Pyx_INCREF(__pyx_t_1); __pyx_t_25 = 0;
                __pyx_t_26 = NULL;
              } else {
                __pyx_t_25 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_p_list); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_26 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 414, __pyx_L1_error)
              }
              for (;;) {
                if (likely(!__pyx_t_26)) {
                  if (likely(PyList_CheckExact(__pyx_t_1))) {
                    if (__pyx_t_25 >= PyList_GET_SIZE(__pyx_t_1)) break;
                    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                    __pyx_t_22 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_25); __Pyx_INCREF(__pyx_t_22); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
                    #else
                    __pyx_t_22 = PySequence_ITEM(__pyx_t_1, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 414, __pyx_L1_error)
                    __Pyx_GOTREF(__pyx_t_22);
                    #endif
                  } else {
                    if (__pyx_t_25 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
                    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                    __pyx_t_22 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_25); __Pyx_INCREF(__pyx_t_22); __pyx_t_25++; if (unlikely(0 < 0)) __PYX_ERR(0, 414, __pyx_L1_error)
                    #else
                    __pyx_t_22 = PySequence_ITEM(__pyx_t_1, __pyx_t_25); __pyx_t_25++; if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 414, __pyx_L1_error)
                    __Pyx_GOTREF(__pyx_t_22);
                    #endif
                  }
                } else {
                  __pyx_t_22 = __pyx_t_26(__pyx_t_1);
                  if (unlikely(!__pyx_t_22)) {
                    PyObject* exc_type = PyErr_Occurred();
                    if (exc_type) {
                      if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                      else __PYX_ERR(0, 414, __pyx_L1_error)
                    }
                    break;
                  }
                  __Pyx_GOTREF(__pyx_t_22);
                }
                __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_22);
                __pyx_t_22 = 0;

                /* "malio_cy/op_q_spherical_cy.pyx":410
 * 
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)             # <<<<<<<<<<<<<<
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 */
                __pyx_t_22 = PyTuple_New(7); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 410, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_22);
                __Pyx_INCREF(__pyx_v_l_sph);
                __Pyx_GIVEREF(__pyx_v_l_sph);
                PyTuple_SET_ITEM(__pyx_t_22, 0, __pyx_v_l_sph);
                __Pyx_INCREF(__pyx_v_a_t);
                __Pyx_GIVEREF(__pyx_v_a_t);
                PyTuple_SET_ITEM(__pyx_t_22, 1, __pyx_v_a_t);
                __Pyx_INCREF(__pyx_v_b_t);
                __Pyx_GIVEREF(__pyx_v_b_t);
                PyTuple_SET_ITEM(__pyx_t_22, 2, __pyx_v_b_t);
                __Pyx_INCREF(__pyx_v_o_f);
                __Pyx_GIVEREF(__pyx_v_o_f);
                PyTuple_SET_ITEM(__pyx_t_22, 3, __pyx_v_o_f);
                __Pyx_INCREF(__pyx_v_o_i);
                __Pyx_GIVEREF(__pyx_v_o_i);
                PyTuple_SET_ITEM(__pyx_t_22, 4, __pyx_v_o_i);
                __Pyx_INCREF(__pyx_v_o_j);
                __Pyx_GIVEREF(__pyx_v_o_j);
                PyTuple_SET_ITEM(__pyx_t_22, 5, __pyx_v_o_j);
                __Pyx_INCREF(__pyx_v_p_weight);
                __Pyx_GIVEREF(__pyx_v_p_weight);
                PyTuple_SET_ITEM(__pyx_t_22, 6, __pyx_v_p_weight);
                if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_22))) __PYX_ERR(0, 410, __pyx_L1_error)
                __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

                /* "malio_cy/op_q_spherical_cy.pyx":414
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]             # <<<<<<<<<<<<<<
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])
 */
              }
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            }
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "malio_cy/op_q_spherical_cy.pyx":413
 *             for l_sph in l_list
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 */
      }
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;

      /* "malio_cy/op_q_spherical_cy.pyx":412
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list
 *             for a_t in range(a_times)             # <<<<<<<<<<<<<<
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 */
    }
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":411
 *     # neighbor value averaging
 *     comb = [(l_sph, a_t, b_t, o_f, o_i, o_j, p_weight)
 *             for l_sph in l_list             # <<<<<<<<<<<<<<
 *             for a_t in range(a_times)
 *             for b_t in range(b_times+1)
 */
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_4));
  __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":415
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])
 *         name_old = misc_cy.naming('q' , [l_sph , a_t   , b_t, o_f , o_i , o_j , p_weight])
 */
  __pyx_t_4 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_9 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_9); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 415, __pyx_L1_error)
    #else
    __pyx_t_9 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 415, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_9))) || (PyList_CheckExact(__pyx_t_9))) {
      PyObject* sequence = __pyx_t_9;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 7)) {
        if (size > 7) __Pyx_RaiseTooManyValuesError(7);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 415, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_15 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_21 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_18 = PyTuple_GET_ITEM(sequence, 3); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 4); 
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 5); 
        __pyx_t_22 = PyTuple_GET_ITEM(sequence, 6); 
      } else {
        __pyx_t_15 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_21 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_18 = PyList_GET_ITEM(sequence, 3); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 4); 
        __pyx_t_1 = PyList_GET_ITEM(sequence, 5); 
        __pyx_t_22 = PyList_GET_ITEM(sequence, 6); 
      }
      __Pyx_INCREF(__pyx_t_15);
      __Pyx_INCREF(__pyx_t_21);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_18);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_22);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[7] = {&__pyx_t_15,&__pyx_t_21,&__pyx_t_2,&__pyx_t_18,&__pyx_t_3,&__pyx_t_1,&__pyx_t_22};
        for (i=0; i < 7; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 415, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[7] = {&__pyx_t_15,&__pyx_t_21,&__pyx_t_2,&__pyx_t_18,&__pyx_t_3,&__pyx_t_1,&__pyx_t_22};
      __pyx_t_27 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 415, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_27);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_23 = Py_TYPE(__pyx_t_27)->tp_iternext;
      for (index=0; index < 7; index++) {
        PyObject* item = __pyx_t_23(__pyx_t_27); if (unlikely(!item)) goto __pyx_L55_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_23(__pyx_t_27), 7) < 0) __PYX_ERR(0, 415, __pyx_L1_error)
      __pyx_t_23 = NULL;
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
      goto __pyx_L56_unpacking_done;
      __pyx_L55_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
      __pyx_t_23 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 415, __pyx_L1_error)
      __pyx_L56_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_l_sph, __pyx_t_15);
    __pyx_t_15 = 0;
    __Pyx_XDECREF_SET(__pyx_v_a_t, __pyx_t_21);
    __pyx_t_21 = 0;
    __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_18);
    __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_p_weight, __pyx_t_22);
    __pyx_t_22 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":416
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])             # <<<<<<<<<<<<<<
 *         name_old = misc_cy.naming('q' , [l_sph , a_t   , b_t, o_f , o_i , o_j , p_weight])
 *         op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_22, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_22);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_22, __pyx_n_s_naming); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
    __pyx_t_22 = __Pyx_PyInt_AddObjC(__pyx_v_a_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_22);
    __pyx_t_3 = PyList_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_v_l_sph);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_t_22);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_22);
    __Pyx_INCREF(__pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_v_b_t);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_b_t);
    __Pyx_INCREF(__pyx_v_o_f);
    __Pyx_GIVEREF(__pyx_v_o_f);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_v_o_f);
    __Pyx_INCREF(__pyx_v_o_i);
    __Pyx_GIVEREF(__pyx_v_o_i);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_v_o_i);
    __Pyx_INCREF(__pyx_v_o_j);
    __Pyx_GIVEREF(__pyx_v_o_j);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_v_o_j);
    __Pyx_INCREF(__pyx_v_p_weight);
    __Pyx_GIVEREF(__pyx_v_p_weight);
    PyList_SET_ITEM(__pyx_t_3, 6, __pyx_v_p_weight);
    __pyx_t_22 = 0;
    __pyx_t_22 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_22 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_22)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_22);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_22, __pyx_n_s_q, __pyx_t_3};
      __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 416, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_22, __pyx_n_s_q, __pyx_t_3};
      __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 416, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_18 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 416, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      if (__pyx_t_22) {
        __Pyx_GIVEREF(__pyx_t_22); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_22); __pyx_t_22 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_8, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_8, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_18, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 416, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":417
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])
 *         name_old = misc_cy.naming('q' , [l_sph , a_t   , b_t, o_f , o_i , o_j , p_weight])             # <<<<<<<<<<<<<<
 *         op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_naming); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_l_sph);
    __Pyx_GIVEREF(__pyx_v_l_sph);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_l_sph);
    __Pyx_INCREF(__pyx_v_a_t);
    __Pyx_GIVEREF(__pyx_v_a_t);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_a_t);
    __Pyx_INCREF(__pyx_v_b_t);
    __Pyx_GIVEREF(__pyx_v_b_t);
    PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_b_t);
    __Pyx_INCREF(__pyx_v_o_f);
    __Pyx_GIVEREF(__pyx_v_o_f);
    PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_o_f);
    __Pyx_INCREF(__pyx_v_o_i);
    __Pyx_GIVEREF(__pyx_v_o_i);
    PyList_SET_ITEM(__pyx_t_1, 4, __pyx_v_o_i);
    __Pyx_INCREF(__pyx_v_o_j);
    __Pyx_GIVEREF(__pyx_v_o_j);
    PyList_SET_ITEM(__pyx_t_1, 5, __pyx_v_o_j);
    __Pyx_INCREF(__pyx_v_p_weight);
    __Pyx_GIVEREF(__pyx_v_p_weight);
    PyList_SET_ITEM(__pyx_t_1, 6, __pyx_v_p_weight);
    __pyx_t_3 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_18))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_18);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_18, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_18)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_n_s_q, __pyx_t_1};
      __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_18)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_n_s_q, __pyx_t_1};
      __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_22 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_22);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_22, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_n_s_q);
      PyTuple_SET_ITEM(__pyx_t_22, 0+__pyx_t_8, __pyx_n_s_q);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_22, 1+__pyx_t_8, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_22, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
    }
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":418
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])
 *         name_old = misc_cy.naming('q' , [l_sph , a_t   , b_t, o_f , o_i , o_j , p_weight])
 *         op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])             # <<<<<<<<<<<<<<
 * 
 *     return op_data
 */
    __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_22 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_v_neighb_ave); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_22);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_18 = __Pyx_PyDict_GetItem(__pyx_v_op_data, __pyx_v_name_old); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_1 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_22))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_22);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_22);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_22, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_22)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_neighbor_list, __pyx_t_18};
      __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 418, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_22)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_neighbor_list, __pyx_t_18};
      __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 418, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 418, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_v_neighbor_list);
      __Pyx_GIVEREF(__pyx_v_neighbor_list);
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_8, __pyx_v_neighbor_list);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_8, __pyx_t_18);
      __pyx_t_18 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_22, __pyx_t_3, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 418, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_op_data, __pyx_v_name, __pyx_t_9) < 0)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "malio_cy/op_q_spherical_cy.pyx":415
 *             for b_t in range(b_times+1)
 *             for o_f in o_factor for o_i in oi_oj for o_j in oi_oj for p_weight in p_list]
 *     for l_sph, a_t, b_t, o_f, o_i, o_j, p_weight in comb:             # <<<<<<<<<<<<<<
 *         name     = misc_cy.naming('q' , [l_sph , a_t+1 , b_t, o_f , o_i , o_j , p_weight])
 *         name_old = misc_cy.naming('q' , [l_sph , a_t   , b_t, o_f , o_i , o_j , p_weight])
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":420
 *         op_data[name] = misc_cy.v_neighb_ave(neighbor_list, op_data[name_old])
 * 
 *     return op_data             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_op_data);
  __pyx_r = __pyx_v_op_data;
  goto __pyx_L0;

  /* "malio_cy/op_q_spherical_cy.pyx":357
 *     return op_data
 * 
 * def spherical_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_22);
  __Pyx_XDECREF(__pyx_t_27);
  __Pyx_AddTraceback("malio_cy.op_q_spherical_cy.spherical_order_parameter_org", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a_times);
  __Pyx_XDECREF(__pyx_v_b_times);
  __Pyx_XDECREF(__pyx_v_oi_oj);
  __Pyx_XDECREF(__pyx_v_o_factor);
  __Pyx_XDECREF(__pyx_v_l_list);
  __Pyx_XDECREF(__pyx_v_p_list);
  __Pyx_XDECREF(__pyx_v_now_pool);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_q_func_temp);
  __Pyx_XDECREF(__pyx_v_q_func);
  __Pyx_XDECREF(__pyx_v_comb);
  __Pyx_XDECREF(__pyx_v_l_sph);
  __Pyx_XDECREF(__pyx_v_b_t);
  __Pyx_XDECREF(__pyx_v_o_f);
  __Pyx_XDECREF(__pyx_v_o_i);
  __Pyx_XDECREF(__pyx_v_o_j);
  __Pyx_XDECREF(__pyx_v_p_weight);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_name_old);
  __Pyx_XDECREF(__pyx_v_op_data);
  __Pyx_XDECREF(__pyx_v_q_val);
  __Pyx_XDECREF(__pyx_v_a_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *__pyx_v_o) {
  std::vector<double>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_double", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((double)__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<std::vector<double> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(PyObject *__pyx_v_o) {
  std::vector<std::vector<double> >  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::vector<double> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::vector<double>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_vector_from_py_double(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::vector<double> )__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<int>  __pyx_convert_vector_from_py_int(PyObject *__pyx_v_o) {
  std::vector<int>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_int", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_item); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((int)__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_int")
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<std::vector<int> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(PyObject *__pyx_v_o) {
  std::vector<std::vector<int> >  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::vector<int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::vector<int>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_vector_from_py_int(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::vector<int> )__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_double_complex")
 * cdef object __pyx_convert_vector_to_py___pyx_t_double_complex(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py___pyx_t_double_complex(const std::vector<__pyx_t_double_complex>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  __pyx_t_double_complex __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py___pyx_t_double_complex", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py___pyx_t_double_complex")
 * cdef object __pyx_convert_vector_to_py___pyx_t_double_complex(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = (__pyx_v_v[__pyx_v_i]);
    __pyx_t_6 = __pyx_PyComplex_FromComplex(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_6))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_double_complex")
 * cdef object __pyx_convert_vector_to_py___pyx_t_double_complex(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py___pyx_t_double_complex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___(const std::vector<std::vector<double> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_vector_to_py_double((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_vector_3c_double_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "carray.to_py":112
 * 
 * @cname("__Pyx_carray_to_py_double")
 * cdef inline list __Pyx_carray_to_py_double(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

static CYTHON_INLINE PyObject *__Pyx_carray_to_py_double(double *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  size_t __pyx_v_i;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_v_l = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_to_py_double", 0);

  /* "carray.to_py":115
 *     cdef size_t i
 *     cdef object value
 *     l = PyList_New(length)             # <<<<<<<<<<<<<<
 *     for i in range(<size_t>length):
 *         value = v[i]
 */
  __pyx_t_1 = PyList_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "carray.to_py":116
 *     cdef object value
 *     l = PyList_New(length)
 *     for i in range(<size_t>length):             # <<<<<<<<<<<<<<
 *         value = v[i]
 *         Py_INCREF(value)
 */
  __pyx_t_2 = ((size_t)__pyx_v_length);
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "carray.to_py":117
 *     l = PyList_New(length)
 *     for i in range(<size_t>length):
 *         value = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(value)
 *         PyList_SET_ITEM(l, i, value)
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "carray.to_py":118
 *     for i in range(<size_t>length):
 *         value = v[i]
 *         Py_INCREF(value)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(l, i, value)
 *     return l
 */
    Py_INCREF(__pyx_v_value);

    /* "carray.to_py":119
 *         value = v[i]
 *         Py_INCREF(value)
 *         PyList_SET_ITEM(l, i, value)             # <<<<<<<<<<<<<<
 *     return l
 * 
 */
    PyList_SET_ITEM(__pyx_v_l, __pyx_v_i, __pyx_v_value);
  }

  /* "carray.to_py":120
 *         Py_INCREF(value)
 *         PyList_SET_ITEM(l, i, value)
 *     return l             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_l);
  __pyx_r = __pyx_v_l;
  goto __pyx_L0;

  /* "carray.to_py":112
 * 
 * @cname("__Pyx_carray_to_py_double")
 * cdef inline list __Pyx_carray_to_py_double(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("carray.to_py.__Pyx_carray_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "carray.to_py":124
 * 
 * @cname("__Pyx_carray_to_tuple_double")
 * cdef inline tuple __Pyx_carray_to_tuple_double(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

static CYTHON_INLINE PyObject *__Pyx_carray_to_tuple_double(double *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  size_t __pyx_v_i;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_to_tuple_double", 0);

  /* "carray.to_py":127
 *     cdef size_t i
 *     cdef object value
 *     t = PyTuple_New(length)             # <<<<<<<<<<<<<<
 *     for i in range(<size_t>length):
 *         value = v[i]
 */
  __pyx_t_1 = PyTuple_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_t = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "carray.to_py":128
 *     cdef object value
 *     t = PyTuple_New(length)
 *     for i in range(<size_t>length):             # <<<<<<<<<<<<<<
 *         value = v[i]
 *         Py_INCREF(value)
 */
  __pyx_t_2 = ((size_t)__pyx_v_length);
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "carray.to_py":129
 *     t = PyTuple_New(length)
 *     for i in range(<size_t>length):
 *         value = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(value)
 *         PyTuple_SET_ITEM(t, i, value)
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "carray.to_py":130
 *     for i in range(<size_t>length):
 *         value = v[i]
 *         Py_INCREF(value)             # <<<<<<<<<<<<<<
 *         PyTuple_SET_ITEM(t, i, value)
 *     return t
 */
    Py_INCREF(__pyx_v_value);

    /* "carray.to_py":131
 *         value = v[i]
 *         Py_INCREF(value)
 *         PyTuple_SET_ITEM(t, i, value)             # <<<<<<<<<<<<<<
 *     return t
 */
    PyTuple_SET_ITEM(__pyx_v_t, __pyx_v_i, __pyx_v_value);
  }

  /* "carray.to_py":132
 *         Py_INCREF(value)
 *         PyTuple_SET_ITEM(t, i, value)
 *     return t             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_t);
  __pyx_r = __pyx_v_t;
  goto __pyx_L0;

  /* "carray.to_py":124
 * 
 * @cname("__Pyx_carray_to_tuple_double")
 * cdef inline tuple __Pyx_carray_to_tuple_double(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("carray.to_py.__Pyx_carray_to_tuple_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(const std::vector<std::vector<int> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_vector_to_py_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec(const std::vector<__pyx_t_8malio_cy_12malio_cy_def_cvec>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec")
 * cdef object __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_vector_to_py___pyx_t_double_complex((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec")
 * cdef object __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_cvec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "carray.from_py":77
 * 
 * @cname("__Pyx_carray_from_py_double")
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

static int __Pyx_carray_from_py_double(PyObject *__pyx_v_o, double *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  double __pyx_t_11;
  char const *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_from_py_double", 0);

  /* "carray.from_py":78
 * @cname("__Pyx_carray_from_py_double")
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length             # <<<<<<<<<<<<<<
 *     try:
 *         i = len(o)
 */
  __pyx_v_i = __pyx_v_length;

  /* "carray.from_py":79
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "carray.from_py":80
 *     cdef Py_ssize_t i = length
 *     try:
 *         i = len(o)             # <<<<<<<<<<<<<<
 *     except (TypeError, OverflowError):
 *         pass
 */
      __pyx_t_4 = PyObject_Length(__pyx_v_o); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 80, __pyx_L3_error)
      __pyx_v_i = __pyx_t_4;

      /* "carray.from_py":79
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "carray.from_py":81
 *     try:
 *         i = len(o)
 *     except (TypeError, OverflowError):             # <<<<<<<<<<<<<<
 *         pass
 *     if i == length:
 */
    __pyx_t_5 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError) || __Pyx_PyErr_ExceptionMatches(__pyx_builtin_OverflowError);
    if (__pyx_t_5) {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "carray.from_py":79
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "carray.from_py":83
 *     except (TypeError, OverflowError):
 *         pass
 *     if i == length:             # <<<<<<<<<<<<<<
 *         for i, item in enumerate(o):
 *             if i >= length:
 */
  __pyx_t_6 = ((__pyx_v_i == __pyx_v_length) != 0);
  if (__pyx_t_6) {

    /* "carray.from_py":84
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
      __pyx_t_7 = __pyx_v_o; __Pyx_INCREF(__pyx_t_7); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 84, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 84, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_7))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_10 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(1, 84, __pyx_L1_error)
          #else
          __pyx_t_10 = PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 84, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_10 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(1, 84, __pyx_L1_error)
          #else
          __pyx_t_10 = PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 84, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          #endif
        }
      } else {
        __pyx_t_10 = __pyx_t_9(__pyx_t_7);
        if (unlikely(!__pyx_t_10)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(1, 84, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_10);
      }
      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_10);
      __pyx_t_10 = 0;
      __pyx_v_i = __pyx_t_4;
      __pyx_t_4 = (__pyx_t_4 + 1);

      /* "carray.from_py":85
 *     if i == length:
 *         for i, item in enumerate(o):
 *             if i >= length:             # <<<<<<<<<<<<<<
 *                 break
 *             v[i] = item
 */
      __pyx_t_6 = ((__pyx_v_i >= __pyx_v_length) != 0);
      if (__pyx_t_6) {

        /* "carray.from_py":86
 *         for i, item in enumerate(o):
 *             if i >= length:
 *                 break             # <<<<<<<<<<<<<<
 *             v[i] = item
 *         else:
 */
        goto __pyx_L11_break;

        /* "carray.from_py":85
 *     if i == length:
 *         for i, item in enumerate(o):
 *             if i >= length:             # <<<<<<<<<<<<<<
 *                 break
 *             v[i] = item
 */
      }

      /* "carray.from_py":87
 *             if i >= length:
 *                 break
 *             v[i] = item             # <<<<<<<<<<<<<<
 *         else:
 *             i += 1  # convert index to length
 */
      __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 87, __pyx_L1_error)
      (__pyx_v_v[__pyx_v_i]) = __pyx_t_11;

      /* "carray.from_py":84
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    }
    /*else*/ {

      /* "carray.from_py":89
 *             v[i] = item
 *         else:
 *             i += 1  # convert index to length             # <<<<<<<<<<<<<<
 *             if i == length:
 *                 return 0
 */
      __pyx_v_i = (__pyx_v_i + 1);

      /* "carray.from_py":90
 *         else:
 *             i += 1  # convert index to length
 *             if i == length:             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
      __pyx_t_6 = ((__pyx_v_i == __pyx_v_length) != 0);
      if (__pyx_t_6) {

        /* "carray.from_py":91
 *             i += 1  # convert index to length
 *             if i == length:
 *                 return 0             # <<<<<<<<<<<<<<
 * 
 *     PyErr_Format(
 */
        __pyx_r = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L0;

        /* "carray.from_py":90
 *         else:
 *             i += 1  # convert index to length
 *             if i == length:             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
      }
    }

    /* "carray.from_py":84
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    __pyx_L11_break:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "carray.from_py":83
 *     except (TypeError, OverflowError):
 *         pass
 *     if i == length:             # <<<<<<<<<<<<<<
 *         for i, item in enumerate(o):
 *             if i >= length:
 */
  }

  /* "carray.from_py":96
 *         IndexError,
 *         ("too many values found during array assignment, expected %zd"
 *          if i >= length else             # <<<<<<<<<<<<<<
 *          "not enough values found during array assignment, expected %zd, got %zd"),
 *         length, i)
 */
  if (((__pyx_v_i >= __pyx_v_length) != 0)) {
    __pyx_t_12 = ((char const *)"too many values found during array assignment, expected %zd");
  } else {
    __pyx_t_12 = ((char const *)"not enough values found during array assignment, expected %zd, got %zd");
  }

  /* "carray.from_py":93
 *                 return 0
 * 
 *     PyErr_Format(             # <<<<<<<<<<<<<<
 *         IndexError,
 *         ("too many values found during array assignment, expected %zd"
 */
  __pyx_t_7 = PyErr_Format(__pyx_builtin_IndexError, __pyx_t_12, __pyx_v_length, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "carray.from_py":77
 * 
 * @cname("__Pyx_carray_from_py_double")
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("carray.from_py.__Pyx_carray_from_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {"sph_harm_cy", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_17op_q_spherical_cy_3sph_harm_cy, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_op_q_spherical_cy(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_op_q_spherical_cy},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "op_q_spherical_cy",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_Array, __pyx_k_Array, sizeof(__pyx_k_Array), 0, 0, 1, 1},
  {&__pyx_n_s_I, __pyx_k_I, sizeof(__pyx_k_I), 0, 0, 1, 1},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_n_s_N, __pyx_k_N, sizeof(__pyx_k_N), 0, 0, 1, 1},
  {&__pyx_n_s_OverflowError, __pyx_k_OverflowError, sizeof(__pyx_k_OverflowError), 0, 0, 1, 1},
  {&__pyx_n_s_PI4, __pyx_k_PI4, sizeof(__pyx_k_PI4), 0, 0, 1, 1},
  {&__pyx_n_s_Pool, __pyx_k_Pool, sizeof(__pyx_k_Pool), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_a_t, __pyx_k_a_t, sizeof(__pyx_k_a_t), 0, 0, 1, 1},
  {&__pyx_n_s_a_times, __pyx_k_a_times, sizeof(__pyx_k_a_times), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_ave_times, __pyx_k_ave_times, sizeof(__pyx_k_ave_times), 0, 0, 1, 1},
  {&__pyx_n_s_b_in_Q, __pyx_k_b_in_Q, sizeof(__pyx_k_b_in_Q), 0, 0, 1, 1},
  {&__pyx_n_s_b_t, __pyx_k_b_t, sizeof(__pyx_k_b_t), 0, 0, 1, 1},
  {&__pyx_n_s_b_times, __pyx_k_b_times, sizeof(__pyx_k_b_times), 0, 0, 1, 1},
  {&__pyx_kp_s_bad_argument_for_spherical_harmo, __pyx_k_bad_argument_for_spherical_harmo, sizeof(__pyx_k_bad_argument_for_spherical_harmo), 0, 0, 1, 0},
  {&__pyx_n_s_box_length, __pyx_k_box_length, sizeof(__pyx_k_box_length), 0, 0, 1, 1},
  {&__pyx_n_s_calc_delta, __pyx_k_calc_delta, sizeof(__pyx_k_calc_delta), 0, 0, 1, 1},
  {&__pyx_n_s_calc_head_coordinate, __pyx_k_calc_head_coordinate, sizeof(__pyx_k_calc_head_coordinate), 0, 0, 1, 1},
  {&__pyx_n_s_calc_q, __pyx_k_calc_q, sizeof(__pyx_k_calc_q), 0, 0, 1, 1},
  {&__pyx_n_s_calc_q_wrapper, __pyx_k_calc_q_wrapper, sizeof(__pyx_k_calc_q_wrapper), 0, 0, 1, 1},
  {&__pyx_n_s_cl_neighbor_list_ii_1, __pyx_k_cl_neighbor_list_ii_1, sizeof(__pyx_k_cl_neighbor_list_ii_1), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_comb, __pyx_k_comb, sizeof(__pyx_k_comb), 0, 0, 1, 1},
  {&__pyx_n_s_comp, __pyx_k_comp, sizeof(__pyx_k_comp), 0, 0, 1, 1},
  {&__pyx_n_s_conjugate, __pyx_k_conjugate, sizeof(__pyx_k_conjugate), 0, 0, 1, 1},
  {&__pyx_n_s_convert_3dim_to_1dim, __pyx_k_convert_3dim_to_1dim, sizeof(__pyx_k_convert_3dim_to_1dim), 0, 0, 1, 1},
  {&__pyx_n_s_convert_to_theta_phi, __pyx_k_convert_to_theta_phi, sizeof(__pyx_k_convert_to_theta_phi), 0, 0, 1, 1},
  {&__pyx_n_s_coord, __pyx_k_coord, sizeof(__pyx_k_coord), 0, 0, 1, 1},
  {&__pyx_n_s_coord_1d, __pyx_k_coord_1d, sizeof(__pyx_k_coord_1d), 0, 0, 1, 1},
  {&__pyx_n_s_cpart, __pyx_k_cpart, sizeof(__pyx_k_cpart), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_data_num_name_to_data_name_num, __pyx_k_data_num_name_to_data_name_num, sizeof(__pyx_k_data_num_name_to_data_name_num), 0, 0, 1, 1},
  {&__pyx_n_s_dbox_length, __pyx_k_dbox_length, sizeof(__pyx_k_dbox_length), 0, 0, 1, 1},
  {&__pyx_n_s_dcoord, __pyx_k_dcoord, sizeof(__pyx_k_dcoord), 0, 0, 1, 1},
  {&__pyx_n_s_ddirect, __pyx_k_ddirect, sizeof(__pyx_k_ddirect), 0, 0, 1, 1},
  {&__pyx_n_s_delta, __pyx_k_delta, sizeof(__pyx_k_delta), 0, 0, 1, 1},
  {&__pyx_n_s_direct, __pyx_k_direct, sizeof(__pyx_k_direct), 0, 0, 1, 1},
  {&__pyx_n_s_direct_1d, __pyx_k_direct_1d, sizeof(__pyx_k_direct_1d), 0, 0, 1, 1},
  {&__pyx_n_s_dist, __pyx_k_dist, sizeof(__pyx_k_dist), 0, 0, 1, 1},
  {&__pyx_n_s_dl_neighbor_list_ii_1, __pyx_k_dl_neighbor_list_ii_1, sizeof(__pyx_k_dl_neighbor_list_ii_1), 0, 0, 1, 1},
  {&__pyx_n_s_dpart, __pyx_k_dpart, sizeof(__pyx_k_dpart), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_eval, __pyx_k_eval, sizeof(__pyx_k_eval), 0, 0, 1, 1},
  {&__pyx_n_s_func, __pyx_k_func, sizeof(__pyx_k_func), 0, 0, 1, 1},
  {&__pyx_n_s_func_to_value, __pyx_k_func_to_value, sizeof(__pyx_k_func_to_value), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_i_2, __pyx_k_i_2, sizeof(__pyx_k_i_2), 0, 0, 1, 1},
  {&__pyx_n_s_i_i, __pyx_k_i_i, sizeof(__pyx_k_i_i), 0, 0, 1, 1},
  {&__pyx_n_s_i_j, __pyx_k_i_j, sizeof(__pyx_k_i_j), 0, 0, 1, 1},
  {&__pyx_n_s_i_k, __pyx_k_i_k, sizeof(__pyx_k_i_k), 0, 0, 1, 1},
  {&__pyx_n_s_ii_j, __pyx_k_ii_j, sizeof(__pyx_k_ii_j), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_inei, __pyx_k_inei, sizeof(__pyx_k_inei), 0, 0, 1, 1},
  {&__pyx_n_s_ineighbor_list, __pyx_k_ineighbor_list, sizeof(__pyx_k_ineighbor_list), 0, 0, 1, 1},
  {&__pyx_n_s_inv_l_sph2p1, __pyx_k_inv_l_sph2p1, sizeof(__pyx_k_inv_l_sph2p1), 0, 0, 1, 1},
  {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {&__pyx_n_s_l_in_Q, __pyx_k_l_in_Q, sizeof(__pyx_k_l_in_Q), 0, 0, 1, 1},
  {&__pyx_n_s_l_list, __pyx_k_l_list, sizeof(__pyx_k_l_list), 0, 0, 1, 1},
  {&__pyx_n_s_l_neighbor_list_ii, __pyx_k_l_neighbor_list_ii, sizeof(__pyx_k_l_neighbor_list_ii), 0, 0, 1, 1},
  {&__pyx_n_s_l_q_func_name_old_0, __pyx_k_l_q_func_name_old_0, sizeof(__pyx_k_l_q_func_name_old_0), 0, 0, 1, 1},
  {&__pyx_n_s_l_sph, __pyx_k_l_sph, sizeof(__pyx_k_l_sph), 0, 0, 1, 1},
  {&__pyx_n_s_l_sph2p1, __pyx_k_l_sph2p1, sizeof(__pyx_k_l_sph2p1), 0, 0, 1, 1},
  {&__pyx_n_s_len_c, __pyx_k_len_c, sizeof(__pyx_k_len_c), 0, 0, 1, 1},
  {&__pyx_n_s_lock, __pyx_k_lock, sizeof(__pyx_k_lock), 0, 0, 1, 1},
  {&__pyx_n_s_m_sph, __pyx_k_m_sph, sizeof(__pyx_k_m_sph), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_malio_cy_op_q_spherical_cy, __pyx_k_malio_cy_op_q_spherical_cy, sizeof(__pyx_k_malio_cy_op_q_spherical_cy), 0, 0, 1, 1},
  {&__pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_k_malio_cy_op_q_spherical_cy_pyx, sizeof(__pyx_k_malio_cy_op_q_spherical_cy_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_map, __pyx_k_map, sizeof(__pyx_k_map), 0, 0, 1, 1},
  {&__pyx_n_s_misc_cy, __pyx_k_misc_cy, sizeof(__pyx_k_misc_cy), 0, 0, 1, 1},
  {&__pyx_n_s_multiprocessing, __pyx_k_multiprocessing, sizeof(__pyx_k_multiprocessing), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_name_old, __pyx_k_name_old, sizeof(__pyx_k_name_old), 0, 0, 1, 1},
  {&__pyx_n_s_naming, __pyx_k_naming, sizeof(__pyx_k_naming), 0, 0, 1, 1},
  {&__pyx_n_s_neighbor_list, __pyx_k_neighbor_list, sizeof(__pyx_k_neighbor_list), 0, 0, 1, 1},
  {&__pyx_n_s_neighbor_list_ii, __pyx_k_neighbor_list_ii, sizeof(__pyx_k_neighbor_list_ii), 0, 0, 1, 1},
  {&__pyx_n_s_now_pool, __pyx_k_now_pool, sizeof(__pyx_k_now_pool), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_o_f, __pyx_k_o_f, sizeof(__pyx_k_o_f), 0, 0, 1, 1},
  {&__pyx_n_s_o_factor, __pyx_k_o_factor, sizeof(__pyx_k_o_factor), 0, 0, 1, 1},
  {&__pyx_n_s_o_i, __pyx_k_o_i, sizeof(__pyx_k_o_i), 0, 0, 1, 1},
  {&__pyx_n_s_o_j, __pyx_k_o_j, sizeof(__pyx_k_o_j), 0, 0, 1, 1},
  {&__pyx_n_s_oi_list_not_oi, __pyx_k_oi_list_not_oi, sizeof(__pyx_k_oi_list_not_oi), 0, 0, 1, 1},
  {&__pyx_n_s_oi_oj, __pyx_k_oi_oj, sizeof(__pyx_k_oi_oj), 0, 0, 1, 1},
  {&__pyx_n_s_op_data, __pyx_k_op_data, sizeof(__pyx_k_op_data), 0, 0, 1, 1},
  {&__pyx_n_s_p_fact, __pyx_k_p_fact, sizeof(__pyx_k_p_fact), 0, 0, 1, 1},
  {&__pyx_n_s_p_in_Q, __pyx_k_p_in_Q, sizeof(__pyx_k_p_in_Q), 0, 0, 1, 1},
  {&__pyx_n_s_p_list, __pyx_k_p_list, sizeof(__pyx_k_p_list), 0, 0, 1, 1},
  {&__pyx_n_s_p_weight, __pyx_k_p_weight, sizeof(__pyx_k_p_weight), 0, 0, 1, 1},
  {&__pyx_n_s_part_temp, __pyx_k_part_temp, sizeof(__pyx_k_part_temp), 0, 0, 1, 1},
  {&__pyx_n_s_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 0, 1, 1},
  {&__pyx_n_s_pol, __pyx_k_pol, sizeof(__pyx_k_pol), 0, 0, 1, 1},
  {&__pyx_n_s_q, __pyx_k_q, sizeof(__pyx_k_q), 0, 0, 1, 1},
  {&__pyx_n_s_q_func, __pyx_k_q_func, sizeof(__pyx_k_q_func), 0, 0, 1, 1},
  {&__pyx_n_s_q_func_name_old, __pyx_k_q_func_name_old, sizeof(__pyx_k_q_func_name_old), 0, 0, 1, 1},
  {&__pyx_n_s_q_func_temp, __pyx_k_q_func_temp, sizeof(__pyx_k_q_func_temp), 0, 0, 1, 1},
  {&__pyx_n_s_q_l, __pyx_k_q_l, sizeof(__pyx_k_q_l), 0, 0, 1, 1},
  {&__pyx_n_s_q_temp, __pyx_k_q_temp, sizeof(__pyx_k_q_temp), 0, 0, 1, 1},
  {&__pyx_n_s_q_val, __pyx_k_q_val, sizeof(__pyx_k_q_val), 0, 0, 1, 1},
  {&__pyx_n_s_q_value, __pyx_k_q_value, sizeof(__pyx_k_q_value), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_real, __pyx_k_real, sizeof(__pyx_k_real), 0, 0, 1, 1},
  {&__pyx_n_s_res, __pyx_k_res, sizeof(__pyx_k_res), 0, 0, 1, 1},
  {&__pyx_n_s_round, __pyx_k_round, sizeof(__pyx_k_round), 0, 0, 1, 1},
  {&__pyx_n_s_scipy_special, __pyx_k_scipy_special, sizeof(__pyx_k_scipy_special), 0, 0, 1, 1},
  {&__pyx_n_s_setting, __pyx_k_setting, sizeof(__pyx_k_setting), 0, 0, 1, 1},
  {&__pyx_n_s_sph_harm, __pyx_k_sph_harm, sizeof(__pyx_k_sph_harm), 0, 0, 1, 1},
  {&__pyx_n_s_sph_harm_2, __pyx_k_sph_harm_2, sizeof(__pyx_k_sph_harm_2), 0, 0, 1, 1},
  {&__pyx_n_s_spherical_order_parameter, __pyx_k_spherical_order_parameter, sizeof(__pyx_k_spherical_order_parameter), 0, 0, 1, 1},
  {&__pyx_n_s_spherical_order_parameter_org, __pyx_k_spherical_order_parameter_org, sizeof(__pyx_k_spherical_order_parameter_org), 0, 0, 1, 1},
  {&__pyx_n_s_sphharm, __pyx_k_sphharm, sizeof(__pyx_k_sphharm), 0, 0, 1, 1},
  {&__pyx_n_s_string, __pyx_k_string, sizeof(__pyx_k_string), 0, 0, 1, 1},
  {&__pyx_n_s_sum_norm2, __pyx_k_sum_norm2, sizeof(__pyx_k_sum_norm2), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_theta, __pyx_k_theta, sizeof(__pyx_k_theta), 0, 0, 1, 1},
  {&__pyx_n_s_thread_num, __pyx_k_thread_num, sizeof(__pyx_k_thread_num), 0, 0, 1, 1},
  {&__pyx_n_s_v_neighb_ave, __pyx_k_v_neighb_ave, sizeof(__pyx_k_v_neighb_ave), 0, 0, 1, 1},
  {&__pyx_n_s_x_i, __pyx_k_x_i, sizeof(__pyx_k_x_i), 0, 0, 1, 1},
  {&__pyx_n_s_x_j, __pyx_k_x_j, sizeof(__pyx_k_x_j), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 34, __pyx_L1_error)
  __pyx_builtin_round = __Pyx_GetBuiltinName(__pyx_n_s_round); if (!__pyx_builtin_round) __PYX_ERR(0, 73, __pyx_L1_error)
  __pyx_builtin_eval = __Pyx_GetBuiltinName(__pyx_n_s_eval); if (!__pyx_builtin_eval) __PYX_ERR(0, 105, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 81, __pyx_L1_error)
  __pyx_builtin_OverflowError = __Pyx_GetBuiltinName(__pyx_n_s_OverflowError); if (!__pyx_builtin_OverflowError) __PYX_ERR(1, 81, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(1, 84, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(1, 94, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "malio_cy/op_q_spherical_cy.pyx":12
 * 
 * 
 * def sph_harm(l_sph, m_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     return _sph_harm(m_sph, l_sph, phi, theta)
 * 
 */
  __pyx_tuple_ = PyTuple_Pack(4, __pyx_n_s_l_sph, __pyx_n_s_m_sph, __pyx_n_s_theta, __pyx_n_s_phi); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);
  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple_, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_n_s_sph_harm_2, 12, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) __PYX_ERR(0, 12, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":58
 * 
 * 
 * def calc_q(l_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):
 */
  __pyx_tuple__3 = PyTuple_Pack(6, __pyx_n_s_l_sph, __pyx_n_s_theta, __pyx_n_s_phi, __pyx_n_s_q_l, __pyx_n_s_m_sph, __pyx_n_s_i); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(3, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_n_s_calc_q, 58, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(0, 58, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":67
 * 
 * 
 * def func_to_value(l_sph, func):             # <<<<<<<<<<<<<<
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):
 */
  __pyx_tuple__5 = PyTuple_Pack(6, __pyx_n_s_l_sph, __pyx_n_s_func, __pyx_n_s_sum_norm2, __pyx_n_s_i_j, __pyx_n_s_comp, __pyx_n_s_q_value); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_codeobj__6 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__5, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_n_s_func_to_value, 67, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__6)) __PYX_ERR(0, 67, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":76
 * 
 * 
 * def calc_q_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 */
  __pyx_tuple__7 = PyTuple_Pack(28, __pyx_n_s_args, __pyx_n_s_box_length, __pyx_n_s_neighbor_list_ii, __pyx_n_s_i_i, __pyx_n_s_l_list, __pyx_n_s_o_factor, __pyx_n_s_oi_oj, __pyx_n_s_p_list, __pyx_n_s_comb, __pyx_n_s_q_func_temp, __pyx_n_s_l_sph, __pyx_n_s_o_f, __pyx_n_s_o_i, __pyx_n_s_o_j, __pyx_n_s_p_weight, __pyx_n_s_name, __pyx_n_s_x_i, __pyx_n_s_q_temp, __pyx_n_s_i_j, __pyx_n_s_x_j, __pyx_n_s_delta, __pyx_n_s_pol, __pyx_n_s_q_l, __pyx_n_s_i_k, __pyx_n_s_N, __pyx_n_s_p_fact, __pyx_n_s_oi_list_not_oi, __pyx_n_s_i); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(1, 0, 28, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_n_s_calc_q_wrapper, 76, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) __PYX_ERR(0, 76, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":135
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def spherical_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */
  __pyx_tuple__9 = PyTuple_Pack(67, __pyx_n_s_coord, __pyx_n_s_direct, __pyx_n_s_box_length, __pyx_n_s_setting, __pyx_n_s_neighbor_list, __pyx_n_s_thread_num, __pyx_n_s_a_times, __pyx_n_s_b_times, __pyx_n_s_oi_oj, __pyx_n_s_o_factor, __pyx_n_s_l_list, __pyx_n_s_p_list, __pyx_n_s_i_i, __pyx_n_s_i_j, __pyx_n_s_i_k, __pyx_n_s_len_c, __pyx_n_s_o_f, __pyx_n_s_o_i, __pyx_n_s_o_j, __pyx_n_s_i, __pyx_n_s_j, __pyx_n_s_l_neighbor_list_ii, __pyx_n_s_i_2, __pyx_n_s_l_sph, __pyx_n_s_m_sph, __pyx_n_s_p_weight, __pyx_n_s_l_sph2p1, __pyx_n_s_l_q_func_name_old_0, __pyx_n_s_dist, __pyx_n_s_theta, __pyx_n_s_phi, __pyx_n_s_inv_l_sph2p1, __pyx_n_s_sum_norm2, __pyx_n_s_q_value, __pyx_n_s_PI4, __pyx_n_s_dl_neighbor_list_ii_1, __pyx_n_s_dpart, __pyx_n_s_x_i, __pyx_n_s_x_j, __pyx_n_s_delta, __pyx_n_s_dbox_length, __pyx_n_s_dcoord, __pyx_n_s_ddirect, __pyx_n_s_ineighbor_list, __pyx_n_s_q_val, __pyx_n_s_q_temp, __pyx_n_s_cpart, __pyx_n_s_q_func_name_old, __pyx_n_s_sphharm, __pyx_n_s_part_temp, __pyx_n_s_cl_neighbor_list_ii_1, __pyx_n_s_I, __pyx_n_s_comp, __pyx_n_s_q_func_temp, __pyx_n_s_comb, __pyx_n_s_res, __pyx_n_s_name, __pyx_n_s_N, __pyx_n_s_p_fact, __pyx_n_s_oi_list_not_oi, __pyx_n_s_q_func, __pyx_n_s_b_t, __pyx_n_s_name_old, __pyx_n_s_ii_j, __pyx_n_s_inei, __pyx_n_s_op_data, __pyx_n_s_a_t); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);
  __pyx_codeobj__10 = (PyObject*)__Pyx_PyCode_New(6, 0, 67, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__9, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_n_s_spherical_order_parameter, 135, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__10)) __PYX_ERR(0, 135, __pyx_L1_error)

  /* "malio_cy/op_q_spherical_cy.pyx":357
 *     return op_data
 * 
 * def spherical_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */
  __pyx_tuple__11 = PyTuple_Pack(29, __pyx_n_s_coord, __pyx_n_s_direct, __pyx_n_s_box_length, __pyx_n_s_setting, __pyx_n_s_neighbor_list, __pyx_n_s_thread_num, __pyx_n_s_a_times, __pyx_n_s_b_times, __pyx_n_s_oi_oj, __pyx_n_s_o_factor, __pyx_n_s_l_list, __pyx_n_s_p_list, __pyx_n_s_now_pool, __pyx_n_s_args, __pyx_n_s_q_func_temp, __pyx_n_s_q_func, __pyx_n_s_comb, __pyx_n_s_l_sph, __pyx_n_s_b_t, __pyx_n_s_o_f, __pyx_n_s_o_i, __pyx_n_s_o_j, __pyx_n_s_p_weight, __pyx_n_s_name, __pyx_n_s_name_old, __pyx_n_s_op_data, __pyx_n_s_q_val, __pyx_n_s_i_i, __pyx_n_s_a_t); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);
  __pyx_codeobj__12 = (PyObject*)__Pyx_PyCode_New(6, 0, 29, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__11, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_q_spherical_cy_pyx, __pyx_n_s_spherical_order_parameter_org, 357, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__12)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_14 = PyInt_FromLong(14); if (unlikely(!__pyx_int_14)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initop_q_spherical_cy(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initop_q_spherical_cy(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_op_q_spherical_cy(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_op_q_spherical_cy(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_op_q_spherical_cy(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'op_q_spherical_cy' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_op_q_spherical_cy(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("op_q_spherical_cy", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_malio_cy__op_q_spherical_cy) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "malio_cy.op_q_spherical_cy")) {
      if (unlikely(PyDict_SetItemString(modules, "malio_cy.op_q_spherical_cy", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "malio_cy/op_q_spherical_cy.pyx":3
 * # -*- coding: utf-8 -*-
 * 
 * import misc_cy             # <<<<<<<<<<<<<<
 * import numpy as np
 * ### import math
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_misc_cy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_misc_cy, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":4
 * 
 * import misc_cy
 * import numpy as np             # <<<<<<<<<<<<<<
 * ### import math
 * from multiprocessing import Pool, Array
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":6
 * import numpy as np
 * ### import math
 * from multiprocessing import Pool, Array             # <<<<<<<<<<<<<<
 * from scipy.special import sph_harm as _sph_harm
 * cimport cython
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Pool);
  __Pyx_GIVEREF(__pyx_n_s_Pool);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Pool);
  __Pyx_INCREF(__pyx_n_s_Array);
  __Pyx_GIVEREF(__pyx_n_s_Array);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_Array);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_multiprocessing, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Pool); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Pool, __pyx_t_1) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Array, __pyx_t_1) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":7
 * ### import math
 * from multiprocessing import Pool, Array
 * from scipy.special import sph_harm as _sph_harm             # <<<<<<<<<<<<<<
 * cimport cython
 * from malio_cy_def cimport *
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_sph_harm_2);
  __Pyx_GIVEREF(__pyx_n_s_sph_harm_2);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_sph_harm_2);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_scipy_special, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_sph_harm_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sph_harm, __pyx_t_2) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":12
 * 
 * 
 * def sph_harm(l_sph, m_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     return _sph_harm(m_sph, l_sph, phi, theta)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_17op_q_spherical_cy_1sph_harm, NULL, __pyx_n_s_malio_cy_op_q_spherical_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sph_harm_2, __pyx_t_1) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":58
 * 
 * 
 * def calc_q(l_sph, theta, phi):             # <<<<<<<<<<<<<<
 *     q_l = [0 for i in range(2 * l_sph + 1)]
 *     for m_sph in range(l_sph + 1):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_17op_q_spherical_cy_5calc_q, NULL, __pyx_n_s_malio_cy_op_q_spherical_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_calc_q, __pyx_t_1) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":67
 * 
 * 
 * def func_to_value(l_sph, func):             # <<<<<<<<<<<<<<
 *     sum_norm2 = 0.0
 *     for i_j in range(2 * l_sph + 1):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_17op_q_spherical_cy_7func_to_value, NULL, __pyx_n_s_malio_cy_op_q_spherical_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_func_to_value, __pyx_t_1) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":76
 * 
 * 
 * def calc_q_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, l_list, o_factor, oi_oj, p_list] = args
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_17op_q_spherical_cy_9calc_q_wrapper, NULL, __pyx_n_s_malio_cy_op_q_spherical_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_calc_q_wrapper, __pyx_t_1) < 0) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":135
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def spherical_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_17op_q_spherical_cy_11spherical_order_parameter, NULL, __pyx_n_s_malio_cy_op_q_spherical_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_spherical_order_parameter, __pyx_t_1) < 0) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":357
 *     return op_data
 * 
 * def spherical_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     # [Q_N]_l_a_b_oi_oj_P
 *     a_times = setting['ave_times']
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_17op_q_spherical_cy_13spherical_order_parameter_org, NULL, __pyx_n_s_malio_cy_op_q_spherical_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_spherical_order_parameter_org, __pyx_t_1) < 0) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_q_spherical_cy.pyx":1
 * # -*- coding: utf-8 -*-             # <<<<<<<<<<<<<<
 * 
 * import misc_cy
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "carray.from_py":77
 * 
 * @cname("__Pyx_carray_from_py_double")
 * cdef int __Pyx_carray_from_py_double(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init malio_cy.op_q_spherical_cy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init malio_cy.op_q_spherical_cy");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* PyFloatBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double b = floatval;
    double a, result;
    (void)inplace;
    (void)zerodivision_check;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
        
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
        
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
            
        }
    } else {
        return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
    }
        
        PyFPE_START_PROTECT("add", return NULL)
        result = a + b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* RaiseTooManyValuesToUnpack */
  static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
  static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
  static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
  static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* DictGetItem */
  #if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* PyObjectGetMethod */
  static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
  static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
  static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* PyObjectCallNoArg */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyObjectSetAttrStr */
  #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* GetTopmostException */
  #if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* Import */
  static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
  static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CLineInTraceback */
  #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
  static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
  #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPyVerify */
  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* FromPy */
  static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject* o) {
    Py_complex cval;
#if !CYTHON_COMPILING_IN_PYPY
    if (PyComplex_CheckExact(o))
        cval = ((PyComplexObject *)o)->cval;
    else
#endif
        cval = PyComplex_AsCComplex(o);
    return __pyx_t_double_complex_from_parts(
               (double)cval.real,
               (double)cval.imag);
}

/* CIntFromPy */
  static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* GetAttr */
  static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* Globals */
  static PyObject* __Pyx_Globals(void) {
    Py_ssize_t i;
    PyObject *names;
    PyObject *globals = __pyx_d;
    Py_INCREF(globals);
    names = PyObject_Dir(__pyx_m);
    if (!names)
        goto bad;
    for (i = PyList_GET_SIZE(names)-1; i >= 0; i--) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject* name = PySequence_ITEM(names, i);
        if (!name)
            goto bad;
#else
        PyObject* name = PyList_GET_ITEM(names, i);
#endif
        if (!PyDict_Contains(globals, name)) {
            PyObject* value = __Pyx_GetAttr(__pyx_m, name);
            if (!value) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                goto bad;
            }
            if (PyDict_SetItem(globals, name, value) < 0) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                Py_DECREF(value);
                goto bad;
            }
        }
#if CYTHON_COMPILING_IN_PYPY
        Py_DECREF(name);
#endif
    }
    Py_DECREF(names);
    return globals;
bad:
    Py_XDECREF(names);
    Py_XDECREF(globals);
    return NULL;
}

/* CIntFromPy */
  static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
  static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
  #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
  static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
  static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
