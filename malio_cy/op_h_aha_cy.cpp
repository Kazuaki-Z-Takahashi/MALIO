/* Generated by Cython 0.29.22 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_22"
#define CYTHON_HEX_VERSION 0x001D16F0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__malio_cy__op_h_aha_cy
#define __PYX_HAVE_API__malio_cy__op_h_aha_cy
/* Early includes */
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <omp.h>
#include <string>
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "malio_cy/op_h_aha_cy.pyx",
  "stringsource",
};
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/

/* "malio_cy_def.pxd":6
 * from libcpp.vector cimport vector
 * cimport openmp
 * ctypedef vector[double] dvec             # <<<<<<<<<<<<<<
 * ctypedef vector[dvec] dvec_vec
 * ctypedef vector[dvec_vec] dvec_vec_vec
 */
typedef std::vector<double>  __pyx_t_8malio_cy_12malio_cy_def_dvec;

/* "malio_cy_def.pxd":7
 * cimport openmp
 * ctypedef vector[double] dvec
 * ctypedef vector[dvec] dvec_vec             # <<<<<<<<<<<<<<
 * ctypedef vector[dvec_vec] dvec_vec_vec
 * ctypedef vector[int] ivec
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_dvec>  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec;

/* "malio_cy_def.pxd":8
 * ctypedef vector[double] dvec
 * ctypedef vector[dvec] dvec_vec
 * ctypedef vector[dvec_vec] dvec_vec_vec             # <<<<<<<<<<<<<<
 * ctypedef vector[int] ivec
 * ctypedef vector[ivec] ivec_vec
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_dvec_vec>  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec_vec;

/* "malio_cy_def.pxd":9
 * ctypedef vector[dvec] dvec_vec
 * ctypedef vector[dvec_vec] dvec_vec_vec
 * ctypedef vector[int] ivec             # <<<<<<<<<<<<<<
 * ctypedef vector[ivec] ivec_vec
 * ctypedef vector[double complex] cvec
 */
typedef std::vector<int>  __pyx_t_8malio_cy_12malio_cy_def_ivec;

/* "malio_cy_def.pxd":10
 * ctypedef vector[dvec_vec] dvec_vec_vec
 * ctypedef vector[int] ivec
 * ctypedef vector[ivec] ivec_vec             # <<<<<<<<<<<<<<
 * ctypedef vector[double complex] cvec
 * ctypedef vector[cvec] cvec_vec
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_ivec>  __pyx_t_8malio_cy_12malio_cy_def_ivec_vec;

/* "malio_cy_def.pxd":11
 * ctypedef vector[int] ivec
 * ctypedef vector[ivec] ivec_vec
 * ctypedef vector[double complex] cvec             # <<<<<<<<<<<<<<
 * ctypedef vector[cvec] cvec_vec
 */
typedef std::vector<__pyx_t_double_complex>  __pyx_t_8malio_cy_12malio_cy_def_cvec;

/* "malio_cy_def.pxd":12
 * ctypedef vector[ivec] ivec_vec
 * ctypedef vector[double complex] cvec
 * ctypedef vector[cvec] cvec_vec             # <<<<<<<<<<<<<<
 */
typedef std::vector<__pyx_t_8malio_cy_12malio_cy_def_cvec>  __pyx_t_8malio_cy_12malio_cy_def_cvec_vec;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* pyobject_as_double.proto */
static double __Pyx__PyObject_AsDouble(PyObject* obj);
#if CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyObject_AsDouble(obj)\
(likely(PyFloat_CheckExact(obj)) ? PyFloat_AS_DOUBLE(obj) :\
 likely(PyInt_CheckExact(obj)) ?\
 PyFloat_AsDouble(obj) : __Pyx__PyObject_AsDouble(obj))
#else
#define __Pyx_PyObject_AsDouble(obj)\
((likely(PyFloat_CheckExact(obj))) ?\
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'cython' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'libc' */

/* Module declarations from 'libc.math' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'openmp' */

/* Module declarations from 'malio_cy.malio_cy_def' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'malio_cy.op_h_aha_cy' */
static __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_f_8malio_cy_11op_h_aha_cy_histogram_normalize_cy(__pyx_t_8malio_cy_12malio_cy_def_dvec); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &); /*proto*/
static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *); /*proto*/
static std::vector<std::vector<double> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(PyObject *); /*proto*/
static std::vector<int>  __pyx_convert_vector_from_py_int(PyObject *); /*proto*/
static std::vector<std::vector<int> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(const std::vector<__pyx_t_8malio_cy_12malio_cy_def_dvec>  &); /*proto*/
#define __Pyx_MODULE_NAME "malio_cy.op_h_aha_cy"
extern int __pyx_module_is_main_malio_cy__op_h_aha_cy;
int __pyx_module_is_main_malio_cy__op_h_aha_cy = 0;

/* Implementation of 'malio_cy.op_h_aha_cy' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_IndexError;
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_k[] = "k";
static const char __pyx_k__3[] = "_";
static const char __pyx_k_dv[] = "dv";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_nu[] = "nu";
static const char __pyx_k_zi[] = "zi";
static const char __pyx_k_zr[] = "zr";
static const char __pyx_k_a_t[] = "a_t";
static const char __pyx_k_abs[] = "abs";
static const char __pyx_k_b_t[] = "b_t";
static const char __pyx_k_dvv[] = "dvv";
static const char __pyx_k_fft[] = "fft";
static const char __pyx_k_h_i[] = "h_i";
static const char __pyx_k_i_2[] = "i_2";
static const char __pyx_k_i_3[] = "i_3";
static const char __pyx_k_i_i[] = "i_i";
static const char __pyx_k_i_j[] = "i_j";
static const char __pyx_k_i_k[] = "i_k";
static const char __pyx_k_i_l[] = "i_l";
static const char __pyx_k_inu[] = "inu";
static const char __pyx_k_map[] = "map";
static const char __pyx_k_o_f[] = "o_f";
static const char __pyx_k_o_i[] = "o_i";
static const char __pyx_k_o_j[] = "o_j";
static const char __pyx_k_o_k[] = "o_k";
static const char __pyx_k_sum[] = "sum";
static const char __pyx_k_x_i[] = "x_i";
static const char __pyx_k_x_j[] = "x_j";
static const char __pyx_k_x_k[] = "x_k";
static const char __pyx_k_Pool[] = "Pool";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_comb[] = "comb";
static const char __pyx_k_dval[] = "dval";
static const char __pyx_k_hist[] = "hist";
static const char __pyx_k_ii_j[] = "ii_j";
static const char __pyx_k_inei[] = "inei";
static const char __pyx_k_l_nu[] = "l_nu";
static const char __pyx_k_lock[] = "lock";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_nrm1[] = "nrm1";
static const char __pyx_k_nrm2[] = "nrm2";
static const char __pyx_k_nu_2[] = "_nu=";
static const char __pyx_k_pdot[] = "pdot";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_x_ik[] = "x_ik";
static const char __pyx_k_Array[] = "Array";
static const char __pyx_k_angle[] = "angle";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_coord[] = "coord";
static const char __pyx_k_h_num[] = "h_num";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_intnu[] = "intnu";
static const char __pyx_k_len_c[] = "len_c";
static const char __pyx_k_now_i[] = "now_i";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_power[] = "power";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_theta[] = "theta";
static const char __pyx_k_vname[] = "vname";
static const char __pyx_k_x_i_j[] = "x_i_j";
static const char __pyx_k_avpart[] = "avpart";
static const char __pyx_k_b_in_H[] = "b_in_H";
static const char __pyx_k_dcoord[] = "dcoord";
static const char __pyx_k_direct[] = "direct";
static const char __pyx_k_g_func[] = "g_func";
static const char __pyx_k_g_list[] = "g_list";
static const char __pyx_k_h_hist[] = "h_hist";
static const char __pyx_k_ih_num[] = "ih_num";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_mathpi[] = "mathpi";
static const char __pyx_k_n_list[] = "n_list";
static const char __pyx_k_name_2[] = "name";
static const char __pyx_k_name_h[] = "name_h";
static const char __pyx_k_naming[] = "naming";
static const char __pyx_k_a_times[] = "a_times";
static const char __pyx_k_b_times[] = "b_times";
static const char __pyx_k_ddirect[] = "ddirect";
static const char __pyx_k_dg_list[] = "dg_list";
static const char __pyx_k_g_power[] = "g_power";
static const char __pyx_k_h_temp2[] = "h_temp2";
static const char __pyx_k_misc_cy[] = "misc_cy";
static const char __pyx_k_op_temp[] = "op_temp";
static const char __pyx_k_setting[] = "setting";
static const char __pyx_k_val_ave[] = "val_ave";
static const char __pyx_k_vh_hist[] = "vh_hist";
static const char __pyx_k_coord_1d[] = "coord_1d";
static const char __pyx_k_hist_num[] = "hist_num";
static const char __pyx_k_name_old[] = "name_old";
static const char __pyx_k_now_pool[] = "now_pool";
static const char __pyx_k_o_factor[] = "o_factor";
static const char __pyx_k_oi_oj_ok[] = "oi_oj_ok";
static const char __pyx_k_op_value[] = "op_value";
static const char __pyx_k_sum_hist[] = "sum_hist";
static const char __pyx_k_ave_times[] = "ave_times";
static const char __pyx_k_direct_1d[] = "direct_1d";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_hist_temp[] = "hist_temp";
static const char __pyx_k_increment[] = "increment";
static const char __pyx_k_len_h_num[] = "len_h_num";
static const char __pyx_k_name_indx[] = "name_indx";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_box_length[] = "box_length";
static const char __pyx_k_calc_delta[] = "calc_delta";
static const char __pyx_k_thread_num[] = "thread_num";
static const char __pyx_k_vhist_temp[] = "vhist_temp";
static const char __pyx_k_dbox_length[] = "dbox_length";
static const char __pyx_k_dist_layers[] = "dist_layers";
static const char __pyx_k_op_val_temp[] = "op_val_temp";
static const char __pyx_k_v_neighb_ave[] = "v_neighb_ave";
static const char __pyx_k_name_old_indx[] = "name_old_indx";
static const char __pyx_k_neighbor_list[] = "neighbor_list";
static const char __pyx_k_scipy_fftpack[] = "scipy.fftpack";
static const char __pyx_k_calc_h_wrapper[] = "calc_h_wrapper";
static const char __pyx_k_h_data_part_nu[] = "h_data_part_nu";
static const char __pyx_k_ineighbor_list[] = "ineighbor_list";
static const char __pyx_k_lneighbor_list[] = "lneighbor_list";
static const char __pyx_k_l_neighbor_list[] = "l_neighbor_list";
static const char __pyx_k_multiprocessing[] = "multiprocessing";
static const char __pyx_k_neighbor_list_ii[] = "neighbor_list_ii";
static const char __pyx_k_l_h_hist_name_i_i[] = "l_h_hist_name_i_i";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_aha_order_parameter[] = "aha_order_parameter";
static const char __pyx_k_histogram_normalize[] = "histogram_normalize";
static const char __pyx_k_l_neighbor_list_i_i[] = "l_neighbor_list_i_i";
static const char __pyx_k_calc_head_coordinate[] = "calc_head_coordinate";
static const char __pyx_k_convert_3dim_to_1dim[] = "convert_3dim_to_1dim";
static const char __pyx_k_malio_cy_op_h_aha_cy[] = "malio_cy.op_h_aha_cy";
static const char __pyx_k_l_h_hist_name_old_i_i[] = "l_h_hist_name_old_i_i";
static const char __pyx_k_aha_order_parameter_org[] = "aha_order_parameter_org";
static const char __pyx_k_malio_cy_op_h_aha_cy_pyx[] = "malio_cy/op_h_aha_cy.pyx";
static const char __pyx_k_inv_l_neighbor_list_i_i_1[] = "inv_l_neighbor_list_i_i_1";
static const char __pyx_k_data_num_name_to_data_name_num[] = "data_num_name_to_data_name_num";
static PyObject *__pyx_n_s_Array;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_n_s_Pool;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s__3;
static PyObject *__pyx_n_s_a_t;
static PyObject *__pyx_n_s_a_times;
static PyObject *__pyx_n_s_abs;
static PyObject *__pyx_n_s_aha_order_parameter;
static PyObject *__pyx_n_s_aha_order_parameter_org;
static PyObject *__pyx_n_s_angle;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_ave_times;
static PyObject *__pyx_n_s_avpart;
static PyObject *__pyx_n_s_b_in_H;
static PyObject *__pyx_n_s_b_t;
static PyObject *__pyx_n_s_b_times;
static PyObject *__pyx_n_s_box_length;
static PyObject *__pyx_n_s_calc_delta;
static PyObject *__pyx_n_s_calc_h_wrapper;
static PyObject *__pyx_n_s_calc_head_coordinate;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_comb;
static PyObject *__pyx_n_s_convert_3dim_to_1dim;
static PyObject *__pyx_n_s_coord;
static PyObject *__pyx_n_s_coord_1d;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_data_num_name_to_data_name_num;
static PyObject *__pyx_n_s_dbox_length;
static PyObject *__pyx_n_s_dcoord;
static PyObject *__pyx_n_s_ddirect;
static PyObject *__pyx_n_s_dg_list;
static PyObject *__pyx_n_s_direct;
static PyObject *__pyx_n_s_direct_1d;
static PyObject *__pyx_n_s_dist_layers;
static PyObject *__pyx_n_s_dv;
static PyObject *__pyx_n_s_dval;
static PyObject *__pyx_n_s_dvv;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_fft;
static PyObject *__pyx_n_s_g_func;
static PyObject *__pyx_n_s_g_list;
static PyObject *__pyx_n_s_g_power;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_h_data_part_nu;
static PyObject *__pyx_n_s_h_hist;
static PyObject *__pyx_n_s_h_i;
static PyObject *__pyx_n_s_h_num;
static PyObject *__pyx_n_s_h_temp2;
static PyObject *__pyx_n_s_hist;
static PyObject *__pyx_n_s_hist_num;
static PyObject *__pyx_n_s_hist_temp;
static PyObject *__pyx_n_s_histogram_normalize;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_i_2;
static PyObject *__pyx_n_s_i_3;
static PyObject *__pyx_n_s_i_i;
static PyObject *__pyx_n_s_i_j;
static PyObject *__pyx_n_s_i_k;
static PyObject *__pyx_n_s_i_l;
static PyObject *__pyx_n_s_ih_num;
static PyObject *__pyx_n_s_ii_j;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_increment;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_inei;
static PyObject *__pyx_n_s_ineighbor_list;
static PyObject *__pyx_n_s_intnu;
static PyObject *__pyx_n_s_inu;
static PyObject *__pyx_n_s_inv_l_neighbor_list_i_i_1;
static PyObject *__pyx_n_s_j;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_l_h_hist_name_i_i;
static PyObject *__pyx_n_s_l_h_hist_name_old_i_i;
static PyObject *__pyx_n_s_l_neighbor_list;
static PyObject *__pyx_n_s_l_neighbor_list_i_i;
static PyObject *__pyx_n_s_l_nu;
static PyObject *__pyx_n_s_len_c;
static PyObject *__pyx_n_s_len_h_num;
static PyObject *__pyx_n_s_lneighbor_list;
static PyObject *__pyx_n_s_lock;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_malio_cy_op_h_aha_cy;
static PyObject *__pyx_kp_s_malio_cy_op_h_aha_cy_pyx;
static PyObject *__pyx_n_s_map;
static PyObject *__pyx_n_s_mathpi;
static PyObject *__pyx_n_s_misc_cy;
static PyObject *__pyx_n_s_multiprocessing;
static PyObject *__pyx_n_s_n_list;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_name_h;
static PyObject *__pyx_n_s_name_indx;
static PyObject *__pyx_n_s_name_old;
static PyObject *__pyx_n_s_name_old_indx;
static PyObject *__pyx_n_s_naming;
static PyObject *__pyx_n_s_neighbor_list;
static PyObject *__pyx_n_s_neighbor_list_ii;
static PyObject *__pyx_n_s_now_i;
static PyObject *__pyx_n_s_now_pool;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_nrm1;
static PyObject *__pyx_n_s_nrm2;
static PyObject *__pyx_n_s_nu;
static PyObject *__pyx_kp_s_nu_2;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_o_f;
static PyObject *__pyx_n_s_o_factor;
static PyObject *__pyx_n_s_o_i;
static PyObject *__pyx_n_s_o_j;
static PyObject *__pyx_n_s_o_k;
static PyObject *__pyx_n_s_oi_oj_ok;
static PyObject *__pyx_n_s_op_temp;
static PyObject *__pyx_n_s_op_val_temp;
static PyObject *__pyx_n_s_op_value;
static PyObject *__pyx_n_s_pdot;
static PyObject *__pyx_n_s_power;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_scipy_fftpack;
static PyObject *__pyx_n_s_setting;
static PyObject *__pyx_n_s_sum;
static PyObject *__pyx_n_s_sum_hist;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_theta;
static PyObject *__pyx_n_s_thread_num;
static PyObject *__pyx_n_s_v_neighb_ave;
static PyObject *__pyx_n_s_val_ave;
static PyObject *__pyx_n_s_vh_hist;
static PyObject *__pyx_n_s_vhist_temp;
static PyObject *__pyx_n_s_vname;
static PyObject *__pyx_n_s_x_i;
static PyObject *__pyx_n_s_x_i_j;
static PyObject *__pyx_n_s_x_ik;
static PyObject *__pyx_n_s_x_j;
static PyObject *__pyx_n_s_x_k;
static PyObject *__pyx_n_s_zi;
static PyObject *__pyx_n_s_zr;
static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_histogram_normalize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_hist); /* proto */
static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_2aha_order_parameter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, CYTHON_UNUSED PyObject *__pyx_v_thread_num); /* proto */
static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_4calc_h_wrapper(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_6aha_order_parameter_org(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, PyObject *__pyx_v_thread_num); /* proto */
static __Pyx_CachedCFunction __pyx_umethod_PyList_Type_index = {0, &__pyx_n_s_index, 0, 0, 0};
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_codeobj__2;
static PyObject *__pyx_codeobj__5;
static PyObject *__pyx_codeobj__7;
static PyObject *__pyx_codeobj__9;
/* Late includes */

/* "malio_cy/op_h_aha_cy.pyx":12
 * from libcpp.string cimport string
 * 
 * def histogram_normalize(hist):             # <<<<<<<<<<<<<<
 *     sum_hist = np.sum(hist)
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_1histogram_normalize(PyObject *__pyx_self, PyObject *__pyx_v_hist); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_11op_h_aha_cy_1histogram_normalize = {"histogram_normalize", (PyCFunction)__pyx_pw_8malio_cy_11op_h_aha_cy_1histogram_normalize, METH_O, 0};
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_1histogram_normalize(PyObject *__pyx_self, PyObject *__pyx_v_hist) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("histogram_normalize (wrapper)", 0);
  __pyx_r = __pyx_pf_8malio_cy_11op_h_aha_cy_histogram_normalize(__pyx_self, ((PyObject *)__pyx_v_hist));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_histogram_normalize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_hist) {
  PyObject *__pyx_v_sum_hist = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("histogram_normalize", 0);
  __Pyx_INCREF(__pyx_v_hist);

  /* "malio_cy/op_h_aha_cy.pyx":13
 * 
 * def histogram_normalize(hist):
 *     sum_hist = np.sum(hist)             # <<<<<<<<<<<<<<
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]
 *     return hist
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_hist) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_hist);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_sum_hist = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":14
 * def histogram_normalize(hist):
 *     sum_hist = np.sum(hist)
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]             # <<<<<<<<<<<<<<
 *     return hist
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Length(__pyx_v_hist); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 14, __pyx_L1_error)
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_hist, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_v_sum_hist); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 14, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF_SET(__pyx_v_hist, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":15
 *     sum_hist = np.sum(hist)
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]
 *     return hist             # <<<<<<<<<<<<<<
 * 
 * @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_hist);
  __pyx_r = __pyx_v_hist;
  goto __pyx_L0;

  /* "malio_cy/op_h_aha_cy.pyx":12
 * from libcpp.string cimport string
 * 
 * def histogram_normalize(hist):             # <<<<<<<<<<<<<<
 *     sum_hist = np.sum(hist)
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("malio_cy.op_h_aha_cy.histogram_normalize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sum_hist);
  __Pyx_XDECREF(__pyx_v_hist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_h_aha_cy.pyx":19
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * cdef dvec histogram_normalize_cy(dvec hist):             # <<<<<<<<<<<<<<
 *     cdef:
 *         int i, l_hist = len(hist)
 */

static __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_f_8malio_cy_11op_h_aha_cy_histogram_normalize_cy(__pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_v_hist) {
  int __pyx_v_i;
  int __pyx_v_l_hist;
  double __pyx_v_sum_hist;
  __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("histogram_normalize_cy", 0);

  /* "malio_cy/op_h_aha_cy.pyx":21
 * cdef dvec histogram_normalize_cy(dvec hist):
 *     cdef:
 *         int i, l_hist = len(hist)             # <<<<<<<<<<<<<<
 *         double sum_hist = 0.0
 *     for i in range(l_hist):
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_double(__pyx_v_hist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_l_hist = __pyx_t_2;

  /* "malio_cy/op_h_aha_cy.pyx":22
 *     cdef:
 *         int i, l_hist = len(hist)
 *         double sum_hist = 0.0             # <<<<<<<<<<<<<<
 *     for i in range(l_hist):
 *         sum_hist += hist[i]
 */
  __pyx_v_sum_hist = 0.0;

  /* "malio_cy/op_h_aha_cy.pyx":23
 *         int i, l_hist = len(hist)
 *         double sum_hist = 0.0
 *     for i in range(l_hist):             # <<<<<<<<<<<<<<
 *         sum_hist += hist[i]
 *     for i in range(l_hist):
 */
  __pyx_t_3 = __pyx_v_l_hist;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "malio_cy/op_h_aha_cy.pyx":24
 *         double sum_hist = 0.0
 *     for i in range(l_hist):
 *         sum_hist += hist[i]             # <<<<<<<<<<<<<<
 *     for i in range(l_hist):
 *         hist[i] /= sum_hist
 */
    __pyx_v_sum_hist = (__pyx_v_sum_hist + (__pyx_v_hist[__pyx_v_i]));
  }

  /* "malio_cy/op_h_aha_cy.pyx":25
 *     for i in range(l_hist):
 *         sum_hist += hist[i]
 *     for i in range(l_hist):             # <<<<<<<<<<<<<<
 *         hist[i] /= sum_hist
 *     return hist
 */
  __pyx_t_3 = __pyx_v_l_hist;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "malio_cy/op_h_aha_cy.pyx":26
 *         sum_hist += hist[i]
 *     for i in range(l_hist):
 *         hist[i] /= sum_hist             # <<<<<<<<<<<<<<
 *     return hist
 * 
 */
    __pyx_t_6 = __pyx_v_i;
    (__pyx_v_hist[__pyx_t_6]) = ((__pyx_v_hist[__pyx_t_6]) / __pyx_v_sum_hist);
  }

  /* "malio_cy/op_h_aha_cy.pyx":27
 *     for i in range(l_hist):
 *         hist[i] /= sum_hist
 *     return hist             # <<<<<<<<<<<<<<
 * 
 * @cython.boundscheck(False)
 */
  __pyx_r = __pyx_v_hist;
  goto __pyx_L0;

  /* "malio_cy/op_h_aha_cy.pyx":19
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * cdef dvec histogram_normalize_cy(dvec hist):             # <<<<<<<<<<<<<<
 *     cdef:
 *         int i, l_hist = len(hist)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("malio_cy.op_h_aha_cy.histogram_normalize_cy", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_h_aha_cy.pyx":31
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def aha_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_3aha_order_parameter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_11op_h_aha_cy_3aha_order_parameter = {"aha_order_parameter", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_11op_h_aha_cy_3aha_order_parameter, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_3aha_order_parameter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coord = 0;
  PyObject *__pyx_v_direct = 0;
  PyObject *__pyx_v_box_length = 0;
  PyObject *__pyx_v_setting = 0;
  PyObject *__pyx_v_neighbor_list = 0;
  CYTHON_UNUSED PyObject *__pyx_v_thread_num = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("aha_order_parameter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_coord,&__pyx_n_s_direct,&__pyx_n_s_box_length,&__pyx_n_s_setting,&__pyx_n_s_neighbor_list,&__pyx_n_s_thread_num,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_coord)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_direct)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter", 1, 6, 6, 1); __PYX_ERR(0, 31, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_box_length)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter", 1, 6, 6, 2); __PYX_ERR(0, 31, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_setting)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter", 1, 6, 6, 3); __PYX_ERR(0, 31, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_neighbor_list)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter", 1, 6, 6, 4); __PYX_ERR(0, 31, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_thread_num)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter", 1, 6, 6, 5); __PYX_ERR(0, 31, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "aha_order_parameter") < 0)) __PYX_ERR(0, 31, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_coord = values[0];
    __pyx_v_direct = values[1];
    __pyx_v_box_length = values[2];
    __pyx_v_setting = values[3];
    __pyx_v_neighbor_list = values[4];
    __pyx_v_thread_num = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("aha_order_parameter", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 31, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_h_aha_cy.aha_order_parameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_11op_h_aha_cy_2aha_order_parameter(__pyx_self, __pyx_v_coord, __pyx_v_direct, __pyx_v_box_length, __pyx_v_setting, __pyx_v_neighbor_list, __pyx_v_thread_num);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_2aha_order_parameter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, CYTHON_UNUSED PyObject *__pyx_v_thread_num) {
  PyObject *__pyx_v_a_times = NULL;
  PyObject *__pyx_v_b_times = NULL;
  PyObject *__pyx_v_h_num = NULL;
  PyObject *__pyx_v_o_factor = NULL;
  PyObject *__pyx_v_oi_oj_ok = NULL;
  PyObject *__pyx_v_nu = NULL;
  int __pyx_v_i_i;
  int __pyx_v_i_j;
  int __pyx_v_i_k;
  int __pyx_v_len_c;
  int __pyx_v_o_f;
  int __pyx_v_o_i;
  int __pyx_v_o_j;
  int __pyx_v_o_k;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_k;
  int __pyx_v_l_neighbor_list_i_i;
  int __pyx_v_i_2;
  int __pyx_v_len_h_num;
  int __pyx_v_h_i;
  int __pyx_v_now_i;
  int __pyx_v_n_list;
  int __pyx_v_l_neighbor_list;
  int __pyx_v_ii_j;
  int __pyx_v_inei;
  int __pyx_v_b_t;
  int __pyx_v_name_indx;
  int __pyx_v_l_h_hist_name_old_i_i;
  int __pyx_v_l_h_hist_name_i_i;
  int __pyx_v_l_nu;
  int __pyx_v_inu;
  int __pyx_v_name_old_indx;
  double __pyx_v_theta;
  double __pyx_v_pdot;
  double __pyx_v_nrm1;
  double __pyx_v_nrm2;
  double __pyx_v_increment;
  double __pyx_v_avpart;
  double __pyx_v_inv_l_neighbor_list_i_i_1;
  double __pyx_v_mathpi;
  double __pyx_v_x_i[3];
  double __pyx_v_x_j[3];
  double __pyx_v_x_k[3];
  double __pyx_v_x_i_j[3];
  double __pyx_v_x_ik[3];
  std::vector<double>  __pyx_v_dbox_length;
  std::vector<std::vector<double> >  __pyx_v_dcoord;
  std::vector<std::vector<double> >  __pyx_v_ddirect;
  std::vector<std::vector<int> >  __pyx_v_ineighbor_list;
  int *__pyx_v_lneighbor_list;
  int *__pyx_v_ih_num;
  int *__pyx_v_intnu;
  __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_v_val_ave;
  __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_v_dv;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec __pyx_v_vhist_temp;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec __pyx_v_dg_list;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec __pyx_v_dval;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec __pyx_v_dvv;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec_vec __pyx_v_vh_hist;
  PyObject *__pyx_v_op_val_temp = NULL;
  PyObject *__pyx_v_comb = NULL;
  PyObject *__pyx_v_op_temp = NULL;
  long __pyx_v_i_3;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_h_hist = NULL;
  PyObject *__pyx_v_vname = NULL;
  PyObject *__pyx_v_name_old = NULL;
  PyObject *__pyx_v_h_data_part_nu = NULL;
  PyObject *__pyx_v_g_func = NULL;
  PyObject *__pyx_v_g_power = NULL;
  PyObject *__pyx_v_op_value = NULL;
  PyObject *__pyx_v_i_l = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_v_name_h = NULL;
  PyObject *__pyx_v_dist_layers = NULL;
  PyObject *__pyx_v_a_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  std::vector<double>  __pyx_t_3;
  std::vector<std::vector<double> >  __pyx_t_4;
  std::vector<std::vector<int> >  __pyx_t_5;
  __pyx_t_8malio_cy_12malio_cy_def_dvec __pyx_t_6;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec __pyx_t_7;
  __pyx_t_8malio_cy_12malio_cy_def_dvec_vec_vec __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *(*__pyx_t_16)(PyObject *);
  PyObject *__pyx_t_17 = NULL;
  Py_ssize_t __pyx_t_18;
  PyObject *(*__pyx_t_19)(PyObject *);
  PyObject *__pyx_t_20 = NULL;
  Py_ssize_t __pyx_t_21;
  PyObject *(*__pyx_t_22)(PyObject *);
  PyObject *__pyx_t_23 = NULL;
  Py_ssize_t __pyx_t_24;
  PyObject *(*__pyx_t_25)(PyObject *);
  PyObject *__pyx_t_26 = NULL;
  PyObject *__pyx_t_27 = NULL;
  PyObject *__pyx_t_28 = NULL;
  PyObject *__pyx_t_29 = NULL;
  PyObject *__pyx_t_30 = NULL;
  PyObject *(*__pyx_t_31)(PyObject *);
  int __pyx_t_32;
  int __pyx_t_33;
  int __pyx_t_34;
  long __pyx_t_35;
  long __pyx_t_36;
  long __pyx_t_37;
  int __pyx_t_38;
  int __pyx_t_39;
  int __pyx_t_40;
  int __pyx_t_41;
  double __pyx_t_42;
  int __pyx_t_43;
  int __pyx_t_44;
  int __pyx_t_45;
  PyObject *__pyx_t_46 = NULL;
  PyObject *__pyx_t_47 = NULL;
  PyObject *__pyx_t_48 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("aha_order_parameter", 0);

  /* "malio_cy/op_h_aha_cy.pyx":32
 * @cython.cdivision(True)
 * def aha_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):
 *     a_times = setting['ave_times']             # <<<<<<<<<<<<<<
 *     b_times = setting['b_in_H']
 *     h_num = setting['hist_num']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_ave_times); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_a_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":33
 * def aha_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']             # <<<<<<<<<<<<<<
 *     h_num = setting['hist_num']
 *     o_factor = setting['o_factor']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_b_in_H); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_b_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":34
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 *     h_num = setting['hist_num']             # <<<<<<<<<<<<<<
 *     o_factor = setting['o_factor']
 *     oi_oj_ok = setting['oi_oj_ok']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_hist_num); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h_num = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":35
 *     b_times = setting['b_in_H']
 *     h_num = setting['hist_num']
 *     o_factor = setting['o_factor']             # <<<<<<<<<<<<<<
 *     oi_oj_ok = setting['oi_oj_ok']
 *     nu = setting['nu']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_o_factor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o_factor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":36
 *     h_num = setting['hist_num']
 *     o_factor = setting['o_factor']
 *     oi_oj_ok = setting['oi_oj_ok']             # <<<<<<<<<<<<<<
 *     nu = setting['nu']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_oi_oj_ok); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_oi_oj_ok = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":37
 *     o_factor = setting['o_factor']
 *     oi_oj_ok = setting['oi_oj_ok']
 *     nu = setting['nu']             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_nu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_nu = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":40
 * 
 *     cdef:
 *         int i_i, i_j, i_k, len_c = len(coord), o_f, o_i, o_j, o_k, i, j, k             # <<<<<<<<<<<<<<
 *         int l_neighbor_list_i_i, i_2, len_h_num = len(h_num), h_i, now_i
 *         int n_list, l_neighbor_list = len(neighbor_list), ii_j, inei, b_t, name_indx
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_v_len_c = __pyx_t_2;

  /* "malio_cy/op_h_aha_cy.pyx":41
 *     cdef:
 *         int i_i, i_j, i_k, len_c = len(coord), o_f, o_i, o_j, o_k, i, j, k
 *         int l_neighbor_list_i_i, i_2, len_h_num = len(h_num), h_i, now_i             # <<<<<<<<<<<<<<
 *         int n_list, l_neighbor_list = len(neighbor_list), ii_j, inei, b_t, name_indx
 *         int l_h_hist_name_old_i_i, l_h_hist_name_i_i, l_nu = len(nu), inu, name_old_indx
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_h_num); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 41, __pyx_L1_error)
  __pyx_v_len_h_num = __pyx_t_2;

  /* "malio_cy/op_h_aha_cy.pyx":42
 *         int i_i, i_j, i_k, len_c = len(coord), o_f, o_i, o_j, o_k, i, j, k
 *         int l_neighbor_list_i_i, i_2, len_h_num = len(h_num), h_i, now_i
 *         int n_list, l_neighbor_list = len(neighbor_list), ii_j, inei, b_t, name_indx             # <<<<<<<<<<<<<<
 *         int l_h_hist_name_old_i_i, l_h_hist_name_i_i, l_nu = len(nu), inu, name_old_indx
 *         double theta, pdot, nrm1, nrm2, increment, avpart, inv_l_neighbor_list_i_i_1
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_neighbor_list); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_v_l_neighbor_list = __pyx_t_2;

  /* "malio_cy/op_h_aha_cy.pyx":43
 *         int l_neighbor_list_i_i, i_2, len_h_num = len(h_num), h_i, now_i
 *         int n_list, l_neighbor_list = len(neighbor_list), ii_j, inei, b_t, name_indx
 *         int l_h_hist_name_old_i_i, l_h_hist_name_i_i, l_nu = len(nu), inu, name_old_indx             # <<<<<<<<<<<<<<
 *         double theta, pdot, nrm1, nrm2, increment, avpart, inv_l_neighbor_list_i_i_1
 *         double mathpi = math.pi, zr, zi
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_nu); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_v_l_nu = __pyx_t_2;

  /* "malio_cy/op_h_aha_cy.pyx":45
 *         int l_h_hist_name_old_i_i, l_h_hist_name_i_i, l_nu = len(nu), inu, name_old_indx
 *         double theta, pdot, nrm1, nrm2, increment, avpart, inv_l_neighbor_list_i_i_1
 *         double mathpi = math.pi, zr, zi             # <<<<<<<<<<<<<<
 *         double x_i[3]
 *         double x_j[3]
 */
  __pyx_v_mathpi = M_PI;

  /* "malio_cy/op_h_aha_cy.pyx":51
 *         double x_i_j[3]
 *         double x_ik[3]
 *         vector[double] dbox_length = box_length             # <<<<<<<<<<<<<<
 *         vector[vector[double]] dcoord = coord
 *         vector[vector[double]] ddirect = direct
 */
  __pyx_t_3 = __pyx_convert_vector_from_py_double(__pyx_v_box_length); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 51, __pyx_L1_error)
  __pyx_v_dbox_length = __pyx_t_3;

  /* "malio_cy/op_h_aha_cy.pyx":52
 *         double x_ik[3]
 *         vector[double] dbox_length = box_length
 *         vector[vector[double]] dcoord = coord             # <<<<<<<<<<<<<<
 *         vector[vector[double]] ddirect = direct
 *         vector[vector[int]] ineighbor_list = neighbor_list
 */
  __pyx_t_4 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(__pyx_v_coord); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 52, __pyx_L1_error)
  __pyx_v_dcoord = __pyx_t_4;

  /* "malio_cy/op_h_aha_cy.pyx":53
 *         vector[double] dbox_length = box_length
 *         vector[vector[double]] dcoord = coord
 *         vector[vector[double]] ddirect = direct             # <<<<<<<<<<<<<<
 *         vector[vector[int]] ineighbor_list = neighbor_list
 *         int *lneighbor_list = <int*>malloc(len_c*sizeof(int))
 */
  __pyx_t_4 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(__pyx_v_direct); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 53, __pyx_L1_error)
  __pyx_v_ddirect = __pyx_t_4;

  /* "malio_cy/op_h_aha_cy.pyx":54
 *         vector[vector[double]] dcoord = coord
 *         vector[vector[double]] ddirect = direct
 *         vector[vector[int]] ineighbor_list = neighbor_list             # <<<<<<<<<<<<<<
 *         int *lneighbor_list = <int*>malloc(len_c*sizeof(int))
 *         int *ih_num = <int*>malloc(len_h_num*sizeof(int))
 */
  __pyx_t_5 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(__pyx_v_neighbor_list); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 54, __pyx_L1_error)
  __pyx_v_ineighbor_list = __pyx_t_5;

  /* "malio_cy/op_h_aha_cy.pyx":55
 *         vector[vector[double]] ddirect = direct
 *         vector[vector[int]] ineighbor_list = neighbor_list
 *         int *lneighbor_list = <int*>malloc(len_c*sizeof(int))             # <<<<<<<<<<<<<<
 *         int *ih_num = <int*>malloc(len_h_num*sizeof(int))
 *         int *intnu = <int*>malloc(l_nu*sizeof(int))
 */
  __pyx_v_lneighbor_list = ((int *)malloc((__pyx_v_len_c * (sizeof(int)))));

  /* "malio_cy/op_h_aha_cy.pyx":56
 *         vector[vector[int]] ineighbor_list = neighbor_list
 *         int *lneighbor_list = <int*>malloc(len_c*sizeof(int))
 *         int *ih_num = <int*>malloc(len_h_num*sizeof(int))             # <<<<<<<<<<<<<<
 *         int *intnu = <int*>malloc(l_nu*sizeof(int))
 *         dvec val_ave = dvec(l_neighbor_list)
 */
  __pyx_v_ih_num = ((int *)malloc((__pyx_v_len_h_num * (sizeof(int)))));

  /* "malio_cy/op_h_aha_cy.pyx":57
 *         int *lneighbor_list = <int*>malloc(len_c*sizeof(int))
 *         int *ih_num = <int*>malloc(len_h_num*sizeof(int))
 *         int *intnu = <int*>malloc(l_nu*sizeof(int))             # <<<<<<<<<<<<<<
 *         dvec val_ave = dvec(l_neighbor_list)
 *         dvec dv = dvec()
 */
  __pyx_v_intnu = ((int *)malloc((__pyx_v_l_nu * (sizeof(int)))));

  /* "malio_cy/op_h_aha_cy.pyx":58
 *         int *ih_num = <int*>malloc(len_h_num*sizeof(int))
 *         int *intnu = <int*>malloc(l_nu*sizeof(int))
 *         dvec val_ave = dvec(l_neighbor_list)             # <<<<<<<<<<<<<<
 *         dvec dv = dvec()
 *         dvec_vec vhist_temp = dvec_vec(len_h_num, dv)
 */
  try {
    __pyx_t_6 = __pyx_t_8malio_cy_12malio_cy_def_dvec(__pyx_v_l_neighbor_list);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 58, __pyx_L1_error)
  }
  __pyx_v_val_ave = __pyx_t_6;

  /* "malio_cy/op_h_aha_cy.pyx":59
 *         int *intnu = <int*>malloc(l_nu*sizeof(int))
 *         dvec val_ave = dvec(l_neighbor_list)
 *         dvec dv = dvec()             # <<<<<<<<<<<<<<
 *         dvec_vec vhist_temp = dvec_vec(len_h_num, dv)
 *         dvec_vec dg_list = dvec_vec(len_c, dv)
 */
  try {
    __pyx_t_6 = __pyx_t_8malio_cy_12malio_cy_def_dvec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 59, __pyx_L1_error)
  }
  __pyx_v_dv = __pyx_t_6;

  /* "malio_cy/op_h_aha_cy.pyx":60
 *         dvec val_ave = dvec(l_neighbor_list)
 *         dvec dv = dvec()
 *         dvec_vec vhist_temp = dvec_vec(len_h_num, dv)             # <<<<<<<<<<<<<<
 *         dvec_vec dg_list = dvec_vec(len_c, dv)
 *         dvec_vec dval = dvec_vec()
 */
  try {
    __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_dvec_vec(__pyx_v_len_h_num, __pyx_v_dv);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 60, __pyx_L1_error)
  }
  __pyx_v_vhist_temp = __pyx_t_7;

  /* "malio_cy/op_h_aha_cy.pyx":61
 *         dvec dv = dvec()
 *         dvec_vec vhist_temp = dvec_vec(len_h_num, dv)
 *         dvec_vec dg_list = dvec_vec(len_c, dv)             # <<<<<<<<<<<<<<
 *         dvec_vec dval = dvec_vec()
 *         dvec_vec dvv = dvec_vec(len_c, dv)
 */
  try {
    __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_dvec_vec(__pyx_v_len_c, __pyx_v_dv);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 61, __pyx_L1_error)
  }
  __pyx_v_dg_list = __pyx_t_7;

  /* "malio_cy/op_h_aha_cy.pyx":62
 *         dvec_vec vhist_temp = dvec_vec(len_h_num, dv)
 *         dvec_vec dg_list = dvec_vec(len_c, dv)
 *         dvec_vec dval = dvec_vec()             # <<<<<<<<<<<<<<
 *         dvec_vec dvv = dvec_vec(len_c, dv)
 *         dvec_vec_vec vh_hist = dvec_vec_vec()
 */
  try {
    __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_dvec_vec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 62, __pyx_L1_error)
  }
  __pyx_v_dval = __pyx_t_7;

  /* "malio_cy/op_h_aha_cy.pyx":63
 *         dvec_vec dg_list = dvec_vec(len_c, dv)
 *         dvec_vec dval = dvec_vec()
 *         dvec_vec dvv = dvec_vec(len_c, dv)             # <<<<<<<<<<<<<<
 *         dvec_vec_vec vh_hist = dvec_vec_vec()
 * 
 */
  try {
    __pyx_t_7 = __pyx_t_8malio_cy_12malio_cy_def_dvec_vec(__pyx_v_len_c, __pyx_v_dv);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 63, __pyx_L1_error)
  }
  __pyx_v_dvv = __pyx_t_7;

  /* "malio_cy/op_h_aha_cy.pyx":64
 *         dvec_vec dval = dvec_vec()
 *         dvec_vec dvv = dvec_vec(len_c, dv)
 *         dvec_vec_vec vh_hist = dvec_vec_vec()             # <<<<<<<<<<<<<<
 * 
 *     for i in range(len_c):
 */
  try {
    __pyx_t_8 = __pyx_t_8malio_cy_12malio_cy_def_dvec_vec_vec();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 64, __pyx_L1_error)
  }
  __pyx_v_vh_hist = __pyx_t_8;

  /* "malio_cy/op_h_aha_cy.pyx":66
 *         dvec_vec_vec vh_hist = dvec_vec_vec()
 * 
 *     for i in range(len_c):             # <<<<<<<<<<<<<<
 *         lneighbor_list[i] = len(neighbor_list[i])
 *     for i in range(l_nu):
 */
  __pyx_t_9 = __pyx_v_len_c;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "malio_cy/op_h_aha_cy.pyx":67
 * 
 *     for i in range(len_c):
 *         lneighbor_list[i] = len(neighbor_list[i])             # <<<<<<<<<<<<<<
 *     for i in range(l_nu):
 *         intnu[i] = nu[i]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_neighbor_list, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 67, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    (__pyx_v_lneighbor_list[__pyx_v_i]) = __pyx_t_2;
  }

  /* "malio_cy/op_h_aha_cy.pyx":68
 *     for i in range(len_c):
 *         lneighbor_list[i] = len(neighbor_list[i])
 *     for i in range(l_nu):             # <<<<<<<<<<<<<<
 *         intnu[i] = nu[i]
 *     for i in range(len_h_num):
 */
  __pyx_t_9 = __pyx_v_l_nu;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "malio_cy/op_h_aha_cy.pyx":69
 *         lneighbor_list[i] = len(neighbor_list[i])
 *     for i in range(l_nu):
 *         intnu[i] = nu[i]             # <<<<<<<<<<<<<<
 *     for i in range(len_h_num):
 *         ih_num[i] = h_num[i]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_nu, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 69, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    (__pyx_v_intnu[__pyx_v_i]) = __pyx_t_12;
  }

  /* "malio_cy/op_h_aha_cy.pyx":70
 *     for i in range(l_nu):
 *         intnu[i] = nu[i]
 *     for i in range(len_h_num):             # <<<<<<<<<<<<<<
 *         ih_num[i] = h_num[i]
 *     for i in range(len_h_num):
 */
  __pyx_t_9 = __pyx_v_len_h_num;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "malio_cy/op_h_aha_cy.pyx":71
 *         intnu[i] = nu[i]
 *     for i in range(len_h_num):
 *         ih_num[i] = h_num[i]             # <<<<<<<<<<<<<<
 *     for i in range(len_h_num):
 *         for j in range(ih_num[i]):
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    (__pyx_v_ih_num[__pyx_v_i]) = __pyx_t_12;
  }

  /* "malio_cy/op_h_aha_cy.pyx":72
 *     for i in range(len_h_num):
 *         ih_num[i] = h_num[i]
 *     for i in range(len_h_num):             # <<<<<<<<<<<<<<
 *         for j in range(ih_num[i]):
 *             vhist_temp[i].push_back(0.0)
 */
  __pyx_t_9 = __pyx_v_len_h_num;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "malio_cy/op_h_aha_cy.pyx":73
 *         ih_num[i] = h_num[i]
 *     for i in range(len_h_num):
 *         for j in range(ih_num[i]):             # <<<<<<<<<<<<<<
 *             vhist_temp[i].push_back(0.0)
 *     for i_i in range(len_c):
 */
    __pyx_t_12 = (__pyx_v_ih_num[__pyx_v_i]);
    __pyx_t_13 = __pyx_t_12;
    for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
      __pyx_v_j = __pyx_t_14;

      /* "malio_cy/op_h_aha_cy.pyx":74
 *     for i in range(len_h_num):
 *         for j in range(ih_num[i]):
 *             vhist_temp[i].push_back(0.0)             # <<<<<<<<<<<<<<
 *     for i_i in range(len_c):
 *         for i in range(l_nu):
 */
      try {
        (__pyx_v_vhist_temp[__pyx_v_i]).push_back(0.0);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 74, __pyx_L1_error)
      }
    }
  }

  /* "malio_cy/op_h_aha_cy.pyx":75
 *         for j in range(ih_num[i]):
 *             vhist_temp[i].push_back(0.0)
 *     for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *         for i in range(l_nu):
 *             dg_list[i_i].push_back(0.0)
 */
  __pyx_t_9 = __pyx_v_len_c;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i_i = __pyx_t_11;

    /* "malio_cy/op_h_aha_cy.pyx":76
 *             vhist_temp[i].push_back(0.0)
 *     for i_i in range(len_c):
 *         for i in range(l_nu):             # <<<<<<<<<<<<<<
 *             dg_list[i_i].push_back(0.0)
 * 
 */
    __pyx_t_12 = __pyx_v_l_nu;
    __pyx_t_13 = __pyx_t_12;
    for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
      __pyx_v_i = __pyx_t_14;

      /* "malio_cy/op_h_aha_cy.pyx":77
 *     for i_i in range(len_c):
 *         for i in range(l_nu):
 *             dg_list[i_i].push_back(0.0)             # <<<<<<<<<<<<<<
 * 
 *     op_val_temp= []
 */
      try {
        (__pyx_v_dg_list[__pyx_v_i_i]).push_back(0.0);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 77, __pyx_L1_error)
      }
    }
  }

  /* "malio_cy/op_h_aha_cy.pyx":79
 *             dg_list[i_i].push_back(0.0)
 * 
 *     op_val_temp= []             # <<<<<<<<<<<<<<
 *     for i_i in range(len_c):
 *         l_neighbor_list_i_i = lneighbor_list[i_i]
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_op_val_temp = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":80
 * 
 *     op_val_temp= []
 *     for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *         l_neighbor_list_i_i = lneighbor_list[i_i]
 * 
 */
  __pyx_t_9 = __pyx_v_len_c;
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i_i = __pyx_t_11;

    /* "malio_cy/op_h_aha_cy.pyx":81
 *     op_val_temp= []
 *     for i_i in range(len_c):
 *         l_neighbor_list_i_i = lneighbor_list[i_i]             # <<<<<<<<<<<<<<
 * 
 *         comb = [(o_f, o_i, o_j, o_k)
 */
    __pyx_v_l_neighbor_list_i_i = (__pyx_v_lneighbor_list[__pyx_v_i_i]);

    /* "malio_cy/op_h_aha_cy.pyx":83
 *         l_neighbor_list_i_i = lneighbor_list[i_i]
 * 
 *         comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "malio_cy/op_h_aha_cy.pyx":84
 * 
 *         comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 * 
 *         op_temp = {}
 */
    if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
      __pyx_t_15 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_15); __pyx_t_2 = 0;
      __pyx_t_16 = NULL;
    } else {
      __pyx_t_2 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 84, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_16 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 84, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_16)) {
        if (likely(PyList_CheckExact(__pyx_t_15))) {
          if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_17 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_2); __Pyx_INCREF(__pyx_t_17); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
          #else
          __pyx_t_17 = PySequence_ITEM(__pyx_t_15, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 84, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          #endif
        } else {
          if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_17 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_2); __Pyx_INCREF(__pyx_t_17); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
          #else
          __pyx_t_17 = PySequence_ITEM(__pyx_t_15, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 84, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          #endif
        }
      } else {
        __pyx_t_17 = __pyx_t_16(__pyx_t_15);
        if (unlikely(!__pyx_t_17)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 84, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_17);
      }
      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_17); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 84, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_v_o_f = __pyx_t_12;
      if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
        __pyx_t_17 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_17); __pyx_t_18 = 0;
        __pyx_t_19 = NULL;
      } else {
        __pyx_t_18 = -1; __pyx_t_17 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 84, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_19 = Py_TYPE(__pyx_t_17)->tp_iternext; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 84, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_19)) {
          if (likely(PyList_CheckExact(__pyx_t_17))) {
            if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_17)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_20 = PyList_GET_ITEM(__pyx_t_17, __pyx_t_18); __Pyx_INCREF(__pyx_t_20); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
            #else
            __pyx_t_20 = PySequence_ITEM(__pyx_t_17, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 84, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            #endif
          } else {
            if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_17)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_20 = PyTuple_GET_ITEM(__pyx_t_17, __pyx_t_18); __Pyx_INCREF(__pyx_t_20); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
            #else
            __pyx_t_20 = PySequence_ITEM(__pyx_t_17, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 84, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            #endif
          }
        } else {
          __pyx_t_20 = __pyx_t_19(__pyx_t_17);
          if (unlikely(!__pyx_t_20)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 84, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_20);
        }
        __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_20); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 84, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_v_o_i = __pyx_t_12;
        if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
          __pyx_t_20 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_20); __pyx_t_21 = 0;
          __pyx_t_22 = NULL;
        } else {
          __pyx_t_21 = -1; __pyx_t_20 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 84, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_22 = Py_TYPE(__pyx_t_20)->tp_iternext; if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 84, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_22)) {
            if (likely(PyList_CheckExact(__pyx_t_20))) {
              if (__pyx_t_21 >= PyList_GET_SIZE(__pyx_t_20)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_23 = PyList_GET_ITEM(__pyx_t_20, __pyx_t_21); __Pyx_INCREF(__pyx_t_23); __pyx_t_21++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
              #else
              __pyx_t_23 = PySequence_ITEM(__pyx_t_20, __pyx_t_21); __pyx_t_21++; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 84, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_23);
              #endif
            } else {
              if (__pyx_t_21 >= PyTuple_GET_SIZE(__pyx_t_20)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_23 = PyTuple_GET_ITEM(__pyx_t_20, __pyx_t_21); __Pyx_INCREF(__pyx_t_23); __pyx_t_21++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
              #else
              __pyx_t_23 = PySequence_ITEM(__pyx_t_20, __pyx_t_21); __pyx_t_21++; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 84, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_23);
              #endif
            }
          } else {
            __pyx_t_23 = __pyx_t_22(__pyx_t_20);
            if (unlikely(!__pyx_t_23)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 84, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_23);
          }
          __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_23); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 84, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
          __pyx_v_o_j = __pyx_t_12;
          if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
            __pyx_t_23 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_23); __pyx_t_24 = 0;
            __pyx_t_25 = NULL;
          } else {
            __pyx_t_24 = -1; __pyx_t_23 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 84, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_23);
            __pyx_t_25 = Py_TYPE(__pyx_t_23)->tp_iternext; if (unlikely(!__pyx_t_25)) __PYX_ERR(0, 84, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_25)) {
              if (likely(PyList_CheckExact(__pyx_t_23))) {
                if (__pyx_t_24 >= PyList_GET_SIZE(__pyx_t_23)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_26 = PyList_GET_ITEM(__pyx_t_23, __pyx_t_24); __Pyx_INCREF(__pyx_t_26); __pyx_t_24++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
                #else
                __pyx_t_26 = PySequence_ITEM(__pyx_t_23, __pyx_t_24); __pyx_t_24++; if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 84, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_26);
                #endif
              } else {
                if (__pyx_t_24 >= PyTuple_GET_SIZE(__pyx_t_23)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_26 = PyTuple_GET_ITEM(__pyx_t_23, __pyx_t_24); __Pyx_INCREF(__pyx_t_26); __pyx_t_24++; if (unlikely(0 < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
                #else
                __pyx_t_26 = PySequence_ITEM(__pyx_t_23, __pyx_t_24); __pyx_t_24++; if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 84, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_26);
                #endif
              }
            } else {
              __pyx_t_26 = __pyx_t_25(__pyx_t_23);
              if (unlikely(!__pyx_t_26)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 84, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_26);
            }
            __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_26); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 84, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
            __pyx_v_o_k = __pyx_t_12;

            /* "malio_cy/op_h_aha_cy.pyx":83
 *         l_neighbor_list_i_i = lneighbor_list[i_i]
 * 
 *         comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 */
            __pyx_t_26 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 83, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_26);
            __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 83, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 83, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_28);
            __pyx_t_29 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 83, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_29);
            __pyx_t_30 = PyTuple_New(4); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 83, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            __Pyx_GIVEREF(__pyx_t_26);
            PyTuple_SET_ITEM(__pyx_t_30, 0, __pyx_t_26);
            __Pyx_GIVEREF(__pyx_t_27);
            PyTuple_SET_ITEM(__pyx_t_30, 1, __pyx_t_27);
            __Pyx_GIVEREF(__pyx_t_28);
            PyTuple_SET_ITEM(__pyx_t_30, 2, __pyx_t_28);
            __Pyx_GIVEREF(__pyx_t_29);
            PyTuple_SET_ITEM(__pyx_t_30, 3, __pyx_t_29);
            __pyx_t_26 = 0;
            __pyx_t_27 = 0;
            __pyx_t_28 = 0;
            __pyx_t_29 = 0;
            if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_30))) __PYX_ERR(0, 83, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":84
 * 
 *         comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 * 
 *         op_temp = {}
 */
          }
          __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        }
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      }
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    }
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":86
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 *         op_temp = {}             # <<<<<<<<<<<<<<
 *         for o_f, o_i, o_j, o_k in comb:
 *             # init histogram
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_op_temp, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":87
 * 
 *         op_temp = {}
 *         for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *             # init histogram
 *             ### hist_temp = []  # hist_temp[bin_num][ibin]
 */
    __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    for (;;) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_15 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_15); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 87, __pyx_L1_error)
      #else
      __pyx_t_15 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 87, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      #endif
      if ((likely(PyTuple_CheckExact(__pyx_t_15))) || (PyList_CheckExact(__pyx_t_15))) {
        PyObject* sequence = __pyx_t_15;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 4)) {
          if (size > 4) __Pyx_RaiseTooManyValuesError(4);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 87, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_17 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_20 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_23 = PyTuple_GET_ITEM(sequence, 2); 
          __pyx_t_30 = PyTuple_GET_ITEM(sequence, 3); 
        } else {
          __pyx_t_17 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_20 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_23 = PyList_GET_ITEM(sequence, 2); 
          __pyx_t_30 = PyList_GET_ITEM(sequence, 3); 
        }
        __Pyx_INCREF(__pyx_t_17);
        __Pyx_INCREF(__pyx_t_20);
        __Pyx_INCREF(__pyx_t_23);
        __Pyx_INCREF(__pyx_t_30);
        #else
        {
          Py_ssize_t i;
          PyObject** temps[4] = {&__pyx_t_17,&__pyx_t_20,&__pyx_t_23,&__pyx_t_30};
          for (i=0; i < 4; i++) {
            PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 87, __pyx_L1_error)
            __Pyx_GOTREF(item);
            *(temps[i]) = item;
          }
        }
        #endif
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      } else {
        Py_ssize_t index = -1;
        PyObject** temps[4] = {&__pyx_t_17,&__pyx_t_20,&__pyx_t_23,&__pyx_t_30};
        __pyx_t_29 = PyObject_GetIter(__pyx_t_15); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_31 = Py_TYPE(__pyx_t_29)->tp_iternext;
        for (index=0; index < 4; index++) {
          PyObject* item = __pyx_t_31(__pyx_t_29); if (unlikely(!item)) goto __pyx_L29_unpacking_failed;
          __Pyx_GOTREF(item);
          *(temps[index]) = item;
        }
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_31(__pyx_t_29), 4) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
        __pyx_t_31 = NULL;
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        goto __pyx_L30_unpacking_done;
        __pyx_L29_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        __pyx_t_31 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 87, __pyx_L1_error)
        __pyx_L30_unpacking_done:;
      }
      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_17); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 87, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_20); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 87, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_23); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 87, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
      __pyx_t_32 = __Pyx_PyInt_As_int(__pyx_t_30); if (unlikely((__pyx_t_32 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 87, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      __pyx_v_o_f = __pyx_t_12;
      __pyx_v_o_i = __pyx_t_13;
      __pyx_v_o_j = __pyx_t_14;
      __pyx_v_o_k = __pyx_t_32;

      /* "malio_cy/op_h_aha_cy.pyx":93
 *             ###     h_temp2 = [0 for i in range(h_num[i_k])]
 *             ###     hist_temp.append(h_temp2)
 *             for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                 for i in range(ih_num[i_k]):
 *                     vhist_temp[i_k][i] = 0.0
 */
      __pyx_t_32 = __pyx_v_len_h_num;
      __pyx_t_14 = __pyx_t_32;
      for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_14; __pyx_t_13+=1) {
        __pyx_v_i_k = __pyx_t_13;

        /* "malio_cy/op_h_aha_cy.pyx":94
 *             ###     hist_temp.append(h_temp2)
 *             for i_k in range(len_h_num):
 *                 for i in range(ih_num[i_k]):             # <<<<<<<<<<<<<<
 *                     vhist_temp[i_k][i] = 0.0
 * 
 */
        __pyx_t_12 = (__pyx_v_ih_num[__pyx_v_i_k]);
        __pyx_t_33 = __pyx_t_12;
        for (__pyx_t_34 = 0; __pyx_t_34 < __pyx_t_33; __pyx_t_34+=1) {
          __pyx_v_i = __pyx_t_34;

          /* "malio_cy/op_h_aha_cy.pyx":95
 *             for i_k in range(len_h_num):
 *                 for i in range(ih_num[i_k]):
 *                     vhist_temp[i_k][i] = 0.0             # <<<<<<<<<<<<<<
 * 
 *             ### x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 */
          ((__pyx_v_vhist_temp[__pyx_v_i_k])[__pyx_v_i]) = 0.0;
        }
      }

      /* "malio_cy/op_h_aha_cy.pyx":98
 * 
 *             ### x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 *             for i in range(3):             # <<<<<<<<<<<<<<
 *                 x_i[i] =dcoord[i_i][i] + <double>o_f * <double>o_i * ddirect[i_i][i]
 * 
 */
      for (__pyx_t_32 = 0; __pyx_t_32 < 3; __pyx_t_32+=1) {
        __pyx_v_i = __pyx_t_32;

        /* "malio_cy/op_h_aha_cy.pyx":99
 *             ### x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 *             for i in range(3):
 *                 x_i[i] =dcoord[i_i][i] + <double>o_f * <double>o_i * ddirect[i_i][i]             # <<<<<<<<<<<<<<
 * 
 *             n_list = l_neighbor_list_i_i
 */
        (__pyx_v_x_i[__pyx_v_i]) = (((__pyx_v_dcoord[__pyx_v_i_i])[__pyx_v_i]) + ((((double)__pyx_v_o_f) * ((double)__pyx_v_o_i)) * ((__pyx_v_ddirect[__pyx_v_i_i])[__pyx_v_i])));
      }

      /* "malio_cy/op_h_aha_cy.pyx":101
 *                 x_i[i] =dcoord[i_i][i] + <double>o_f * <double>o_i * ddirect[i_i][i]
 * 
 *             n_list = l_neighbor_list_i_i             # <<<<<<<<<<<<<<
 *             increment = 1.0 / <double>(n_list*(n_list-1)/2)
 *             for i_2 in range(l_neighbor_list_i_i - 1):
 */
      __pyx_v_n_list = __pyx_v_l_neighbor_list_i_i;

      /* "malio_cy/op_h_aha_cy.pyx":102
 * 
 *             n_list = l_neighbor_list_i_i
 *             increment = 1.0 / <double>(n_list*(n_list-1)/2)             # <<<<<<<<<<<<<<
 *             for i_2 in range(l_neighbor_list_i_i - 1):
 *                 i_j = ineighbor_list[i_i][i_2]
 */
      __pyx_v_increment = (1.0 / ((double)((__pyx_v_n_list * (__pyx_v_n_list - 1)) / 2)));

      /* "malio_cy/op_h_aha_cy.pyx":103
 *             n_list = l_neighbor_list_i_i
 *             increment = 1.0 / <double>(n_list*(n_list-1)/2)
 *             for i_2 in range(l_neighbor_list_i_i - 1):             # <<<<<<<<<<<<<<
 *                 i_j = ineighbor_list[i_i][i_2]
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 */
      __pyx_t_35 = (__pyx_v_l_neighbor_list_i_i - 1);
      __pyx_t_36 = __pyx_t_35;
      for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_36; __pyx_t_32+=1) {
        __pyx_v_i_2 = __pyx_t_32;

        /* "malio_cy/op_h_aha_cy.pyx":104
 *             increment = 1.0 / <double>(n_list*(n_list-1)/2)
 *             for i_2 in range(l_neighbor_list_i_i - 1):
 *                 i_j = ineighbor_list[i_i][i_2]             # <<<<<<<<<<<<<<
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *                 for i in range(3):
 */
        __pyx_v_i_j = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_i_2]);

        /* "malio_cy/op_h_aha_cy.pyx":106
 *                 i_j = ineighbor_list[i_i][i_2]
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *                 for i in range(3):             # <<<<<<<<<<<<<<
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]
 *                 for i_3 in range(i_2 + 1, l_neighbor_list_i_i):
 */
        for (__pyx_t_14 = 0; __pyx_t_14 < 3; __pyx_t_14+=1) {
          __pyx_v_i = __pyx_t_14;

          /* "malio_cy/op_h_aha_cy.pyx":107
 *                 ### x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *                 for i in range(3):
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]             # <<<<<<<<<<<<<<
 *                 for i_3 in range(i_2 + 1, l_neighbor_list_i_i):
 *                     i_k = ineighbor_list[i_i][i_3]
 */
          (__pyx_v_x_j[__pyx_v_i]) = (((__pyx_v_dcoord[__pyx_v_i_j])[__pyx_v_i]) + ((((double)__pyx_v_o_f) * ((double)__pyx_v_o_j)) * ((__pyx_v_ddirect[__pyx_v_i_j])[__pyx_v_i])));
        }

        /* "malio_cy/op_h_aha_cy.pyx":108
 *                 for i in range(3):
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]
 *                 for i_3 in range(i_2 + 1, l_neighbor_list_i_i):             # <<<<<<<<<<<<<<
 *                     i_k = ineighbor_list[i_i][i_3]
 *                     ### x_k = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_k, o_f, o_k)
 */
        __pyx_t_14 = __pyx_v_l_neighbor_list_i_i;
        __pyx_t_13 = __pyx_t_14;
        for (__pyx_t_37 = (__pyx_v_i_2 + 1); __pyx_t_37 < __pyx_t_13; __pyx_t_37+=1) {
          __pyx_v_i_3 = __pyx_t_37;

          /* "malio_cy/op_h_aha_cy.pyx":109
 *                     x_j[i] = dcoord[i_j][i] + <double>o_f * <double>o_j * ddirect[i_j][i]
 *                 for i_3 in range(i_2 + 1, l_neighbor_list_i_i):
 *                     i_k = ineighbor_list[i_i][i_3]             # <<<<<<<<<<<<<<
 *                     ### x_k = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_k, o_f, o_k)
 *                     for i in range(3):
 */
          __pyx_v_i_k = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_i_3]);

          /* "malio_cy/op_h_aha_cy.pyx":111
 *                     i_k = ineighbor_list[i_i][i_3]
 *                     ### x_k = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_k, o_f, o_k)
 *                     for i in range(3):             # <<<<<<<<<<<<<<
 *                         x_k[i] = dcoord[i_k][i] + <double>o_f * <double>o_k * ddirect[i_k][i]
 * 
 */
          for (__pyx_t_12 = 0; __pyx_t_12 < 3; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "malio_cy/op_h_aha_cy.pyx":112
 *                     ### x_k = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_k, o_f, o_k)
 *                     for i in range(3):
 *                         x_k[i] = dcoord[i_k][i] + <double>o_f * <double>o_k * ddirect[i_k][i]             # <<<<<<<<<<<<<<
 * 
 *                     ### x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 */
            (__pyx_v_x_k[__pyx_v_i]) = (((__pyx_v_dcoord[__pyx_v_i_k])[__pyx_v_i]) + ((((double)__pyx_v_o_f) * ((double)__pyx_v_o_k)) * ((__pyx_v_ddirect[__pyx_v_i_k])[__pyx_v_i])));
          }

          /* "malio_cy/op_h_aha_cy.pyx":116
 *                     ### x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 *                     ### x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                     for i in range(3):             # <<<<<<<<<<<<<<
 *                         x_i_j[i] = x_j[i] - x_i[i]
 *                         x_ik[i]  = x_k[i] - x_i[i]
 */
          for (__pyx_t_12 = 0; __pyx_t_12 < 3; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "malio_cy/op_h_aha_cy.pyx":117
 *                     ### x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                     for i in range(3):
 *                         x_i_j[i] = x_j[i] - x_i[i]             # <<<<<<<<<<<<<<
 *                         x_ik[i]  = x_k[i] - x_i[i]
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:
 */
            (__pyx_v_x_i_j[__pyx_v_i]) = ((__pyx_v_x_j[__pyx_v_i]) - (__pyx_v_x_i[__pyx_v_i]));

            /* "malio_cy/op_h_aha_cy.pyx":118
 *                     for i in range(3):
 *                         x_i_j[i] = x_j[i] - x_i[i]
 *                         x_ik[i]  = x_k[i] - x_i[i]             # <<<<<<<<<<<<<<
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:
 *                             x_i_j[i] += dbox_length[i]
 */
            (__pyx_v_x_ik[__pyx_v_i]) = ((__pyx_v_x_k[__pyx_v_i]) - (__pyx_v_x_i[__pyx_v_i]));

            /* "malio_cy/op_h_aha_cy.pyx":119
 *                         x_i_j[i] = x_j[i] - x_i[i]
 *                         x_ik[i]  = x_k[i] - x_i[i]
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_i_j[i] += dbox_length[i]
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:
 */
            __pyx_t_38 = (((__pyx_v_x_i_j[__pyx_v_i]) < ((-(__pyx_v_dbox_length[__pyx_v_i])) * 0.5)) != 0);
            if (__pyx_t_38) {

              /* "malio_cy/op_h_aha_cy.pyx":120
 *                         x_ik[i]  = x_k[i] - x_i[i]
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:
 *                             x_i_j[i] += dbox_length[i]             # <<<<<<<<<<<<<<
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:
 *                             x_i_j[i] -= dbox_length[i]
 */
              __pyx_t_33 = __pyx_v_i;
              (__pyx_v_x_i_j[__pyx_t_33]) = ((__pyx_v_x_i_j[__pyx_t_33]) + (__pyx_v_dbox_length[__pyx_v_i]));

              /* "malio_cy/op_h_aha_cy.pyx":119
 *                         x_i_j[i] = x_j[i] - x_i[i]
 *                         x_ik[i]  = x_k[i] - x_i[i]
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_i_j[i] += dbox_length[i]
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:
 */
              goto __pyx_L47;
            }

            /* "malio_cy/op_h_aha_cy.pyx":121
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:
 *                             x_i_j[i] += dbox_length[i]
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_i_j[i] -= dbox_length[i]
 *                         if x_ik[i] < -dbox_length[i] * 0.5:
 */
            __pyx_t_38 = (((__pyx_v_x_i_j[__pyx_v_i]) >= ((__pyx_v_dbox_length[__pyx_v_i]) * 0.5)) != 0);
            if (__pyx_t_38) {

              /* "malio_cy/op_h_aha_cy.pyx":122
 *                             x_i_j[i] += dbox_length[i]
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:
 *                             x_i_j[i] -= dbox_length[i]             # <<<<<<<<<<<<<<
 *                         if x_ik[i] < -dbox_length[i] * 0.5:
 *                             x_ik[i] += dbox_length[i]
 */
              __pyx_t_33 = __pyx_v_i;
              (__pyx_v_x_i_j[__pyx_t_33]) = ((__pyx_v_x_i_j[__pyx_t_33]) - (__pyx_v_dbox_length[__pyx_v_i]));

              /* "malio_cy/op_h_aha_cy.pyx":121
 *                         if x_i_j[i] < -dbox_length[i] * 0.5:
 *                             x_i_j[i] += dbox_length[i]
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_i_j[i] -= dbox_length[i]
 *                         if x_ik[i] < -dbox_length[i] * 0.5:
 */
            }
            __pyx_L47:;

            /* "malio_cy/op_h_aha_cy.pyx":123
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:
 *                             x_i_j[i] -= dbox_length[i]
 *                         if x_ik[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_ik[i] += dbox_length[i]
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:
 */
            __pyx_t_38 = (((__pyx_v_x_ik[__pyx_v_i]) < ((-(__pyx_v_dbox_length[__pyx_v_i])) * 0.5)) != 0);
            if (__pyx_t_38) {

              /* "malio_cy/op_h_aha_cy.pyx":124
 *                             x_i_j[i] -= dbox_length[i]
 *                         if x_ik[i] < -dbox_length[i] * 0.5:
 *                             x_ik[i] += dbox_length[i]             # <<<<<<<<<<<<<<
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:
 *                             x_ik[i] -= dbox_length[i]
 */
              __pyx_t_33 = __pyx_v_i;
              (__pyx_v_x_ik[__pyx_t_33]) = ((__pyx_v_x_ik[__pyx_t_33]) + (__pyx_v_dbox_length[__pyx_v_i]));

              /* "malio_cy/op_h_aha_cy.pyx":123
 *                         elif x_i_j[i] >= dbox_length[i] * 0.5:
 *                             x_i_j[i] -= dbox_length[i]
 *                         if x_ik[i] < -dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_ik[i] += dbox_length[i]
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:
 */
              goto __pyx_L48;
            }

            /* "malio_cy/op_h_aha_cy.pyx":125
 *                         if x_ik[i] < -dbox_length[i] * 0.5:
 *                             x_ik[i] += dbox_length[i]
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_ik[i] -= dbox_length[i]
 *                     pdot = 0.0
 */
            __pyx_t_38 = (((__pyx_v_x_ik[__pyx_v_i]) >= ((__pyx_v_dbox_length[__pyx_v_i]) * 0.5)) != 0);
            if (__pyx_t_38) {

              /* "malio_cy/op_h_aha_cy.pyx":126
 *                             x_ik[i] += dbox_length[i]
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:
 *                             x_ik[i] -= dbox_length[i]             # <<<<<<<<<<<<<<
 *                     pdot = 0.0
 *                     nrm1 = 0.0
 */
              __pyx_t_33 = __pyx_v_i;
              (__pyx_v_x_ik[__pyx_t_33]) = ((__pyx_v_x_ik[__pyx_t_33]) - (__pyx_v_dbox_length[__pyx_v_i]));

              /* "malio_cy/op_h_aha_cy.pyx":125
 *                         if x_ik[i] < -dbox_length[i] * 0.5:
 *                             x_ik[i] += dbox_length[i]
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:             # <<<<<<<<<<<<<<
 *                             x_ik[i] -= dbox_length[i]
 *                     pdot = 0.0
 */
            }
            __pyx_L48:;
          }

          /* "malio_cy/op_h_aha_cy.pyx":127
 *                         elif x_ik[i] >= dbox_length[i] * 0.5:
 *                             x_ik[i] -= dbox_length[i]
 *                     pdot = 0.0             # <<<<<<<<<<<<<<
 *                     nrm1 = 0.0
 *                     nrm2 = 0.0
 */
          __pyx_v_pdot = 0.0;

          /* "malio_cy/op_h_aha_cy.pyx":128
 *                             x_ik[i] -= dbox_length[i]
 *                     pdot = 0.0
 *                     nrm1 = 0.0             # <<<<<<<<<<<<<<
 *                     nrm2 = 0.0
 *                     for i in range(3):
 */
          __pyx_v_nrm1 = 0.0;

          /* "malio_cy/op_h_aha_cy.pyx":129
 *                     pdot = 0.0
 *                     nrm1 = 0.0
 *                     nrm2 = 0.0             # <<<<<<<<<<<<<<
 *                     for i in range(3):
 *                         pdot += x_i_j[i]*x_ik[i]
 */
          __pyx_v_nrm2 = 0.0;

          /* "malio_cy/op_h_aha_cy.pyx":130
 *                     nrm1 = 0.0
 *                     nrm2 = 0.0
 *                     for i in range(3):             # <<<<<<<<<<<<<<
 *                         pdot += x_i_j[i]*x_ik[i]
 *                         nrm1 += x_i_j[i]*x_i_j[i]
 */
          for (__pyx_t_12 = 0; __pyx_t_12 < 3; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "malio_cy/op_h_aha_cy.pyx":131
 *                     nrm2 = 0.0
 *                     for i in range(3):
 *                         pdot += x_i_j[i]*x_ik[i]             # <<<<<<<<<<<<<<
 *                         nrm1 += x_i_j[i]*x_i_j[i]
 *                         nrm2 += x_ik[i]*x_ik[i]
 */
            __pyx_v_pdot = (__pyx_v_pdot + ((__pyx_v_x_i_j[__pyx_v_i]) * (__pyx_v_x_ik[__pyx_v_i])));

            /* "malio_cy/op_h_aha_cy.pyx":132
 *                     for i in range(3):
 *                         pdot += x_i_j[i]*x_ik[i]
 *                         nrm1 += x_i_j[i]*x_i_j[i]             # <<<<<<<<<<<<<<
 *                         nrm2 += x_ik[i]*x_ik[i]
 *                     ### if math.sqrt(nrm1*nrm2) > 1.0e-10:
 */
            __pyx_v_nrm1 = (__pyx_v_nrm1 + ((__pyx_v_x_i_j[__pyx_v_i]) * (__pyx_v_x_i_j[__pyx_v_i])));

            /* "malio_cy/op_h_aha_cy.pyx":133
 *                         pdot += x_i_j[i]*x_ik[i]
 *                         nrm1 += x_i_j[i]*x_i_j[i]
 *                         nrm2 += x_ik[i]*x_ik[i]             # <<<<<<<<<<<<<<
 *                     ### if math.sqrt(nrm1*nrm2) > 1.0e-10:
 *                     if nrm1*nrm2 > 1.0e-12:
 */
            __pyx_v_nrm2 = (__pyx_v_nrm2 + ((__pyx_v_x_ik[__pyx_v_i]) * (__pyx_v_x_ik[__pyx_v_i])));
          }

          /* "malio_cy/op_h_aha_cy.pyx":135
 *                         nrm2 += x_ik[i]*x_ik[i]
 *                     ### if math.sqrt(nrm1*nrm2) > 1.0e-10:
 *                     if nrm1*nrm2 > 1.0e-12:             # <<<<<<<<<<<<<<
 *                         theta = math.acos(pdot/math.sqrt(nrm1*nrm2))
 *                     else:
 */
          __pyx_t_38 = (((__pyx_v_nrm1 * __pyx_v_nrm2) > 1.0e-12) != 0);
          if (__pyx_t_38) {

            /* "malio_cy/op_h_aha_cy.pyx":136
 *                     ### if math.sqrt(nrm1*nrm2) > 1.0e-10:
 *                     if nrm1*nrm2 > 1.0e-12:
 *                         theta = math.acos(pdot/math.sqrt(nrm1*nrm2))             # <<<<<<<<<<<<<<
 *                     else:
 *                         theta = 0.0
 */
            __pyx_v_theta = acos((__pyx_v_pdot / sqrt((__pyx_v_nrm1 * __pyx_v_nrm2))));

            /* "malio_cy/op_h_aha_cy.pyx":135
 *                         nrm2 += x_ik[i]*x_ik[i]
 *                     ### if math.sqrt(nrm1*nrm2) > 1.0e-10:
 *                     if nrm1*nrm2 > 1.0e-12:             # <<<<<<<<<<<<<<
 *                         theta = math.acos(pdot/math.sqrt(nrm1*nrm2))
 *                     else:
 */
            goto __pyx_L51;
          }

          /* "malio_cy/op_h_aha_cy.pyx":138
 *                         theta = math.acos(pdot/math.sqrt(nrm1*nrm2))
 *                     else:
 *                         theta = 0.0             # <<<<<<<<<<<<<<
 *                     ### try:
 *                     ###     theta = misc_cy.angle(x_i_j, x_ik)
 */
          /*else*/ {
            __pyx_v_theta = 0.0;
          }
          __pyx_L51:;

          /* "malio_cy/op_h_aha_cy.pyx":143
 *                     ### except ValueError:
 *                     ###     theta = 0.0
 *                     if theta >= mathpi:             # <<<<<<<<<<<<<<
 *                         theta -= mathpi
 * 
 */
          __pyx_t_38 = ((__pyx_v_theta >= __pyx_v_mathpi) != 0);
          if (__pyx_t_38) {

            /* "malio_cy/op_h_aha_cy.pyx":144
 *                     ###     theta = 0.0
 *                     if theta >= mathpi:
 *                         theta -= mathpi             # <<<<<<<<<<<<<<
 * 
 *                     ### for i_k, _ in enumerate(h_num):
 */
            __pyx_v_theta = (__pyx_v_theta - __pyx_v_mathpi);

            /* "malio_cy/op_h_aha_cy.pyx":143
 *                     ### except ValueError:
 *                     ###     theta = 0.0
 *                     if theta >= mathpi:             # <<<<<<<<<<<<<<
 *                         theta -= mathpi
 * 
 */
          }

          /* "malio_cy/op_h_aha_cy.pyx":150
 *                     ###     now_i = int(h_i * theta / math.pi)
 *                     ###     hist_temp[i_k][now_i] += 1.0 / float(n_list * (n_list - 1) / 2)
 *                     for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                         h_i = ih_num[i_k]
 *                         now_i = <int>(<double>h_i * theta / mathpi)
 */
          __pyx_t_12 = __pyx_v_len_h_num;
          __pyx_t_33 = __pyx_t_12;
          for (__pyx_t_34 = 0; __pyx_t_34 < __pyx_t_33; __pyx_t_34+=1) {
            __pyx_v_i_k = __pyx_t_34;

            /* "malio_cy/op_h_aha_cy.pyx":151
 *                     ###     hist_temp[i_k][now_i] += 1.0 / float(n_list * (n_list - 1) / 2)
 *                     for i_k in range(len_h_num):
 *                         h_i = ih_num[i_k]             # <<<<<<<<<<<<<<
 *                         now_i = <int>(<double>h_i * theta / mathpi)
 *                         vhist_temp[i_k][now_i] += increment
 */
            __pyx_v_h_i = (__pyx_v_ih_num[__pyx_v_i_k]);

            /* "malio_cy/op_h_aha_cy.pyx":152
 *                     for i_k in range(len_h_num):
 *                         h_i = ih_num[i_k]
 *                         now_i = <int>(<double>h_i * theta / mathpi)             # <<<<<<<<<<<<<<
 *                         vhist_temp[i_k][now_i] += increment
 * 
 */
            __pyx_v_now_i = ((int)((((double)__pyx_v_h_i) * __pyx_v_theta) / __pyx_v_mathpi));

            /* "malio_cy/op_h_aha_cy.pyx":153
 *                         h_i = ih_num[i_k]
 *                         now_i = <int>(<double>h_i * theta / mathpi)
 *                         vhist_temp[i_k][now_i] += increment             # <<<<<<<<<<<<<<
 * 
 *             ### for i_k, _ in enumerate(h_num):
 */
            __pyx_t_39 = __pyx_v_i_k;
            __pyx_t_40 = __pyx_v_now_i;
            ((__pyx_v_vhist_temp[__pyx_t_39])[__pyx_t_40]) = (((__pyx_v_vhist_temp[__pyx_t_39])[__pyx_t_40]) + __pyx_v_increment);
          }
        }
      }

      /* "malio_cy/op_h_aha_cy.pyx":156
 * 
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 ### op_temp[name] = hist_temp[i_k]
 */
      __pyx_t_32 = __pyx_v_len_h_num;
      __pyx_t_14 = __pyx_t_32;
      for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_14; __pyx_t_13+=1) {
        __pyx_v_i_k = __pyx_t_13;

        /* "malio_cy/op_h_aha_cy.pyx":157
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 ### op_temp[name] = hist_temp[i_k]
 *                 op_temp[name] = vhist_temp[i_k]
 */
        __Pyx_GetModuleGlobalName(__pyx_t_30, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_23 = __Pyx_PyObject_GetAttrStr(__pyx_t_30, __pyx_n_s_naming); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
        __pyx_t_30 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_29 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_28);
        __pyx_t_27 = PyList_New(7); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 157, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_27, 0, __pyx_int_0);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_27, 1, __pyx_int_0);
        __Pyx_GIVEREF(__pyx_t_30);
        PyList_SET_ITEM(__pyx_t_27, 2, __pyx_t_30);
        __Pyx_GIVEREF(__pyx_t_20);
        PyList_SET_ITEM(__pyx_t_27, 3, __pyx_t_20);
        __Pyx_GIVEREF(__pyx_t_17);
        PyList_SET_ITEM(__pyx_t_27, 4, __pyx_t_17);
        __Pyx_GIVEREF(__pyx_t_29);
        PyList_SET_ITEM(__pyx_t_27, 5, __pyx_t_29);
        __Pyx_GIVEREF(__pyx_t_28);
        PyList_SET_ITEM(__pyx_t_27, 6, __pyx_t_28);
        __pyx_t_30 = 0;
        __pyx_t_20 = 0;
        __pyx_t_17 = 0;
        __pyx_t_29 = 0;
        __pyx_t_28 = 0;
        __pyx_t_28 = NULL;
        __pyx_t_12 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_23))) {
          __pyx_t_28 = PyMethod_GET_SELF(__pyx_t_23);
          if (likely(__pyx_t_28)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_23);
            __Pyx_INCREF(__pyx_t_28);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_23, function);
            __pyx_t_12 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_23)) {
          PyObject *__pyx_temp[3] = {__pyx_t_28, __pyx_n_s_h, __pyx_t_27};
          __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_23, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 157, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_28); __pyx_t_28 = 0;
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_23)) {
          PyObject *__pyx_temp[3] = {__pyx_t_28, __pyx_n_s_h, __pyx_t_27};
          __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_23, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 157, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_28); __pyx_t_28 = 0;
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        } else
        #endif
        {
          __pyx_t_29 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 157, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          if (__pyx_t_28) {
            __Pyx_GIVEREF(__pyx_t_28); PyTuple_SET_ITEM(__pyx_t_29, 0, __pyx_t_28); __pyx_t_28 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_29, 0+__pyx_t_12, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_27);
          PyTuple_SET_ITEM(__pyx_t_29, 1+__pyx_t_12, __pyx_t_27);
          __pyx_t_27 = 0;
          __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_23, __pyx_t_29, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 157, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        }
        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_15);
        __pyx_t_15 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":159
 *                 name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 ### op_temp[name] = hist_temp[i_k]
 *                 op_temp[name] = vhist_temp[i_k]             # <<<<<<<<<<<<<<
 * 
 *         ### return op_temp
 */
        __pyx_t_15 = __pyx_convert_vector_to_py_double((__pyx_v_vhist_temp[__pyx_v_i_k])); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 159, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (unlikely(PyDict_SetItem(__pyx_v_op_temp, __pyx_v_name, __pyx_t_15) < 0)) __PYX_ERR(0, 159, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      }

      /* "malio_cy/op_h_aha_cy.pyx":87
 * 
 *         op_temp = {}
 *         for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *             # init histogram
 *             ### hist_temp = []  # hist_temp[bin_num][ibin]
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":162
 * 
 *         ### return op_temp
 *         op_val_temp.append(op_temp)             # <<<<<<<<<<<<<<
 * 
 *     h_hist = misc_cy.data_num_name_to_data_name_num(op_val_temp, len_c)
 */
    __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_op_val_temp, __pyx_v_op_temp); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 162, __pyx_L1_error)
  }

  /* "malio_cy/op_h_aha_cy.pyx":164
 *         op_val_temp.append(op_temp)
 * 
 *     h_hist = misc_cy.data_num_name_to_data_name_num(op_val_temp, len_c)             # <<<<<<<<<<<<<<
 * 
 *     ### fast access preparation
 */
  __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_23 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_data_num_name_to_data_name_num); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_23);
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_len_c); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_29 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_23))) {
    __pyx_t_29 = PyMethod_GET_SELF(__pyx_t_23);
    if (likely(__pyx_t_29)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_23);
      __Pyx_INCREF(__pyx_t_29);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_23, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_23)) {
    PyObject *__pyx_temp[3] = {__pyx_t_29, __pyx_v_op_val_temp, __pyx_t_15};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_23, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_29); __pyx_t_29 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_23)) {
    PyObject *__pyx_temp[3] = {__pyx_t_29, __pyx_v_op_val_temp, __pyx_t_15};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_23, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_29); __pyx_t_29 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  } else
  #endif
  {
    __pyx_t_27 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    if (__pyx_t_29) {
      __Pyx_GIVEREF(__pyx_t_29); PyTuple_SET_ITEM(__pyx_t_27, 0, __pyx_t_29); __pyx_t_29 = NULL;
    }
    __Pyx_INCREF(__pyx_v_op_val_temp);
    __Pyx_GIVEREF(__pyx_v_op_val_temp);
    PyTuple_SET_ITEM(__pyx_t_27, 0+__pyx_t_9, __pyx_v_op_val_temp);
    __Pyx_GIVEREF(__pyx_t_15);
    PyTuple_SET_ITEM(__pyx_t_27, 1+__pyx_t_9, __pyx_t_15);
    __pyx_t_15 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_23, __pyx_t_27, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
  }
  __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
  __pyx_v_h_hist = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":167
 * 
 *     ### fast access preparation
 *     vname = []             # <<<<<<<<<<<<<<
 *     for i, name in enumerate(h_hist):
 *         vh_hist.push_back(dvv)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_vname = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":168
 *     ### fast access preparation
 *     vname = []
 *     for i, name in enumerate(h_hist):             # <<<<<<<<<<<<<<
 *         vh_hist.push_back(dvv)
 *         vname.append(name)
 */
  __pyx_t_9 = 0;
  if (likely(PyList_CheckExact(__pyx_v_h_hist)) || PyTuple_CheckExact(__pyx_v_h_hist)) {
    __pyx_t_1 = __pyx_v_h_hist; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_16 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_h_hist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_16 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 168, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_16)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_23 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_23); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 168, __pyx_L1_error)
        #else
        __pyx_t_23 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 168, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_23 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_23); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 168, __pyx_L1_error)
        #else
        __pyx_t_23 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 168, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        #endif
      }
    } else {
      __pyx_t_23 = __pyx_t_16(__pyx_t_1);
      if (unlikely(!__pyx_t_23)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 168, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_23);
    }
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_23);
    __pyx_t_23 = 0;
    __pyx_v_i = __pyx_t_9;
    __pyx_t_9 = (__pyx_t_9 + 1);

    /* "malio_cy/op_h_aha_cy.pyx":169
 *     vname = []
 *     for i, name in enumerate(h_hist):
 *         vh_hist.push_back(dvv)             # <<<<<<<<<<<<<<
 *         vname.append(name)
 *         for j in range(len_c):
 */
    try {
      __pyx_v_vh_hist.push_back(__pyx_v_dvv);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 169, __pyx_L1_error)
    }

    /* "malio_cy/op_h_aha_cy.pyx":170
 *     for i, name in enumerate(h_hist):
 *         vh_hist.push_back(dvv)
 *         vname.append(name)             # <<<<<<<<<<<<<<
 *         for j in range(len_c):
 *             vh_hist[i].push_back(dv)
 */
    __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_vname, __pyx_v_name); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 170, __pyx_L1_error)

    /* "malio_cy/op_h_aha_cy.pyx":171
 *         vh_hist.push_back(dvv)
 *         vname.append(name)
 *         for j in range(len_c):             # <<<<<<<<<<<<<<
 *             vh_hist[i].push_back(dv)
 *             for k in range(len(h_hist[name][j])):
 */
    __pyx_t_10 = __pyx_v_len_c;
    __pyx_t_11 = __pyx_t_10;
    for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_11; __pyx_t_32+=1) {
      __pyx_v_j = __pyx_t_32;

      /* "malio_cy/op_h_aha_cy.pyx":172
 *         vname.append(name)
 *         for j in range(len_c):
 *             vh_hist[i].push_back(dv)             # <<<<<<<<<<<<<<
 *             for k in range(len(h_hist[name][j])):
 *                 vh_hist[i][j].push_back(h_hist[name][j][k])
 */
      try {
        (__pyx_v_vh_hist[__pyx_v_i]).push_back(__pyx_v_dv);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 172, __pyx_L1_error)
      }

      /* "malio_cy/op_h_aha_cy.pyx":173
 *         for j in range(len_c):
 *             vh_hist[i].push_back(dv)
 *             for k in range(len(h_hist[name][j])):             # <<<<<<<<<<<<<<
 *                 vh_hist[i][j].push_back(h_hist[name][j][k])
 * 
 */
      __pyx_t_23 = __Pyx_PyObject_GetItem(__pyx_v_h_hist, __pyx_v_name); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 173, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_23);
      __pyx_t_27 = __Pyx_GetItemInt(__pyx_t_23, __pyx_v_j, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 173, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_27);
      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
      __pyx_t_18 = PyObject_Length(__pyx_t_27); if (unlikely(__pyx_t_18 == ((Py_ssize_t)-1))) __PYX_ERR(0, 173, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
      __pyx_t_21 = __pyx_t_18;
      for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_21; __pyx_t_14+=1) {
        __pyx_v_k = __pyx_t_14;

        /* "malio_cy/op_h_aha_cy.pyx":174
 *             vh_hist[i].push_back(dv)
 *             for k in range(len(h_hist[name][j])):
 *                 vh_hist[i][j].push_back(h_hist[name][j][k])             # <<<<<<<<<<<<<<
 * 
 *     # neighbor histogram averaging
 */
        __pyx_t_27 = __Pyx_PyObject_GetItem(__pyx_v_h_hist, __pyx_v_name); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __pyx_t_23 = __Pyx_GetItemInt(__pyx_t_27, __pyx_v_j, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        __pyx_t_27 = __Pyx_GetItemInt(__pyx_t_23, __pyx_v_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        __pyx_t_42 = __pyx_PyFloat_AsDouble(__pyx_t_27); if (unlikely((__pyx_t_42 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        try {
          ((__pyx_v_vh_hist[__pyx_v_i])[__pyx_v_j]).push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 174, __pyx_L1_error)
        }
      }
    }

    /* "malio_cy/op_h_aha_cy.pyx":168
 *     ### fast access preparation
 *     vname = []
 *     for i, name in enumerate(h_hist):             # <<<<<<<<<<<<<<
 *         vh_hist.push_back(dvv)
 *         vname.append(name)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":177
 * 
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "malio_cy/op_h_aha_cy.pyx":178
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 * 
 *     for o_f, o_i, o_j, o_k in comb:
 */
  if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
    __pyx_t_27 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_27); __pyx_t_2 = 0;
    __pyx_t_16 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_27 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    __pyx_t_16 = Py_TYPE(__pyx_t_27)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 178, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_16)) {
      if (likely(PyList_CheckExact(__pyx_t_27))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_27)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_23 = PyList_GET_ITEM(__pyx_t_27, __pyx_t_2); __Pyx_INCREF(__pyx_t_23); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
        #else
        __pyx_t_23 = PySequence_ITEM(__pyx_t_27, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_27)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_23 = PyTuple_GET_ITEM(__pyx_t_27, __pyx_t_2); __Pyx_INCREF(__pyx_t_23); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
        #else
        __pyx_t_23 = PySequence_ITEM(__pyx_t_27, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        #endif
      }
    } else {
      __pyx_t_23 = __pyx_t_16(__pyx_t_27);
      if (unlikely(!__pyx_t_23)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 178, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_23);
    }
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_23); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
    __pyx_v_o_f = __pyx_t_9;
    if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
      __pyx_t_23 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_23); __pyx_t_18 = 0;
      __pyx_t_19 = NULL;
    } else {
      __pyx_t_18 = -1; __pyx_t_23 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_23);
      __pyx_t_19 = Py_TYPE(__pyx_t_23)->tp_iternext; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 178, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_19)) {
        if (likely(PyList_CheckExact(__pyx_t_23))) {
          if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_23)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_15 = PyList_GET_ITEM(__pyx_t_23, __pyx_t_18); __Pyx_INCREF(__pyx_t_15); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
          #else
          __pyx_t_15 = PySequence_ITEM(__pyx_t_23, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 178, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          #endif
        } else {
          if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_23)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_15 = PyTuple_GET_ITEM(__pyx_t_23, __pyx_t_18); __Pyx_INCREF(__pyx_t_15); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
          #else
          __pyx_t_15 = PySequence_ITEM(__pyx_t_23, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 178, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          #endif
        }
      } else {
        __pyx_t_15 = __pyx_t_19(__pyx_t_23);
        if (unlikely(!__pyx_t_15)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 178, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_15);
      }
      __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_15); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_v_o_i = __pyx_t_9;
      if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
        __pyx_t_15 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_15); __pyx_t_21 = 0;
        __pyx_t_22 = NULL;
      } else {
        __pyx_t_21 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_22 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 178, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_22)) {
          if (likely(PyList_CheckExact(__pyx_t_15))) {
            if (__pyx_t_21 >= PyList_GET_SIZE(__pyx_t_15)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_29 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_21); __Pyx_INCREF(__pyx_t_29); __pyx_t_21++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
            #else
            __pyx_t_29 = PySequence_ITEM(__pyx_t_15, __pyx_t_21); __pyx_t_21++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 178, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_29);
            #endif
          } else {
            if (__pyx_t_21 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_29 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_21); __Pyx_INCREF(__pyx_t_29); __pyx_t_21++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
            #else
            __pyx_t_29 = PySequence_ITEM(__pyx_t_15, __pyx_t_21); __pyx_t_21++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 178, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_29);
            #endif
          }
        } else {
          __pyx_t_29 = __pyx_t_22(__pyx_t_15);
          if (unlikely(!__pyx_t_29)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 178, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_29);
        }
        __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_29); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        __pyx_v_o_j = __pyx_t_9;
        if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
          __pyx_t_29 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_29); __pyx_t_24 = 0;
          __pyx_t_25 = NULL;
        } else {
          __pyx_t_24 = -1; __pyx_t_29 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 178, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          __pyx_t_25 = Py_TYPE(__pyx_t_29)->tp_iternext; if (unlikely(!__pyx_t_25)) __PYX_ERR(0, 178, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_25)) {
            if (likely(PyList_CheckExact(__pyx_t_29))) {
              if (__pyx_t_24 >= PyList_GET_SIZE(__pyx_t_29)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_28 = PyList_GET_ITEM(__pyx_t_29, __pyx_t_24); __Pyx_INCREF(__pyx_t_28); __pyx_t_24++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
              #else
              __pyx_t_28 = PySequence_ITEM(__pyx_t_29, __pyx_t_24); __pyx_t_24++; if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 178, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_28);
              #endif
            } else {
              if (__pyx_t_24 >= PyTuple_GET_SIZE(__pyx_t_29)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_28 = PyTuple_GET_ITEM(__pyx_t_29, __pyx_t_24); __Pyx_INCREF(__pyx_t_28); __pyx_t_24++; if (unlikely(0 < 0)) __PYX_ERR(0, 178, __pyx_L1_error)
              #else
              __pyx_t_28 = PySequence_ITEM(__pyx_t_29, __pyx_t_24); __pyx_t_24++; if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 178, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_28);
              #endif
            }
          } else {
            __pyx_t_28 = __pyx_t_25(__pyx_t_29);
            if (unlikely(!__pyx_t_28)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 178, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_28);
          }
          __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_28); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
          __pyx_v_o_k = __pyx_t_9;

          /* "malio_cy/op_h_aha_cy.pyx":177
 * 
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 */
          __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_28);
          __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __pyx_t_26 = PyTuple_New(4); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __Pyx_GIVEREF(__pyx_t_28);
          PyTuple_SET_ITEM(__pyx_t_26, 0, __pyx_t_28);
          __Pyx_GIVEREF(__pyx_t_17);
          PyTuple_SET_ITEM(__pyx_t_26, 1, __pyx_t_17);
          __Pyx_GIVEREF(__pyx_t_20);
          PyTuple_SET_ITEM(__pyx_t_26, 2, __pyx_t_20);
          __Pyx_GIVEREF(__pyx_t_30);
          PyTuple_SET_ITEM(__pyx_t_26, 3, __pyx_t_30);
          __pyx_t_28 = 0;
          __pyx_t_17 = 0;
          __pyx_t_20 = 0;
          __pyx_t_30 = 0;
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_26))) __PYX_ERR(0, 177, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":178
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 * 
 *     for o_f, o_i, o_j, o_k in comb:
 */
        }
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
      }
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    }
    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
  }
  __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
  __Pyx_XDECREF_SET(__pyx_v_comb, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":180
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times):
 *             ### for i_k, _ in enumerate(h_num):
 */
  __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_27 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_27); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 180, __pyx_L1_error)
    #else
    __pyx_t_27 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_27);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_27))) || (PyList_CheckExact(__pyx_t_27))) {
      PyObject* sequence = __pyx_t_27;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 180, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_23 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_15 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_29 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_26 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_23 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_15 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_29 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_26 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_23);
      __Pyx_INCREF(__pyx_t_15);
      __Pyx_INCREF(__pyx_t_29);
      __Pyx_INCREF(__pyx_t_26);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_23,&__pyx_t_15,&__pyx_t_29,&__pyx_t_26};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 180, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_23,&__pyx_t_15,&__pyx_t_29,&__pyx_t_26};
      __pyx_t_30 = PyObject_GetIter(__pyx_t_27); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 180, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_30);
      __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
      __pyx_t_31 = Py_TYPE(__pyx_t_30)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_31(__pyx_t_30); if (unlikely(!item)) goto __pyx_L73_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_31(__pyx_t_30), 4) < 0) __PYX_ERR(0, 180, __pyx_L1_error)
      __pyx_t_31 = NULL;
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      goto __pyx_L74_unpacking_done;
      __pyx_L73_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      __pyx_t_31 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 180, __pyx_L1_error)
      __pyx_L74_unpacking_done:;
    }
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_23); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 180, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_15); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 180, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_29); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 180, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
    __pyx_t_32 = __Pyx_PyInt_As_int(__pyx_t_26); if (unlikely((__pyx_t_32 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 180, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
    __pyx_v_o_f = __pyx_t_9;
    __pyx_v_o_i = __pyx_t_10;
    __pyx_v_o_j = __pyx_t_11;
    __pyx_v_o_k = __pyx_t_32;

    /* "malio_cy/op_h_aha_cy.pyx":181
 * 
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):             # <<<<<<<<<<<<<<
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 */
    __pyx_t_35 = __Pyx_PyInt_As_long(__pyx_v_b_times); if (unlikely((__pyx_t_35 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 181, __pyx_L1_error)
    __pyx_t_36 = __pyx_t_35;
    for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_36; __pyx_t_32+=1) {
      __pyx_v_b_t = __pyx_t_32;

      /* "malio_cy/op_h_aha_cy.pyx":183
 *         for b_t in range(b_times):
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
      __pyx_t_11 = __pyx_v_len_h_num;
      __pyx_t_10 = __pyx_t_11;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_10; __pyx_t_9+=1) {
        __pyx_v_i_k = __pyx_t_9;

        /* "malio_cy/op_h_aha_cy.pyx":184
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 name_old = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 vname.append(name)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_26, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_26);
        __pyx_t_29 = __Pyx_PyObject_GetAttrStr(__pyx_t_26, __pyx_n_s_naming); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
        __pyx_t_26 = __Pyx_PyInt_From_long((__pyx_v_b_t + 1)); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_26);
        __pyx_t_15 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_23 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_28 = PyList_New(7); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 184, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_28);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_28, 0, __pyx_int_0);
        __Pyx_GIVEREF(__pyx_t_26);
        PyList_SET_ITEM(__pyx_t_28, 1, __pyx_t_26);
        __Pyx_GIVEREF(__pyx_t_15);
        PyList_SET_ITEM(__pyx_t_28, 2, __pyx_t_15);
        __Pyx_GIVEREF(__pyx_t_23);
        PyList_SET_ITEM(__pyx_t_28, 3, __pyx_t_23);
        __Pyx_GIVEREF(__pyx_t_30);
        PyList_SET_ITEM(__pyx_t_28, 4, __pyx_t_30);
        __Pyx_GIVEREF(__pyx_t_20);
        PyList_SET_ITEM(__pyx_t_28, 5, __pyx_t_20);
        __Pyx_GIVEREF(__pyx_t_17);
        PyList_SET_ITEM(__pyx_t_28, 6, __pyx_t_17);
        __pyx_t_26 = 0;
        __pyx_t_15 = 0;
        __pyx_t_23 = 0;
        __pyx_t_30 = 0;
        __pyx_t_20 = 0;
        __pyx_t_17 = 0;
        __pyx_t_17 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_29))) {
          __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_29);
          if (likely(__pyx_t_17)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_29);
            __Pyx_INCREF(__pyx_t_17);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_29, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_29)) {
          PyObject *__pyx_temp[3] = {__pyx_t_17, __pyx_n_s_h, __pyx_t_28};
          __pyx_t_27 = __Pyx_PyFunction_FastCall(__pyx_t_29, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 184, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_29)) {
          PyObject *__pyx_temp[3] = {__pyx_t_17, __pyx_n_s_h, __pyx_t_28};
          __pyx_t_27 = __Pyx_PyCFunction_FastCall(__pyx_t_29, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 184, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
        } else
        #endif
        {
          __pyx_t_20 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 184, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          if (__pyx_t_17) {
            __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_17); __pyx_t_17 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_14, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_28);
          PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_14, __pyx_t_28);
          __pyx_t_28 = 0;
          __pyx_t_27 = __Pyx_PyObject_Call(__pyx_t_29, __pyx_t_20, NULL); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 184, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        }
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_27);
        __pyx_t_27 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":185
 *             for i_k in range(len_h_num):
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 vname.append(name)
 *                 name_indx = vname.index(name)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_29, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_t_29, __pyx_n_s_naming); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        __pyx_t_29 = __Pyx_PyInt_From_int(__pyx_v_b_t); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __pyx_t_28 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_28);
        __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_23 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_26 = PyList_New(7); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_26);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_26, 0, __pyx_int_0);
        __Pyx_GIVEREF(__pyx_t_29);
        PyList_SET_ITEM(__pyx_t_26, 1, __pyx_t_29);
        __Pyx_GIVEREF(__pyx_t_28);
        PyList_SET_ITEM(__pyx_t_26, 2, __pyx_t_28);
        __Pyx_GIVEREF(__pyx_t_17);
        PyList_SET_ITEM(__pyx_t_26, 3, __pyx_t_17);
        __Pyx_GIVEREF(__pyx_t_30);
        PyList_SET_ITEM(__pyx_t_26, 4, __pyx_t_30);
        __Pyx_GIVEREF(__pyx_t_23);
        PyList_SET_ITEM(__pyx_t_26, 5, __pyx_t_23);
        __Pyx_GIVEREF(__pyx_t_15);
        PyList_SET_ITEM(__pyx_t_26, 6, __pyx_t_15);
        __pyx_t_29 = 0;
        __pyx_t_28 = 0;
        __pyx_t_17 = 0;
        __pyx_t_30 = 0;
        __pyx_t_23 = 0;
        __pyx_t_15 = 0;
        __pyx_t_15 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_20))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_20);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_20, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_20)) {
          PyObject *__pyx_temp[3] = {__pyx_t_15, __pyx_n_s_h, __pyx_t_26};
          __pyx_t_27 = __Pyx_PyFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 185, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_20)) {
          PyObject *__pyx_temp[3] = {__pyx_t_15, __pyx_n_s_h, __pyx_t_26};
          __pyx_t_27 = __Pyx_PyCFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 185, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
        } else
        #endif
        {
          __pyx_t_23 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 185, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_23);
          if (__pyx_t_15) {
            __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_23, 0, __pyx_t_15); __pyx_t_15 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_23, 0+__pyx_t_14, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_26);
          PyTuple_SET_ITEM(__pyx_t_23, 1+__pyx_t_14, __pyx_t_26);
          __pyx_t_26 = 0;
          __pyx_t_27 = __Pyx_PyObject_Call(__pyx_t_20, __pyx_t_23, NULL); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 185, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        }
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_27);
        __pyx_t_27 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":186
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 vname.append(name)             # <<<<<<<<<<<<<<
 *                 name_indx = vname.index(name)
 *                 name_old_indx = vname.index(name_old)
 */
        __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_vname, __pyx_v_name); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 186, __pyx_L1_error)

        /* "malio_cy/op_h_aha_cy.pyx":187
 *                 name_old = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 vname.append(name)
 *                 name_indx = vname.index(name)             # <<<<<<<<<<<<<<
 *                 name_old_indx = vname.index(name_old)
 *                 vh_hist.push_back(dvv)
 */
        __pyx_t_27 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_index, __pyx_v_vname, __pyx_v_name); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        __pyx_v_name_indx = __pyx_t_14;

        /* "malio_cy/op_h_aha_cy.pyx":188
 *                 vname.append(name)
 *                 name_indx = vname.index(name)
 *                 name_old_indx = vname.index(name_old)             # <<<<<<<<<<<<<<
 *                 vh_hist.push_back(dvv)
 *                 ### h_hist[name] = misc_cy.v_neighb_ave(neighbor_list, h_hist[name_old])
 */
        __pyx_t_27 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_index, __pyx_v_vname, __pyx_v_name_old); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 188, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 188, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
        __pyx_v_name_old_indx = __pyx_t_14;

        /* "malio_cy/op_h_aha_cy.pyx":189
 *                 name_indx = vname.index(name)
 *                 name_old_indx = vname.index(name_old)
 *                 vh_hist.push_back(dvv)             # <<<<<<<<<<<<<<
 *                 ### h_hist[name] = misc_cy.v_neighb_ave(neighbor_list, h_hist[name_old])
 *                 ### for i_i, _ in enumerate(neighbor_list):
 */
        try {
          __pyx_v_vh_hist.push_back(__pyx_v_dvv);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 189, __pyx_L1_error)
        }

        /* "malio_cy/op_h_aha_cy.pyx":192
 *                 ### h_hist[name] = misc_cy.v_neighb_ave(neighbor_list, h_hist[name_old])
 *                 ### for i_i, _ in enumerate(neighbor_list):
 *                 for i_i in range(l_neighbor_list):             # <<<<<<<<<<<<<<
 *                     vh_hist[name_indx].push_back(dv)
 *                     l_neighbor_list_i_i = lneighbor_list[i_i]
 */
        __pyx_t_14 = __pyx_v_l_neighbor_list;
        __pyx_t_13 = __pyx_t_14;
        for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_13; __pyx_t_12+=1) {
          __pyx_v_i_i = __pyx_t_12;

          /* "malio_cy/op_h_aha_cy.pyx":193
 *                 ### for i_i, _ in enumerate(neighbor_list):
 *                 for i_i in range(l_neighbor_list):
 *                     vh_hist[name_indx].push_back(dv)             # <<<<<<<<<<<<<<
 *                     l_neighbor_list_i_i = lneighbor_list[i_i]
 *                     l_h_hist_name_old_i_i = len(h_hist[name_old][i_i])
 */
          try {
            (__pyx_v_vh_hist[__pyx_v_name_indx]).push_back(__pyx_v_dv);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 193, __pyx_L1_error)
          }

          /* "malio_cy/op_h_aha_cy.pyx":194
 *                 for i_i in range(l_neighbor_list):
 *                     vh_hist[name_indx].push_back(dv)
 *                     l_neighbor_list_i_i = lneighbor_list[i_i]             # <<<<<<<<<<<<<<
 *                     l_h_hist_name_old_i_i = len(h_hist[name_old][i_i])
 *                     inv_l_neighbor_list_i_i_1 = 1.0 / <double>(l_neighbor_list_i_i + 1)
 */
          __pyx_v_l_neighbor_list_i_i = (__pyx_v_lneighbor_list[__pyx_v_i_i]);

          /* "malio_cy/op_h_aha_cy.pyx":195
 *                     vh_hist[name_indx].push_back(dv)
 *                     l_neighbor_list_i_i = lneighbor_list[i_i]
 *                     l_h_hist_name_old_i_i = len(h_hist[name_old][i_i])             # <<<<<<<<<<<<<<
 *                     inv_l_neighbor_list_i_i_1 = 1.0 / <double>(l_neighbor_list_i_i + 1)
 *                     ### part = [0 for _ in range(len(h_hist[name_old][i_i]))]
 */
          __pyx_t_27 = __Pyx_PyObject_GetItem(__pyx_v_h_hist, __pyx_v_name_old); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 195, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __pyx_t_20 = __Pyx_GetItemInt(__pyx_t_27, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 195, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          __pyx_t_18 = PyObject_Length(__pyx_t_20); if (unlikely(__pyx_t_18 == ((Py_ssize_t)-1))) __PYX_ERR(0, 195, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_v_l_h_hist_name_old_i_i = __pyx_t_18;

          /* "malio_cy/op_h_aha_cy.pyx":196
 *                     l_neighbor_list_i_i = lneighbor_list[i_i]
 *                     l_h_hist_name_old_i_i = len(h_hist[name_old][i_i])
 *                     inv_l_neighbor_list_i_i_1 = 1.0 / <double>(l_neighbor_list_i_i + 1)             # <<<<<<<<<<<<<<
 *                     ### part = [0 for _ in range(len(h_hist[name_old][i_i]))]
 *                     for i_j in range(l_h_hist_name_old_i_i):
 */
          __pyx_v_inv_l_neighbor_list_i_i_1 = (1.0 / ((double)(__pyx_v_l_neighbor_list_i_i + 1)));

          /* "malio_cy/op_h_aha_cy.pyx":198
 *                     inv_l_neighbor_list_i_i_1 = 1.0 / <double>(l_neighbor_list_i_i + 1)
 *                     ### part = [0 for _ in range(len(h_hist[name_old][i_i]))]
 *                     for i_j in range(l_h_hist_name_old_i_i):             # <<<<<<<<<<<<<<
 *                         ### for inei in neighbor_list[i_i] + [i_i]:
 *                         pdot = 0.0
 */
          __pyx_t_33 = __pyx_v_l_h_hist_name_old_i_i;
          __pyx_t_34 = __pyx_t_33;
          for (__pyx_t_39 = 0; __pyx_t_39 < __pyx_t_34; __pyx_t_39+=1) {
            __pyx_v_i_j = __pyx_t_39;

            /* "malio_cy/op_h_aha_cy.pyx":200
 *                     for i_j in range(l_h_hist_name_old_i_i):
 *                         ### for inei in neighbor_list[i_i] + [i_i]:
 *                         pdot = 0.0             # <<<<<<<<<<<<<<
 *                         for ii_j in range(l_neighbor_list_i_i):
 *                             inei = ineighbor_list[i_i][ii_j]
 */
            __pyx_v_pdot = 0.0;

            /* "malio_cy/op_h_aha_cy.pyx":201
 *                         ### for inei in neighbor_list[i_i] + [i_i]:
 *                         pdot = 0.0
 *                         for ii_j in range(l_neighbor_list_i_i):             # <<<<<<<<<<<<<<
 *                             inei = ineighbor_list[i_i][ii_j]
 *                             pdot += vh_hist[name_old_indx][inei][i_j]
 */
            __pyx_t_40 = __pyx_v_l_neighbor_list_i_i;
            __pyx_t_43 = __pyx_t_40;
            for (__pyx_t_44 = 0; __pyx_t_44 < __pyx_t_43; __pyx_t_44+=1) {
              __pyx_v_ii_j = __pyx_t_44;

              /* "malio_cy/op_h_aha_cy.pyx":202
 *                         pdot = 0.0
 *                         for ii_j in range(l_neighbor_list_i_i):
 *                             inei = ineighbor_list[i_i][ii_j]             # <<<<<<<<<<<<<<
 *                             pdot += vh_hist[name_old_indx][inei][i_j]
 *                         pdot += vh_hist[name_old_indx][i_i][i_j]
 */
              __pyx_v_inei = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_ii_j]);

              /* "malio_cy/op_h_aha_cy.pyx":203
 *                         for ii_j in range(l_neighbor_list_i_i):
 *                             inei = ineighbor_list[i_i][ii_j]
 *                             pdot += vh_hist[name_old_indx][inei][i_j]             # <<<<<<<<<<<<<<
 *                         pdot += vh_hist[name_old_indx][i_i][i_j]
 *                         vh_hist[name_indx][i_i].push_back(pdot*inv_l_neighbor_list_i_i_1)
 */
              __pyx_v_pdot = (__pyx_v_pdot + (((__pyx_v_vh_hist[__pyx_v_name_old_indx])[__pyx_v_inei])[__pyx_v_i_j]));
            }

            /* "malio_cy/op_h_aha_cy.pyx":204
 *                             inei = ineighbor_list[i_i][ii_j]
 *                             pdot += vh_hist[name_old_indx][inei][i_j]
 *                         pdot += vh_hist[name_old_indx][i_i][i_j]             # <<<<<<<<<<<<<<
 *                         vh_hist[name_indx][i_i].push_back(pdot*inv_l_neighbor_list_i_i_1)
 * 
 */
            __pyx_v_pdot = (__pyx_v_pdot + (((__pyx_v_vh_hist[__pyx_v_name_old_indx])[__pyx_v_i_i])[__pyx_v_i_j]));

            /* "malio_cy/op_h_aha_cy.pyx":205
 *                             pdot += vh_hist[name_old_indx][inei][i_j]
 *                         pdot += vh_hist[name_old_indx][i_i][i_j]
 *                         vh_hist[name_indx][i_i].push_back(pdot*inv_l_neighbor_list_i_i_1)             # <<<<<<<<<<<<<<
 * 
 *     # FFT
 */
            try {
              ((__pyx_v_vh_hist[__pyx_v_name_indx])[__pyx_v_i_i]).push_back((__pyx_v_pdot * __pyx_v_inv_l_neighbor_list_i_i_1));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 205, __pyx_L1_error)
            }
          }
        }
      }
    }

    /* "malio_cy/op_h_aha_cy.pyx":180
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times):
 *             ### for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":208
 * 
 *     # FFT
 *     h_data_part_nu = {}             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h_data_part_nu = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":209
 *     # FFT
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 */
  __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_20 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_20); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 209, __pyx_L1_error)
    #else
    __pyx_t_20 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_20);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_20))) || (PyList_CheckExact(__pyx_t_20))) {
      PyObject* sequence = __pyx_t_20;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 209, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_27 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_23 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_26 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_15 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_27 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_23 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_26 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_15 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_27);
      __Pyx_INCREF(__pyx_t_23);
      __Pyx_INCREF(__pyx_t_26);
      __Pyx_INCREF(__pyx_t_15);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_27,&__pyx_t_23,&__pyx_t_26,&__pyx_t_15};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 209, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_27,&__pyx_t_23,&__pyx_t_26,&__pyx_t_15};
      __pyx_t_30 = PyObject_GetIter(__pyx_t_20); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 209, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_30);
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __pyx_t_31 = Py_TYPE(__pyx_t_30)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_31(__pyx_t_30); if (unlikely(!item)) goto __pyx_L87_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_31(__pyx_t_30), 4) < 0) __PYX_ERR(0, 209, __pyx_L1_error)
      __pyx_t_31 = NULL;
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      goto __pyx_L88_unpacking_done;
      __pyx_L87_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      __pyx_t_31 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 209, __pyx_L1_error)
      __pyx_L88_unpacking_done:;
    }
    __pyx_t_32 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_32 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 209, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_23); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 209, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_26); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 209, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_15); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 209, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_v_o_f = __pyx_t_32;
    __pyx_v_o_i = __pyx_t_11;
    __pyx_v_o_j = __pyx_t_10;
    __pyx_v_o_k = __pyx_t_9;

    /* "malio_cy/op_h_aha_cy.pyx":210
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 */
    __pyx_t_20 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_20);
    __pyx_t_35 = __Pyx_PyInt_As_long(__pyx_t_20); if (unlikely((__pyx_t_35 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __pyx_t_36 = __pyx_t_35;
    for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_36; __pyx_t_9+=1) {
      __pyx_v_b_t = __pyx_t_9;

      /* "malio_cy/op_h_aha_cy.pyx":212
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_indx = vname.index(name)
 */
      __pyx_t_10 = __pyx_v_len_h_num;
      __pyx_t_11 = __pyx_t_10;
      for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_11; __pyx_t_32+=1) {
        __pyx_v_i_k = __pyx_t_32;

        /* "malio_cy/op_h_aha_cy.pyx":213
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 name_indx = vname.index(name)
 *                 ### g_list = []
 */
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_26 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_naming); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_26);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_b_t); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_23 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_27);
        __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_30);
        __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_28);
        __pyx_t_29 = PyList_New(7); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_29);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_29, 0, __pyx_int_0);
        __Pyx_GIVEREF(__pyx_t_15);
        PyList_SET_ITEM(__pyx_t_29, 1, __pyx_t_15);
        __Pyx_GIVEREF(__pyx_t_23);
        PyList_SET_ITEM(__pyx_t_29, 2, __pyx_t_23);
        __Pyx_GIVEREF(__pyx_t_27);
        PyList_SET_ITEM(__pyx_t_29, 3, __pyx_t_27);
        __Pyx_GIVEREF(__pyx_t_30);
        PyList_SET_ITEM(__pyx_t_29, 4, __pyx_t_30);
        __Pyx_GIVEREF(__pyx_t_17);
        PyList_SET_ITEM(__pyx_t_29, 5, __pyx_t_17);
        __Pyx_GIVEREF(__pyx_t_28);
        PyList_SET_ITEM(__pyx_t_29, 6, __pyx_t_28);
        __pyx_t_15 = 0;
        __pyx_t_23 = 0;
        __pyx_t_27 = 0;
        __pyx_t_30 = 0;
        __pyx_t_17 = 0;
        __pyx_t_28 = 0;
        __pyx_t_28 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_26))) {
          __pyx_t_28 = PyMethod_GET_SELF(__pyx_t_26);
          if (likely(__pyx_t_28)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_26);
            __Pyx_INCREF(__pyx_t_28);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_26, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_26)) {
          PyObject *__pyx_temp[3] = {__pyx_t_28, __pyx_n_s_h, __pyx_t_29};
          __pyx_t_20 = __Pyx_PyFunction_FastCall(__pyx_t_26, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 213, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_28); __pyx_t_28 = 0;
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_26)) {
          PyObject *__pyx_temp[3] = {__pyx_t_28, __pyx_n_s_h, __pyx_t_29};
          __pyx_t_20 = __Pyx_PyCFunction_FastCall(__pyx_t_26, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 213, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_28); __pyx_t_28 = 0;
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        } else
        #endif
        {
          __pyx_t_17 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 213, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          if (__pyx_t_28) {
            __Pyx_GIVEREF(__pyx_t_28); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_28); __pyx_t_28 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_14, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_29);
          PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_14, __pyx_t_29);
          __pyx_t_29 = 0;
          __pyx_t_20 = __Pyx_PyObject_Call(__pyx_t_26, __pyx_t_17, NULL); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 213, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        }
        __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_20);
        __pyx_t_20 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":214
 *             for i_k in range(len_h_num):
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_indx = vname.index(name)             # <<<<<<<<<<<<<<
 *                 ### g_list = []
 *                 ### for i_i, _ in enumerate(coord):
 */
        __pyx_t_20 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_index, __pyx_v_vname, __pyx_v_name); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 214, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_20); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 214, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_v_name_indx = __pyx_t_14;

        /* "malio_cy/op_h_aha_cy.pyx":217
 *                 ### g_list = []
 *                 ### for i_i, _ in enumerate(coord):
 *                 for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *                     ### l_h_hist_name_i_i = len(h_hist[name][i_i])
 *                     ### g_func = fft(histogram_normalize(h_hist[name][i_i]))
 */
        __pyx_t_14 = __pyx_v_len_c;
        __pyx_t_13 = __pyx_t_14;
        for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_13; __pyx_t_12+=1) {
          __pyx_v_i_i = __pyx_t_12;

          /* "malio_cy/op_h_aha_cy.pyx":220
 *                     ### l_h_hist_name_i_i = len(h_hist[name][i_i])
 *                     ### g_func = fft(histogram_normalize(h_hist[name][i_i]))
 *                     l_h_hist_name_i_i = len(vh_hist[name_indx][i_i])             # <<<<<<<<<<<<<<
 *                     g_func = fft(histogram_normalize_cy(vh_hist[name_indx][i_i]))
 *                     g_power = np.abs(g_func)**2
 */
          __pyx_t_20 = __pyx_convert_vector_to_py_double(((__pyx_v_vh_hist[__pyx_v_name_indx])[__pyx_v_i_i])); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 220, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_18 = PyObject_Length(__pyx_t_20); if (unlikely(__pyx_t_18 == ((Py_ssize_t)-1))) __PYX_ERR(0, 220, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_v_l_h_hist_name_i_i = __pyx_t_18;

          /* "malio_cy/op_h_aha_cy.pyx":221
 *                     ### g_func = fft(histogram_normalize(h_hist[name][i_i]))
 *                     l_h_hist_name_i_i = len(vh_hist[name_indx][i_i])
 *                     g_func = fft(histogram_normalize_cy(vh_hist[name_indx][i_i]))             # <<<<<<<<<<<<<<
 *                     g_power = np.abs(g_func)**2
 *                     ### power = []
 */
          __Pyx_GetModuleGlobalName(__pyx_t_26, __pyx_n_s_fft); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 221, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __pyx_t_17 = __pyx_convert_vector_to_py_double(__pyx_f_8malio_cy_11op_h_aha_cy_histogram_normalize_cy(((__pyx_v_vh_hist[__pyx_v_name_indx])[__pyx_v_i_i]))); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 221, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_29 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_26))) {
            __pyx_t_29 = PyMethod_GET_SELF(__pyx_t_26);
            if (likely(__pyx_t_29)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_26);
              __Pyx_INCREF(__pyx_t_29);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_26, function);
            }
          }
          __pyx_t_20 = (__pyx_t_29) ? __Pyx_PyObject_Call2Args(__pyx_t_26, __pyx_t_29, __pyx_t_17) : __Pyx_PyObject_CallOneArg(__pyx_t_26, __pyx_t_17);
          __Pyx_XDECREF(__pyx_t_29); __pyx_t_29 = 0;
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 221, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          __Pyx_XDECREF_SET(__pyx_v_g_func, __pyx_t_20);
          __pyx_t_20 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":222
 *                     l_h_hist_name_i_i = len(vh_hist[name_indx][i_i])
 *                     g_func = fft(histogram_normalize_cy(vh_hist[name_indx][i_i]))
 *                     g_power = np.abs(g_func)**2             # <<<<<<<<<<<<<<
 *                     ### power = []
 *                     ### for inu in nu:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_26, __pyx_n_s_np); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 222, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_26, __pyx_n_s_abs); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 222, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          __pyx_t_26 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_17))) {
            __pyx_t_26 = PyMethod_GET_SELF(__pyx_t_17);
            if (likely(__pyx_t_26)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
              __Pyx_INCREF(__pyx_t_26);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_17, function);
            }
          }
          __pyx_t_20 = (__pyx_t_26) ? __Pyx_PyObject_Call2Args(__pyx_t_17, __pyx_t_26, __pyx_v_g_func) : __Pyx_PyObject_CallOneArg(__pyx_t_17, __pyx_v_g_func);
          __Pyx_XDECREF(__pyx_t_26); __pyx_t_26 = 0;
          if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 222, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_17 = PyNumber_Power(__pyx_t_20, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 222, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_XDECREF_SET(__pyx_v_g_power, __pyx_t_17);
          __pyx_t_17 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":230
 *                     ###        power.append(0)
 *                     ### g_list.append(power)
 *                     for i in range(l_nu):             # <<<<<<<<<<<<<<
 *                         inu = intnu[i]
 *                         if inu >= 0 and inu < l_h_hist_name_i_i:
 */
          __pyx_t_33 = __pyx_v_l_nu;
          __pyx_t_34 = __pyx_t_33;
          for (__pyx_t_39 = 0; __pyx_t_39 < __pyx_t_34; __pyx_t_39+=1) {
            __pyx_v_i = __pyx_t_39;

            /* "malio_cy/op_h_aha_cy.pyx":231
 *                     ### g_list.append(power)
 *                     for i in range(l_nu):
 *                         inu = intnu[i]             # <<<<<<<<<<<<<<
 *                         if inu >= 0 and inu < l_h_hist_name_i_i:
 *                             dg_list[i_i][i] = g_power[inu]
 */
            __pyx_v_inu = (__pyx_v_intnu[__pyx_v_i]);

            /* "malio_cy/op_h_aha_cy.pyx":232
 *                     for i in range(l_nu):
 *                         inu = intnu[i]
 *                         if inu >= 0 and inu < l_h_hist_name_i_i:             # <<<<<<<<<<<<<<
 *                             dg_list[i_i][i] = g_power[inu]
 *                         else:
 */
            __pyx_t_45 = ((__pyx_v_inu >= 0) != 0);
            if (__pyx_t_45) {
            } else {
              __pyx_t_38 = __pyx_t_45;
              goto __pyx_L98_bool_binop_done;
            }
            __pyx_t_45 = ((__pyx_v_inu < __pyx_v_l_h_hist_name_i_i) != 0);
            __pyx_t_38 = __pyx_t_45;
            __pyx_L98_bool_binop_done:;
            if (__pyx_t_38) {

              /* "malio_cy/op_h_aha_cy.pyx":233
 *                         inu = intnu[i]
 *                         if inu >= 0 and inu < l_h_hist_name_i_i:
 *                             dg_list[i_i][i] = g_power[inu]             # <<<<<<<<<<<<<<
 *                         else:
 *                             dg_list[i_i][i] = 0.0
 */
              __pyx_t_17 = __Pyx_GetItemInt(__pyx_v_g_power, __pyx_v_inu, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 233, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_17);
              __pyx_t_42 = __pyx_PyFloat_AsDouble(__pyx_t_17); if (unlikely((__pyx_t_42 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 233, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
              ((__pyx_v_dg_list[__pyx_v_i_i])[__pyx_v_i]) = __pyx_t_42;

              /* "malio_cy/op_h_aha_cy.pyx":232
 *                     for i in range(l_nu):
 *                         inu = intnu[i]
 *                         if inu >= 0 and inu < l_h_hist_name_i_i:             # <<<<<<<<<<<<<<
 *                             dg_list[i_i][i] = g_power[inu]
 *                         else:
 */
              goto __pyx_L97;
            }

            /* "malio_cy/op_h_aha_cy.pyx":235
 *                             dg_list[i_i][i] = g_power[inu]
 *                         else:
 *                             dg_list[i_i][i] = 0.0             # <<<<<<<<<<<<<<
 *                 ### h_data_part_nu[name] = g_list
 *                 h_data_part_nu[name] = dg_list
 */
            /*else*/ {
              ((__pyx_v_dg_list[__pyx_v_i_i])[__pyx_v_i]) = 0.0;
            }
            __pyx_L97:;
          }
        }

        /* "malio_cy/op_h_aha_cy.pyx":237
 *                             dg_list[i_i][i] = 0.0
 *                 ### h_data_part_nu[name] = g_list
 *                 h_data_part_nu[name] = dg_list             # <<<<<<<<<<<<<<
 * 
 *     op_value = {}
 */
        __pyx_t_17 = __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(__pyx_v_dg_list); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 237, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        if (unlikely(PyDict_SetItem(__pyx_v_h_data_part_nu, __pyx_v_name, __pyx_t_17) < 0)) __PYX_ERR(0, 237, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      }
    }

    /* "malio_cy/op_h_aha_cy.pyx":209
 *     # FFT
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":239
 *                 h_data_part_nu[name] = dg_list
 * 
 *     op_value = {}             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_op_value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":240
 * 
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 */
  __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_17 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_17); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 240, __pyx_L1_error)
    #else
    __pyx_t_17 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_17))) || (PyList_CheckExact(__pyx_t_17))) {
      PyObject* sequence = __pyx_t_17;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 240, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_20 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_26 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_29 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_28 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_20 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_26 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_29 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_28 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_20);
      __Pyx_INCREF(__pyx_t_26);
      __Pyx_INCREF(__pyx_t_29);
      __Pyx_INCREF(__pyx_t_28);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_20,&__pyx_t_26,&__pyx_t_29,&__pyx_t_28};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 240, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_20,&__pyx_t_26,&__pyx_t_29,&__pyx_t_28};
      __pyx_t_30 = PyObject_GetIter(__pyx_t_17); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 240, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_30);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_31 = Py_TYPE(__pyx_t_30)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_31(__pyx_t_30); if (unlikely(!item)) goto __pyx_L102_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_31(__pyx_t_30), 4) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
      __pyx_t_31 = NULL;
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      goto __pyx_L103_unpacking_done;
      __pyx_L102_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
      __pyx_t_31 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 240, __pyx_L1_error)
      __pyx_L103_unpacking_done:;
    }
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_20); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_26); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_29); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
    __pyx_t_32 = __Pyx_PyInt_As_int(__pyx_t_28); if (unlikely((__pyx_t_32 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
    __pyx_v_o_f = __pyx_t_9;
    __pyx_v_o_i = __pyx_t_10;
    __pyx_v_o_j = __pyx_t_11;
    __pyx_v_o_k = __pyx_t_32;

    /* "malio_cy/op_h_aha_cy.pyx":241
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 */
    __pyx_t_17 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    __pyx_t_35 = __Pyx_PyInt_As_long(__pyx_t_17); if (unlikely((__pyx_t_35 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    __pyx_t_36 = __pyx_t_35;
    for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_36; __pyx_t_32+=1) {
      __pyx_v_b_t = __pyx_t_32;

      /* "malio_cy/op_h_aha_cy.pyx":243
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]
 */
      __pyx_t_11 = __pyx_v_len_h_num;
      __pyx_t_10 = __pyx_t_11;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_10; __pyx_t_9+=1) {
        __pyx_v_i_k = __pyx_t_9;

        /* "malio_cy/op_h_aha_cy.pyx":244
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_17 = __pyx_int_0;
        if (likely(PyList_CheckExact(__pyx_v_nu)) || PyTuple_CheckExact(__pyx_v_nu)) {
          __pyx_t_28 = __pyx_v_nu; __Pyx_INCREF(__pyx_t_28); __pyx_t_18 = 0;
          __pyx_t_16 = NULL;
        } else {
          __pyx_t_18 = -1; __pyx_t_28 = PyObject_GetIter(__pyx_v_nu); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 244, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_28);
          __pyx_t_16 = Py_TYPE(__pyx_t_28)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 244, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_16)) {
            if (likely(PyList_CheckExact(__pyx_t_28))) {
              if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_28)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_29 = PyList_GET_ITEM(__pyx_t_28, __pyx_t_18); __Pyx_INCREF(__pyx_t_29); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 244, __pyx_L1_error)
              #else
              __pyx_t_29 = PySequence_ITEM(__pyx_t_28, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 244, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_29);
              #endif
            } else {
              if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_28)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_29 = PyTuple_GET_ITEM(__pyx_t_28, __pyx_t_18); __Pyx_INCREF(__pyx_t_29); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 244, __pyx_L1_error)
              #else
              __pyx_t_29 = PySequence_ITEM(__pyx_t_28, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 244, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_29);
              #endif
            }
          } else {
            __pyx_t_29 = __pyx_t_16(__pyx_t_28);
            if (unlikely(!__pyx_t_29)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 244, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_29);
          }
          __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_29);
          __pyx_t_29 = 0;
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_XDECREF_SET(__pyx_v_i_l, __pyx_t_17);
          __pyx_t_29 = __Pyx_PyInt_AddObjC(__pyx_t_17, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 244, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          __Pyx_DECREF(__pyx_t_17);
          __pyx_t_17 = __pyx_t_29;
          __pyx_t_29 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":245
 *             for i_k in range(len_h_num):
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]             # <<<<<<<<<<<<<<
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)
 */
          __pyx_t_29 = __Pyx_PyObject_GetItem(__pyx_v_nu, __pyx_v_i_l); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 245, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_29); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 245, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
          __pyx_v_inu = __pyx_t_14;

          /* "malio_cy/op_h_aha_cy.pyx":246
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                     name_h = name + '_nu=' + str(inu)
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l] for i_i in range(len_c)]
 */
          __Pyx_GetModuleGlobalName(__pyx_t_26, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_t_26, __pyx_n_s_naming); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          __pyx_t_26 = __Pyx_PyInt_From_int(__pyx_v_b_t); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __pyx_t_30 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __pyx_t_23 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_23);
          __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_46 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_46)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_46);
          __pyx_t_47 = PyList_New(7); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_47);
          __Pyx_INCREF(__pyx_int_0);
          __Pyx_GIVEREF(__pyx_int_0);
          PyList_SET_ITEM(__pyx_t_47, 0, __pyx_int_0);
          __Pyx_GIVEREF(__pyx_t_26);
          PyList_SET_ITEM(__pyx_t_47, 1, __pyx_t_26);
          __Pyx_GIVEREF(__pyx_t_30);
          PyList_SET_ITEM(__pyx_t_47, 2, __pyx_t_30);
          __Pyx_GIVEREF(__pyx_t_27);
          PyList_SET_ITEM(__pyx_t_47, 3, __pyx_t_27);
          __Pyx_GIVEREF(__pyx_t_23);
          PyList_SET_ITEM(__pyx_t_47, 4, __pyx_t_23);
          __Pyx_GIVEREF(__pyx_t_15);
          PyList_SET_ITEM(__pyx_t_47, 5, __pyx_t_15);
          __Pyx_GIVEREF(__pyx_t_46);
          PyList_SET_ITEM(__pyx_t_47, 6, __pyx_t_46);
          __pyx_t_26 = 0;
          __pyx_t_30 = 0;
          __pyx_t_27 = 0;
          __pyx_t_23 = 0;
          __pyx_t_15 = 0;
          __pyx_t_46 = 0;
          __pyx_t_46 = NULL;
          __pyx_t_14 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_20))) {
            __pyx_t_46 = PyMethod_GET_SELF(__pyx_t_20);
            if (likely(__pyx_t_46)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
              __Pyx_INCREF(__pyx_t_46);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_20, function);
              __pyx_t_14 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_20)) {
            PyObject *__pyx_temp[3] = {__pyx_t_46, __pyx_n_s_h, __pyx_t_47};
            __pyx_t_29 = __Pyx_PyFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 246, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_46); __pyx_t_46 = 0;
            __Pyx_GOTREF(__pyx_t_29);
            __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_20)) {
            PyObject *__pyx_temp[3] = {__pyx_t_46, __pyx_n_s_h, __pyx_t_47};
            __pyx_t_29 = __Pyx_PyCFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 246, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_46); __pyx_t_46 = 0;
            __Pyx_GOTREF(__pyx_t_29);
            __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
          } else
          #endif
          {
            __pyx_t_15 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 246, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            if (__pyx_t_46) {
              __Pyx_GIVEREF(__pyx_t_46); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_46); __pyx_t_46 = NULL;
            }
            __Pyx_INCREF(__pyx_n_s_h);
            __Pyx_GIVEREF(__pyx_n_s_h);
            PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_14, __pyx_n_s_h);
            __Pyx_GIVEREF(__pyx_t_47);
            PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_14, __pyx_t_47);
            __pyx_t_47 = 0;
            __pyx_t_29 = __Pyx_PyObject_Call(__pyx_t_20, __pyx_t_15, NULL); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 246, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_29);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          }
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_29);
          __pyx_t_29 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":247
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l] for i_i in range(len_c)]
 * 
 */
          __pyx_t_29 = PyNumber_Add(__pyx_v_name, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 247, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_inu); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 247, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_15 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_20); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 247, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_t_20 = PyNumber_Add(__pyx_t_29, __pyx_t_15); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 247, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF_SET(__pyx_v_name_h, __pyx_t_20);
          __pyx_t_20 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":248
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l] for i_i in range(len_c)]             # <<<<<<<<<<<<<<
 * 
 *     j = 0
 */
          __pyx_t_20 = PyList_New(0); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 248, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_14 = __pyx_v_len_c;
          __pyx_t_13 = __pyx_t_14;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_13; __pyx_t_12+=1) {
            __pyx_v_i_i = __pyx_t_12;
            __pyx_t_15 = __Pyx_PyDict_GetItem(__pyx_v_h_data_part_nu, __pyx_v_name); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 248, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __pyx_t_29 = __Pyx_GetItemInt(__pyx_t_15, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 248, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_29);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = __Pyx_PyObject_GetItem(__pyx_t_29, __pyx_v_i_l); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 248, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
            if (unlikely(__Pyx_ListComp_Append(__pyx_t_20, (PyObject*)__pyx_t_15))) __PYX_ERR(0, 248, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          }
          if (unlikely(PyDict_SetItem(__pyx_v_op_value, __pyx_v_name_h, __pyx_t_20) < 0)) __PYX_ERR(0, 248, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":244
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
        }
        __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      }
    }

    /* "malio_cy/op_h_aha_cy.pyx":240
 * 
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":250
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l] for i_i in range(len_c)]
 * 
 *     j = 0             # <<<<<<<<<<<<<<
 *     for b_t in range(b_times + 1):
 *         for i_k in range(len_h_num):
 */
  __pyx_v_j = 0;

  /* "malio_cy/op_h_aha_cy.pyx":251
 * 
 *     j = 0
 *     for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *         for i_k in range(len_h_num):
 *             for o_f, o_i, o_j, dist_layers in comb:
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_35 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_35 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_36 = __pyx_t_35;
  for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_36; __pyx_t_32+=1) {
    __pyx_v_b_t = __pyx_t_32;

    /* "malio_cy/op_h_aha_cy.pyx":252
 *     j = 0
 *     for b_t in range(b_times + 1):
 *         for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *             for o_f, o_i, o_j, dist_layers in comb:
 *                 for i_l, _ in enumerate(nu):
 */
    __pyx_t_11 = __pyx_v_len_h_num;
    __pyx_t_10 = __pyx_t_11;
    for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_10; __pyx_t_9+=1) {
      __pyx_v_i_k = __pyx_t_9;

      /* "malio_cy/op_h_aha_cy.pyx":253
 *     for b_t in range(b_times + 1):
 *         for i_k in range(len_h_num):
 *             for o_f, o_i, o_j, dist_layers in comb:             # <<<<<<<<<<<<<<
 *                 for i_l, _ in enumerate(nu):
 *                     dval.push_back(dv)
 */
      __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
      for (;;) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_17 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_17); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 253, __pyx_L1_error)
        #else
        __pyx_t_17 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 253, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        #endif
        if ((likely(PyTuple_CheckExact(__pyx_t_17))) || (PyList_CheckExact(__pyx_t_17))) {
          PyObject* sequence = __pyx_t_17;
          Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
          if (unlikely(size != 4)) {
            if (size > 4) __Pyx_RaiseTooManyValuesError(4);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            __PYX_ERR(0, 253, __pyx_L1_error)
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_28 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_20 = PyTuple_GET_ITEM(sequence, 1); 
            __pyx_t_15 = PyTuple_GET_ITEM(sequence, 2); 
            __pyx_t_29 = PyTuple_GET_ITEM(sequence, 3); 
          } else {
            __pyx_t_28 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_20 = PyList_GET_ITEM(sequence, 1); 
            __pyx_t_15 = PyList_GET_ITEM(sequence, 2); 
            __pyx_t_29 = PyList_GET_ITEM(sequence, 3); 
          }
          __Pyx_INCREF(__pyx_t_28);
          __Pyx_INCREF(__pyx_t_20);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_29);
          #else
          {
            Py_ssize_t i;
            PyObject** temps[4] = {&__pyx_t_28,&__pyx_t_20,&__pyx_t_15,&__pyx_t_29};
            for (i=0; i < 4; i++) {
              PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 253, __pyx_L1_error)
              __Pyx_GOTREF(item);
              *(temps[i]) = item;
            }
          }
          #endif
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        } else {
          Py_ssize_t index = -1;
          PyObject** temps[4] = {&__pyx_t_28,&__pyx_t_20,&__pyx_t_15,&__pyx_t_29};
          __pyx_t_47 = PyObject_GetIter(__pyx_t_17); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 253, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_47);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_31 = Py_TYPE(__pyx_t_47)->tp_iternext;
          for (index=0; index < 4; index++) {
            PyObject* item = __pyx_t_31(__pyx_t_47); if (unlikely(!item)) goto __pyx_L118_unpacking_failed;
            __Pyx_GOTREF(item);
            *(temps[index]) = item;
          }
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_31(__pyx_t_47), 4) < 0) __PYX_ERR(0, 253, __pyx_L1_error)
          __pyx_t_31 = NULL;
          __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
          goto __pyx_L119_unpacking_done;
          __pyx_L118_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
          __pyx_t_31 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          __PYX_ERR(0, 253, __pyx_L1_error)
          __pyx_L119_unpacking_done:;
        }
        __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_28); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 253, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
        __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_20); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 253, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_15); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 253, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_v_o_f = __pyx_t_14;
        __pyx_v_o_i = __pyx_t_13;
        __pyx_v_o_j = __pyx_t_12;
        __Pyx_XDECREF_SET(__pyx_v_dist_layers, __pyx_t_29);
        __pyx_t_29 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":254
 *         for i_k in range(len_h_num):
 *             for o_f, o_i, o_j, dist_layers in comb:
 *                 for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                     dval.push_back(dv)
 *                     inu = nu[i_l] ### ohino
 */
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_17 = __pyx_int_0;
        if (likely(PyList_CheckExact(__pyx_v_nu)) || PyTuple_CheckExact(__pyx_v_nu)) {
          __pyx_t_29 = __pyx_v_nu; __Pyx_INCREF(__pyx_t_29); __pyx_t_18 = 0;
          __pyx_t_16 = NULL;
        } else {
          __pyx_t_18 = -1; __pyx_t_29 = PyObject_GetIter(__pyx_v_nu); if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 254, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          __pyx_t_16 = Py_TYPE(__pyx_t_29)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 254, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_16)) {
            if (likely(PyList_CheckExact(__pyx_t_29))) {
              if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_29)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_15 = PyList_GET_ITEM(__pyx_t_29, __pyx_t_18); __Pyx_INCREF(__pyx_t_15); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 254, __pyx_L1_error)
              #else
              __pyx_t_15 = PySequence_ITEM(__pyx_t_29, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 254, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              #endif
            } else {
              if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_29)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_15 = PyTuple_GET_ITEM(__pyx_t_29, __pyx_t_18); __Pyx_INCREF(__pyx_t_15); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 254, __pyx_L1_error)
              #else
              __pyx_t_15 = PySequence_ITEM(__pyx_t_29, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 254, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              #endif
            }
          } else {
            __pyx_t_15 = __pyx_t_16(__pyx_t_29);
            if (unlikely(!__pyx_t_15)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 254, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_15);
          }
          __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_15);
          __pyx_t_15 = 0;
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_XDECREF_SET(__pyx_v_i_l, __pyx_t_17);
          __pyx_t_15 = __Pyx_PyInt_AddObjC(__pyx_t_17, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 254, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_17);
          __pyx_t_17 = __pyx_t_15;
          __pyx_t_15 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":255
 *             for o_f, o_i, o_j, dist_layers in comb:
 *                 for i_l, _ in enumerate(nu):
 *                     dval.push_back(dv)             # <<<<<<<<<<<<<<
 *                     inu = nu[i_l] ### ohino
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
          try {
            __pyx_v_dval.push_back(__pyx_v_dv);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 255, __pyx_L1_error)
          }

          /* "malio_cy/op_h_aha_cy.pyx":256
 *                 for i_l, _ in enumerate(nu):
 *                     dval.push_back(dv)
 *                     inu = nu[i_l] ### ohino             # <<<<<<<<<<<<<<
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)
 */
          __pyx_t_15 = __Pyx_PyObject_GetItem(__pyx_v_nu, __pyx_v_i_l); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 256, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_15); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 256, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_v_inu = __pyx_t_12;

          /* "malio_cy/op_h_aha_cy.pyx":257
 *                     dval.push_back(dv)
 *                     inu = nu[i_l] ### ohino
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                     name_h = name + '_nu=' + str(inu)
 *                     for i_i in range(len_c):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_28 = __Pyx_PyObject_GetAttrStr(__pyx_t_20, __pyx_n_s_naming); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_28);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_b_t); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_47 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_47);
          __pyx_t_46 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_46)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_46);
          __pyx_t_23 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_23);
          __pyx_t_27 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_o_k); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_30);
          __pyx_t_26 = PyList_New(7); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 257, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_26);
          __Pyx_INCREF(__pyx_int_0);
          __Pyx_GIVEREF(__pyx_int_0);
          PyList_SET_ITEM(__pyx_t_26, 0, __pyx_int_0);
          __Pyx_GIVEREF(__pyx_t_20);
          PyList_SET_ITEM(__pyx_t_26, 1, __pyx_t_20);
          __Pyx_GIVEREF(__pyx_t_47);
          PyList_SET_ITEM(__pyx_t_26, 2, __pyx_t_47);
          __Pyx_GIVEREF(__pyx_t_46);
          PyList_SET_ITEM(__pyx_t_26, 3, __pyx_t_46);
          __Pyx_GIVEREF(__pyx_t_23);
          PyList_SET_ITEM(__pyx_t_26, 4, __pyx_t_23);
          __Pyx_GIVEREF(__pyx_t_27);
          PyList_SET_ITEM(__pyx_t_26, 5, __pyx_t_27);
          __Pyx_GIVEREF(__pyx_t_30);
          PyList_SET_ITEM(__pyx_t_26, 6, __pyx_t_30);
          __pyx_t_20 = 0;
          __pyx_t_47 = 0;
          __pyx_t_46 = 0;
          __pyx_t_23 = 0;
          __pyx_t_27 = 0;
          __pyx_t_30 = 0;
          __pyx_t_30 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_28))) {
            __pyx_t_30 = PyMethod_GET_SELF(__pyx_t_28);
            if (likely(__pyx_t_30)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_28);
              __Pyx_INCREF(__pyx_t_30);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_28, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_28)) {
            PyObject *__pyx_temp[3] = {__pyx_t_30, __pyx_n_s_h, __pyx_t_26};
            __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_28, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 257, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_30); __pyx_t_30 = 0;
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_28)) {
            PyObject *__pyx_temp[3] = {__pyx_t_30, __pyx_n_s_h, __pyx_t_26};
            __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_28, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 257, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_30); __pyx_t_30 = 0;
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          } else
          #endif
          {
            __pyx_t_27 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 257, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            if (__pyx_t_30) {
              __Pyx_GIVEREF(__pyx_t_30); PyTuple_SET_ITEM(__pyx_t_27, 0, __pyx_t_30); __pyx_t_30 = NULL;
            }
            __Pyx_INCREF(__pyx_n_s_h);
            __Pyx_GIVEREF(__pyx_n_s_h);
            PyTuple_SET_ITEM(__pyx_t_27, 0+__pyx_t_12, __pyx_n_s_h);
            __Pyx_GIVEREF(__pyx_t_26);
            PyTuple_SET_ITEM(__pyx_t_27, 1+__pyx_t_12, __pyx_t_26);
            __pyx_t_26 = 0;
            __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_28, __pyx_t_27, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 257, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          }
          __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
          __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_15);
          __pyx_t_15 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":258
 *                     inu = nu[i_l] ### ohino
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 *                     for i_i in range(len_c):
 *                         dval[j].push_back(op_value[name_h][i_i])
 */
          __pyx_t_15 = PyNumber_Add(__pyx_v_name, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_28 = __Pyx_PyInt_From_int(__pyx_v_inu); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_28);
          __pyx_t_27 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_28); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_27);
          __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
          __pyx_t_28 = PyNumber_Add(__pyx_t_15, __pyx_t_27); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_28);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          __Pyx_XDECREF_SET(__pyx_v_name_h, __pyx_t_28);
          __pyx_t_28 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":259
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)
 *                     for i_i in range(len_c):             # <<<<<<<<<<<<<<
 *                         dval[j].push_back(op_value[name_h][i_i])
 *                     j += 1
 */
          __pyx_t_12 = __pyx_v_len_c;
          __pyx_t_13 = __pyx_t_12;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i_i = __pyx_t_14;

            /* "malio_cy/op_h_aha_cy.pyx":260
 *                     name_h = name + '_nu=' + str(inu)
 *                     for i_i in range(len_c):
 *                         dval[j].push_back(op_value[name_h][i_i])             # <<<<<<<<<<<<<<
 *                     j += 1
 * 
 */
            __pyx_t_28 = __Pyx_PyDict_GetItem(__pyx_v_op_value, __pyx_v_name_h); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_28);
            __pyx_t_27 = __Pyx_GetItemInt(__pyx_t_28, __pyx_v_i_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
            __pyx_t_42 = __pyx_PyFloat_AsDouble(__pyx_t_27); if (unlikely((__pyx_t_42 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
            try {
              (__pyx_v_dval[__pyx_v_j]).push_back(__pyx_t_42);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 260, __pyx_L1_error)
            }
          }

          /* "malio_cy/op_h_aha_cy.pyx":261
 *                     for i_i in range(len_c):
 *                         dval[j].push_back(op_value[name_h][i_i])
 *                     j += 1             # <<<<<<<<<<<<<<
 * 
 *     for a_t in range(a_times):
 */
          __pyx_v_j = (__pyx_v_j + 1);

          /* "malio_cy/op_h_aha_cy.pyx":254
 *         for i_k in range(len_h_num):
 *             for o_f, o_i, o_j, dist_layers in comb:
 *                 for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                     dval.push_back(dv)
 *                     inu = nu[i_l] ### ohino
 */
        }
        __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":253
 *     for b_t in range(b_times + 1):
 *         for i_k in range(len_h_num):
 *             for o_f, o_i, o_j, dist_layers in comb:             # <<<<<<<<<<<<<<
 *                 for i_l, _ in enumerate(nu):
 *                     dval.push_back(dv)
 */
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "malio_cy/op_h_aha_cy.pyx":263
 *                     j += 1
 * 
 *     for a_t in range(a_times):             # <<<<<<<<<<<<<<
 *         j = 0
 *         for b_t in range(b_times + 1):
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_a_times); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_17 = __pyx_t_1; __Pyx_INCREF(__pyx_t_17); __pyx_t_2 = 0;
    __pyx_t_16 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_17 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    __pyx_t_16 = Py_TYPE(__pyx_t_17)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 263, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_16)) {
      if (likely(PyList_CheckExact(__pyx_t_17))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_17)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_17, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 263, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_17, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_17)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_17, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 263, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_17, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_16(__pyx_t_17);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 263, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_a_t, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":264
 * 
 *     for a_t in range(a_times):
 *         j = 0             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 */
    __pyx_v_j = 0;

    /* "malio_cy/op_h_aha_cy.pyx":265
 *     for a_t in range(a_times):
 *         j = 0
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_35 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_35 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 265, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_36 = __pyx_t_35;
    for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_36; __pyx_t_32+=1) {
      __pyx_v_b_t = __pyx_t_32;

      /* "malio_cy/op_h_aha_cy.pyx":267
 *         for b_t in range(b_times + 1):
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):             # <<<<<<<<<<<<<<
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):
 */
      __pyx_t_11 = __pyx_v_len_h_num;
      __pyx_t_10 = __pyx_t_11;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_10; __pyx_t_9+=1) {
        __pyx_v_i_k = __pyx_t_9;

        /* "malio_cy/op_h_aha_cy.pyx":268
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:             # <<<<<<<<<<<<<<
 *                     for i_l, _ in enumerate(nu):
 *                         ### inu = nu[i_l] ### ohino
 */
        __pyx_t_1 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_1); __pyx_t_18 = 0;
        for (;;) {
          if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_29 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_18); __Pyx_INCREF(__pyx_t_29); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 268, __pyx_L1_error)
          #else
          __pyx_t_29 = PySequence_ITEM(__pyx_t_1, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_29)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_29);
          #endif
          if ((likely(PyTuple_CheckExact(__pyx_t_29))) || (PyList_CheckExact(__pyx_t_29))) {
            PyObject* sequence = __pyx_t_29;
            Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
            if (unlikely(size != 4)) {
              if (size > 4) __Pyx_RaiseTooManyValuesError(4);
              else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
              __PYX_ERR(0, 268, __pyx_L1_error)
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            if (likely(PyTuple_CheckExact(sequence))) {
              __pyx_t_27 = PyTuple_GET_ITEM(sequence, 0); 
              __pyx_t_28 = PyTuple_GET_ITEM(sequence, 1); 
              __pyx_t_15 = PyTuple_GET_ITEM(sequence, 2); 
              __pyx_t_26 = PyTuple_GET_ITEM(sequence, 3); 
            } else {
              __pyx_t_27 = PyList_GET_ITEM(sequence, 0); 
              __pyx_t_28 = PyList_GET_ITEM(sequence, 1); 
              __pyx_t_15 = PyList_GET_ITEM(sequence, 2); 
              __pyx_t_26 = PyList_GET_ITEM(sequence, 3); 
            }
            __Pyx_INCREF(__pyx_t_27);
            __Pyx_INCREF(__pyx_t_28);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_26);
            #else
            {
              Py_ssize_t i;
              PyObject** temps[4] = {&__pyx_t_27,&__pyx_t_28,&__pyx_t_15,&__pyx_t_26};
              for (i=0; i < 4; i++) {
                PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 268, __pyx_L1_error)
                __Pyx_GOTREF(item);
                *(temps[i]) = item;
              }
            }
            #endif
            __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
          } else {
            Py_ssize_t index = -1;
            PyObject** temps[4] = {&__pyx_t_27,&__pyx_t_28,&__pyx_t_15,&__pyx_t_26};
            __pyx_t_30 = PyObject_GetIter(__pyx_t_29); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 268, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
            __pyx_t_31 = Py_TYPE(__pyx_t_30)->tp_iternext;
            for (index=0; index < 4; index++) {
              PyObject* item = __pyx_t_31(__pyx_t_30); if (unlikely(!item)) goto __pyx_L132_unpacking_failed;
              __Pyx_GOTREF(item);
              *(temps[index]) = item;
            }
            if (__Pyx_IternextUnpackEndCheck(__pyx_t_31(__pyx_t_30), 4) < 0) __PYX_ERR(0, 268, __pyx_L1_error)
            __pyx_t_31 = NULL;
            __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
            goto __pyx_L133_unpacking_done;
            __pyx_L132_unpacking_failed:;
            __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
            __pyx_t_31 = NULL;
            if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
            __PYX_ERR(0, 268, __pyx_L1_error)
            __pyx_L133_unpacking_done:;
          }
          __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_27); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
          __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_28); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
          __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_15); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_v_o_f = __pyx_t_12;
          __pyx_v_o_i = __pyx_t_13;
          __pyx_v_o_j = __pyx_t_14;
          __Pyx_XDECREF_SET(__pyx_v_dist_layers, __pyx_t_26);
          __pyx_t_26 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":269
 *             for i_k in range(len_h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                         ### inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 */
          __Pyx_INCREF(__pyx_int_0);
          __pyx_t_29 = __pyx_int_0;
          if (likely(PyList_CheckExact(__pyx_v_nu)) || PyTuple_CheckExact(__pyx_v_nu)) {
            __pyx_t_26 = __pyx_v_nu; __Pyx_INCREF(__pyx_t_26); __pyx_t_21 = 0;
            __pyx_t_19 = NULL;
          } else {
            __pyx_t_21 = -1; __pyx_t_26 = PyObject_GetIter(__pyx_v_nu); if (unlikely(!__pyx_t_26)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_26);
            __pyx_t_19 = Py_TYPE(__pyx_t_26)->tp_iternext; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 269, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_19)) {
              if (likely(PyList_CheckExact(__pyx_t_26))) {
                if (__pyx_t_21 >= PyList_GET_SIZE(__pyx_t_26)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_15 = PyList_GET_ITEM(__pyx_t_26, __pyx_t_21); __Pyx_INCREF(__pyx_t_15); __pyx_t_21++; if (unlikely(0 < 0)) __PYX_ERR(0, 269, __pyx_L1_error)
                #else
                __pyx_t_15 = PySequence_ITEM(__pyx_t_26, __pyx_t_21); __pyx_t_21++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 269, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_15);
                #endif
              } else {
                if (__pyx_t_21 >= PyTuple_GET_SIZE(__pyx_t_26)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_15 = PyTuple_GET_ITEM(__pyx_t_26, __pyx_t_21); __Pyx_INCREF(__pyx_t_15); __pyx_t_21++; if (unlikely(0 < 0)) __PYX_ERR(0, 269, __pyx_L1_error)
                #else
                __pyx_t_15 = PySequence_ITEM(__pyx_t_26, __pyx_t_21); __pyx_t_21++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 269, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_15);
                #endif
              }
            } else {
              __pyx_t_15 = __pyx_t_19(__pyx_t_26);
              if (unlikely(!__pyx_t_15)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 269, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_15);
            }
            __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_15);
            __pyx_t_15 = 0;
            __Pyx_INCREF(__pyx_t_29);
            __Pyx_XDECREF_SET(__pyx_v_i_l, __pyx_t_29);
            __pyx_t_15 = __Pyx_PyInt_AddObjC(__pyx_t_29, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_29);
            __pyx_t_29 = __pyx_t_15;
            __pyx_t_15 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":271
 *                     for i_l, _ in enumerate(nu):
 *                         ### inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         ### op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 */
            __Pyx_GetModuleGlobalName(__pyx_t_28, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_28);
            __pyx_t_27 = __Pyx_PyObject_GetAttrStr(__pyx_t_28, __pyx_n_s_naming); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __Pyx_DECREF(__pyx_t_28); __pyx_t_28 = 0;
            __pyx_t_28 = __Pyx_PyInt_AddObjC(__pyx_v_a_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_28)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_28);
            __pyx_t_30 = __Pyx_PyInt_From_int(__pyx_v_b_t); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            __pyx_t_23 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_23);
            __pyx_t_46 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_46)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_46);
            __pyx_t_47 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_47);
            __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            __pyx_t_48 = PyList_New(7); if (unlikely(!__pyx_t_48)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_48);
            __Pyx_GIVEREF(__pyx_t_28);
            PyList_SET_ITEM(__pyx_t_48, 0, __pyx_t_28);
            __Pyx_GIVEREF(__pyx_t_30);
            PyList_SET_ITEM(__pyx_t_48, 1, __pyx_t_30);
            __Pyx_GIVEREF(__pyx_t_23);
            PyList_SET_ITEM(__pyx_t_48, 2, __pyx_t_23);
            __Pyx_GIVEREF(__pyx_t_46);
            PyList_SET_ITEM(__pyx_t_48, 3, __pyx_t_46);
            __Pyx_GIVEREF(__pyx_t_47);
            PyList_SET_ITEM(__pyx_t_48, 4, __pyx_t_47);
            __Pyx_GIVEREF(__pyx_t_20);
            PyList_SET_ITEM(__pyx_t_48, 5, __pyx_t_20);
            __Pyx_INCREF(__pyx_v_dist_layers);
            __Pyx_GIVEREF(__pyx_v_dist_layers);
            PyList_SET_ITEM(__pyx_t_48, 6, __pyx_v_dist_layers);
            __pyx_t_28 = 0;
            __pyx_t_30 = 0;
            __pyx_t_23 = 0;
            __pyx_t_46 = 0;
            __pyx_t_47 = 0;
            __pyx_t_20 = 0;
            __pyx_t_20 = NULL;
            __pyx_t_14 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_27))) {
              __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_27);
              if (likely(__pyx_t_20)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_27);
                __Pyx_INCREF(__pyx_t_20);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_27, function);
                __pyx_t_14 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_27)) {
              PyObject *__pyx_temp[3] = {__pyx_t_20, __pyx_n_s_h, __pyx_t_48};
              __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_27, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_48); __pyx_t_48 = 0;
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_27)) {
              PyObject *__pyx_temp[3] = {__pyx_t_20, __pyx_n_s_h, __pyx_t_48};
              __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_27, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_48); __pyx_t_48 = 0;
            } else
            #endif
            {
              __pyx_t_47 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_47);
              if (__pyx_t_20) {
                __Pyx_GIVEREF(__pyx_t_20); PyTuple_SET_ITEM(__pyx_t_47, 0, __pyx_t_20); __pyx_t_20 = NULL;
              }
              __Pyx_INCREF(__pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_n_s_h);
              PyTuple_SET_ITEM(__pyx_t_47, 0+__pyx_t_14, __pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_t_48);
              PyTuple_SET_ITEM(__pyx_t_47, 1+__pyx_t_14, __pyx_t_48);
              __pyx_t_48 = 0;
              __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_27, __pyx_t_47, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
            }
            __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
            __pyx_t_27 = PyNumber_Add(__pyx_t_15, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_inu); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __pyx_t_47 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_15); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_47);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = PyNumber_Add(__pyx_t_27, __pyx_t_47); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 271, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
            __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
            __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_15);
            __pyx_t_15 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":272
 *                         ### inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 *                         ### op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 *                         for i_i in range(l_neighbor_list):
 */
            __Pyx_GetModuleGlobalName(__pyx_t_47, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_47);
            __pyx_t_27 = __Pyx_PyObject_GetAttrStr(__pyx_t_47, __pyx_n_s_naming); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __Pyx_DECREF(__pyx_t_47); __pyx_t_47 = 0;
            __pyx_t_47 = __Pyx_PyInt_From_int(__pyx_v_b_t); if (unlikely(!__pyx_t_47)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_47);
            __pyx_t_48 = __Pyx_GetItemInt(__pyx_v_h_num, __pyx_v_i_k, int, 1, __Pyx_PyInt_From_int, 0, 1, 0); if (unlikely(!__pyx_t_48)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_48);
            __pyx_t_20 = __Pyx_PyInt_From_int(__pyx_v_o_f); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            __pyx_t_46 = __Pyx_PyInt_From_int(__pyx_v_o_i); if (unlikely(!__pyx_t_46)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_46);
            __pyx_t_23 = __Pyx_PyInt_From_int(__pyx_v_o_j); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_23);
            __pyx_t_30 = PyList_New(7); if (unlikely(!__pyx_t_30)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_30);
            __Pyx_INCREF(__pyx_v_a_t);
            __Pyx_GIVEREF(__pyx_v_a_t);
            PyList_SET_ITEM(__pyx_t_30, 0, __pyx_v_a_t);
            __Pyx_GIVEREF(__pyx_t_47);
            PyList_SET_ITEM(__pyx_t_30, 1, __pyx_t_47);
            __Pyx_GIVEREF(__pyx_t_48);
            PyList_SET_ITEM(__pyx_t_30, 2, __pyx_t_48);
            __Pyx_GIVEREF(__pyx_t_20);
            PyList_SET_ITEM(__pyx_t_30, 3, __pyx_t_20);
            __Pyx_GIVEREF(__pyx_t_46);
            PyList_SET_ITEM(__pyx_t_30, 4, __pyx_t_46);
            __Pyx_GIVEREF(__pyx_t_23);
            PyList_SET_ITEM(__pyx_t_30, 5, __pyx_t_23);
            __Pyx_INCREF(__pyx_v_dist_layers);
            __Pyx_GIVEREF(__pyx_v_dist_layers);
            PyList_SET_ITEM(__pyx_t_30, 6, __pyx_v_dist_layers);
            __pyx_t_47 = 0;
            __pyx_t_48 = 0;
            __pyx_t_20 = 0;
            __pyx_t_46 = 0;
            __pyx_t_23 = 0;
            __pyx_t_23 = NULL;
            __pyx_t_14 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_27))) {
              __pyx_t_23 = PyMethod_GET_SELF(__pyx_t_27);
              if (likely(__pyx_t_23)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_27);
                __Pyx_INCREF(__pyx_t_23);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_27, function);
                __pyx_t_14 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_27)) {
              PyObject *__pyx_temp[3] = {__pyx_t_23, __pyx_n_s_h, __pyx_t_30};
              __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_27, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 272, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_23); __pyx_t_23 = 0;
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_27)) {
              PyObject *__pyx_temp[3] = {__pyx_t_23, __pyx_n_s_h, __pyx_t_30};
              __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_27, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 272, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_23); __pyx_t_23 = 0;
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
            } else
            #endif
            {
              __pyx_t_46 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_46)) __PYX_ERR(0, 272, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_46);
              if (__pyx_t_23) {
                __Pyx_GIVEREF(__pyx_t_23); PyTuple_SET_ITEM(__pyx_t_46, 0, __pyx_t_23); __pyx_t_23 = NULL;
              }
              __Pyx_INCREF(__pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_n_s_h);
              PyTuple_SET_ITEM(__pyx_t_46, 0+__pyx_t_14, __pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_t_30);
              PyTuple_SET_ITEM(__pyx_t_46, 1+__pyx_t_14, __pyx_t_30);
              __pyx_t_30 = 0;
              __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_27, __pyx_t_46, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 272, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_46); __pyx_t_46 = 0;
            }
            __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
            __pyx_t_27 = PyNumber_Add(__pyx_t_15, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_27)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_27);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_inu); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __pyx_t_46 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_15); if (unlikely(!__pyx_t_46)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_46);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = PyNumber_Add(__pyx_t_27, __pyx_t_46); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 272, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_27); __pyx_t_27 = 0;
            __Pyx_DECREF(__pyx_t_46); __pyx_t_46 = 0;
            __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_15);
            __pyx_t_15 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":274
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         ### op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 *                         for i_i in range(l_neighbor_list):             # <<<<<<<<<<<<<<
 *                             l_neighbor_list_i_i = lneighbor_list[i_i]
 *                             avpart = 0.0
 */
            __pyx_t_14 = __pyx_v_l_neighbor_list;
            __pyx_t_13 = __pyx_t_14;
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_13; __pyx_t_12+=1) {
              __pyx_v_i_i = __pyx_t_12;

              /* "malio_cy/op_h_aha_cy.pyx":275
 *                         ### op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 *                         for i_i in range(l_neighbor_list):
 *                             l_neighbor_list_i_i = lneighbor_list[i_i]             # <<<<<<<<<<<<<<
 *                             avpart = 0.0
 *                             for ii_j in range(l_neighbor_list_i_i):
 */
              __pyx_v_l_neighbor_list_i_i = (__pyx_v_lneighbor_list[__pyx_v_i_i]);

              /* "malio_cy/op_h_aha_cy.pyx":276
 *                         for i_i in range(l_neighbor_list):
 *                             l_neighbor_list_i_i = lneighbor_list[i_i]
 *                             avpart = 0.0             # <<<<<<<<<<<<<<
 *                             for ii_j in range(l_neighbor_list_i_i):
 *                                 inei = ineighbor_list[i_i][ii_j]
 */
              __pyx_v_avpart = 0.0;

              /* "malio_cy/op_h_aha_cy.pyx":277
 *                             l_neighbor_list_i_i = lneighbor_list[i_i]
 *                             avpart = 0.0
 *                             for ii_j in range(l_neighbor_list_i_i):             # <<<<<<<<<<<<<<
 *                                 inei = ineighbor_list[i_i][ii_j]
 *                                 avpart += dval[j][inei] # dval[inei]
 */
              __pyx_t_33 = __pyx_v_l_neighbor_list_i_i;
              __pyx_t_34 = __pyx_t_33;
              for (__pyx_t_39 = 0; __pyx_t_39 < __pyx_t_34; __pyx_t_39+=1) {
                __pyx_v_ii_j = __pyx_t_39;

                /* "malio_cy/op_h_aha_cy.pyx":278
 *                             avpart = 0.0
 *                             for ii_j in range(l_neighbor_list_i_i):
 *                                 inei = ineighbor_list[i_i][ii_j]             # <<<<<<<<<<<<<<
 *                                 avpart += dval[j][inei] # dval[inei]
 *                             avpart += dval[j][i_i] # dval[i_i]
 */
                __pyx_v_inei = ((__pyx_v_ineighbor_list[__pyx_v_i_i])[__pyx_v_ii_j]);

                /* "malio_cy/op_h_aha_cy.pyx":279
 *                             for ii_j in range(l_neighbor_list_i_i):
 *                                 inei = ineighbor_list[i_i][ii_j]
 *                                 avpart += dval[j][inei] # dval[inei]             # <<<<<<<<<<<<<<
 *                             avpart += dval[j][i_i] # dval[i_i]
 *                             val_ave[i_i] = avpart/<double>(l_neighbor_list_i_i + 1)
 */
                __pyx_v_avpart = (__pyx_v_avpart + ((__pyx_v_dval[__pyx_v_j])[__pyx_v_inei]));
              }

              /* "malio_cy/op_h_aha_cy.pyx":280
 *                                 inei = ineighbor_list[i_i][ii_j]
 *                                 avpart += dval[j][inei] # dval[inei]
 *                             avpart += dval[j][i_i] # dval[i_i]             # <<<<<<<<<<<<<<
 *                             val_ave[i_i] = avpart/<double>(l_neighbor_list_i_i + 1)
 *                         j += 1
 */
              __pyx_v_avpart = (__pyx_v_avpart + ((__pyx_v_dval[__pyx_v_j])[__pyx_v_i_i]));

              /* "malio_cy/op_h_aha_cy.pyx":281
 *                                 avpart += dval[j][inei] # dval[inei]
 *                             avpart += dval[j][i_i] # dval[i_i]
 *                             val_ave[i_i] = avpart/<double>(l_neighbor_list_i_i + 1)             # <<<<<<<<<<<<<<
 *                         j += 1
 *                         op_value[name] = val_ave
 */
              (__pyx_v_val_ave[__pyx_v_i_i]) = (__pyx_v_avpart / ((double)(__pyx_v_l_neighbor_list_i_i + 1)));
            }

            /* "malio_cy/op_h_aha_cy.pyx":282
 *                             avpart += dval[j][i_i] # dval[i_i]
 *                             val_ave[i_i] = avpart/<double>(l_neighbor_list_i_i + 1)
 *                         j += 1             # <<<<<<<<<<<<<<
 *                         op_value[name] = val_ave
 * 
 */
            __pyx_v_j = (__pyx_v_j + 1);

            /* "malio_cy/op_h_aha_cy.pyx":283
 *                             val_ave[i_i] = avpart/<double>(l_neighbor_list_i_i + 1)
 *                         j += 1
 *                         op_value[name] = val_ave             # <<<<<<<<<<<<<<
 * 
 *     free(lneighbor_list)
 */
            __pyx_t_15 = __pyx_convert_vector_to_py_double(__pyx_v_val_ave); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 283, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_15);
            if (unlikely(PyDict_SetItem(__pyx_v_op_value, __pyx_v_name, __pyx_t_15) < 0)) __PYX_ERR(0, 283, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":269
 *             for i_k in range(len_h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                         ### inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 */
          }
          __Pyx_DECREF(__pyx_t_26); __pyx_t_26 = 0;
          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":268
 *             ### for i_k, _ in enumerate(h_num):
 *             for i_k in range(len_h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:             # <<<<<<<<<<<<<<
 *                     for i_l, _ in enumerate(nu):
 *                         ### inu = nu[i_l] ### ohino
 */
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
    }

    /* "malio_cy/op_h_aha_cy.pyx":263
 *                     j += 1
 * 
 *     for a_t in range(a_times):             # <<<<<<<<<<<<<<
 *         j = 0
 *         for b_t in range(b_times + 1):
 */
  }
  __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":285
 *                         op_value[name] = val_ave
 * 
 *     free(lneighbor_list)             # <<<<<<<<<<<<<<
 *     free(intnu)
 *     free(ih_num)
 */
  free(__pyx_v_lneighbor_list);

  /* "malio_cy/op_h_aha_cy.pyx":286
 * 
 *     free(lneighbor_list)
 *     free(intnu)             # <<<<<<<<<<<<<<
 *     free(ih_num)
 *     return op_value
 */
  free(__pyx_v_intnu);

  /* "malio_cy/op_h_aha_cy.pyx":287
 *     free(lneighbor_list)
 *     free(intnu)
 *     free(ih_num)             # <<<<<<<<<<<<<<
 *     return op_value
 * 
 */
  free(__pyx_v_ih_num);

  /* "malio_cy/op_h_aha_cy.pyx":288
 *     free(intnu)
 *     free(ih_num)
 *     return op_value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_op_value);
  __pyx_r = __pyx_v_op_value;
  goto __pyx_L0;

  /* "malio_cy/op_h_aha_cy.pyx":31
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def aha_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_23);
  __Pyx_XDECREF(__pyx_t_26);
  __Pyx_XDECREF(__pyx_t_27);
  __Pyx_XDECREF(__pyx_t_28);
  __Pyx_XDECREF(__pyx_t_29);
  __Pyx_XDECREF(__pyx_t_30);
  __Pyx_XDECREF(__pyx_t_46);
  __Pyx_XDECREF(__pyx_t_47);
  __Pyx_XDECREF(__pyx_t_48);
  __Pyx_AddTraceback("malio_cy.op_h_aha_cy.aha_order_parameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a_times);
  __Pyx_XDECREF(__pyx_v_b_times);
  __Pyx_XDECREF(__pyx_v_h_num);
  __Pyx_XDECREF(__pyx_v_o_factor);
  __Pyx_XDECREF(__pyx_v_oi_oj_ok);
  __Pyx_XDECREF(__pyx_v_nu);
  __Pyx_XDECREF(__pyx_v_op_val_temp);
  __Pyx_XDECREF(__pyx_v_comb);
  __Pyx_XDECREF(__pyx_v_op_temp);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_h_hist);
  __Pyx_XDECREF(__pyx_v_vname);
  __Pyx_XDECREF(__pyx_v_name_old);
  __Pyx_XDECREF(__pyx_v_h_data_part_nu);
  __Pyx_XDECREF(__pyx_v_g_func);
  __Pyx_XDECREF(__pyx_v_g_power);
  __Pyx_XDECREF(__pyx_v_op_value);
  __Pyx_XDECREF(__pyx_v_i_l);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XDECREF(__pyx_v_name_h);
  __Pyx_XDECREF(__pyx_v_dist_layers);
  __Pyx_XDECREF(__pyx_v_a_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_h_aha_cy.pyx":291
 * 
 * 
 * def calc_h_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_5calc_h_wrapper(PyObject *__pyx_self, PyObject *__pyx_v_args); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_11op_h_aha_cy_5calc_h_wrapper = {"calc_h_wrapper", (PyCFunction)__pyx_pw_8malio_cy_11op_h_aha_cy_5calc_h_wrapper, METH_O, 0};
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_5calc_h_wrapper(PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_h_wrapper (wrapper)", 0);
  __pyx_r = __pyx_pf_8malio_cy_11op_h_aha_cy_4calc_h_wrapper(__pyx_self, ((PyObject *)__pyx_v_args));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_4calc_h_wrapper(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_v_box_length = NULL;
  PyObject *__pyx_v_neighbor_list_ii = NULL;
  PyObject *__pyx_v_i_i = NULL;
  PyObject *__pyx_v_h_num = NULL;
  PyObject *__pyx_v_o_factor = NULL;
  PyObject *__pyx_v_oi_oj_ok = NULL;
  PyObject *__pyx_v_comb = NULL;
  PyObject *__pyx_v_op_temp = NULL;
  PyObject *__pyx_v_o_f = NULL;
  PyObject *__pyx_v_o_i = NULL;
  PyObject *__pyx_v_o_j = NULL;
  PyObject *__pyx_v_o_k = NULL;
  PyObject *__pyx_v_hist_temp = NULL;
  PyObject *__pyx_v_i_k = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_v_h_temp2 = NULL;
  PyObject *__pyx_v_x_i = NULL;
  PyObject *__pyx_v_n_list = NULL;
  PyObject *__pyx_v_i_2 = NULL;
  PyObject *__pyx_v_i_j = NULL;
  PyObject *__pyx_v_x_j = NULL;
  PyObject *__pyx_v_i_3 = NULL;
  PyObject *__pyx_v_x_k = NULL;
  PyObject *__pyx_v_x_i_j = NULL;
  PyObject *__pyx_v_x_ik = NULL;
  PyObject *__pyx_v_theta = NULL;
  PyObject *__pyx_v_h_i = NULL;
  PyObject *__pyx_v_now_i = NULL;
  PyObject *__pyx_v_name = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  Py_ssize_t __pyx_t_13;
  PyObject *(*__pyx_t_14)(PyObject *);
  Py_ssize_t __pyx_t_15;
  PyObject *(*__pyx_t_16)(PyObject *);
  int __pyx_t_17;
  int __pyx_t_18;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  PyObject *__pyx_t_23 = NULL;
  int __pyx_t_24;
  PyObject *__pyx_t_25 = NULL;
  double __pyx_t_26;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calc_h_wrapper", 0);

  /* "malio_cy/op_h_aha_cy.pyx":293
 * def calc_h_wrapper(args):
 *     [box_length, neighbor_list_ii,
 *         i_i, h_num, o_factor, oi_oj_ok] = args             # <<<<<<<<<<<<<<
 * 
 *     comb = [(o_f, o_i, o_j, o_k)
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_args))) || (PyList_CheckExact(__pyx_v_args))) {
    PyObject* sequence = __pyx_v_args;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 6)) {
      if (size > 6) __Pyx_RaiseTooManyValuesError(6);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 292, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_6 = PyTuple_GET_ITEM(sequence, 5); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_5 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_6 = PyList_GET_ITEM(sequence, 5); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_t_6);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[6] = {&__pyx_t_1,&__pyx_t_2,&__pyx_t_3,&__pyx_t_4,&__pyx_t_5,&__pyx_t_6};
      for (i=0; i < 6; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 292, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[6] = {&__pyx_t_1,&__pyx_t_2,&__pyx_t_3,&__pyx_t_4,&__pyx_t_5,&__pyx_t_6};
    __pyx_t_7 = PyObject_GetIter(__pyx_v_args); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 292, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
    for (index=0; index < 6; index++) {
      PyObject* item = __pyx_t_8(__pyx_t_7); if (unlikely(!item)) goto __pyx_L3_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 6) < 0) __PYX_ERR(0, 292, __pyx_L1_error)
    __pyx_t_8 = NULL;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 292, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }

  /* "malio_cy/op_h_aha_cy.pyx":292
 * 
 * def calc_h_wrapper(args):
 *     [box_length, neighbor_list_ii,             # <<<<<<<<<<<<<<
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 * 
 */
  __pyx_v_box_length = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_neighbor_list_ii = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_i_i = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_h_num = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_v_o_factor = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_v_oi_oj_ok = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":295
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 * 
 *     comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 */
  __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);

  /* "malio_cy/op_h_aha_cy.pyx":296
 * 
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 * 
 *     op_temp = {}
 */
  if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
    __pyx_t_5 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 296, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_5))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 296, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 296, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_10(__pyx_t_5);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 296, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_4);
    __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
      __pyx_t_4 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_4); __pyx_t_11 = 0;
      __pyx_t_12 = NULL;
    } else {
      __pyx_t_11 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 296, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_12 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 296, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_12)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_12(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 296, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
      __pyx_t_3 = 0;
      if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
        __pyx_t_3 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_3); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 296, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_14 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 296, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_13); __Pyx_INCREF(__pyx_t_2); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 296, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_13); __Pyx_INCREF(__pyx_t_2); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 296, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_14(__pyx_t_3);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 296, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_2);
        __pyx_t_2 = 0;
        if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
          __pyx_t_2 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_2); __pyx_t_15 = 0;
          __pyx_t_16 = NULL;
        } else {
          __pyx_t_15 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_16 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 296, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_16)) {
            if (likely(PyList_CheckExact(__pyx_t_2))) {
              if (__pyx_t_15 >= PyList_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_15); __Pyx_INCREF(__pyx_t_1); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
              #else
              __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 296, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              #endif
            } else {
              if (__pyx_t_15 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_15); __Pyx_INCREF(__pyx_t_1); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
              #else
              __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 296, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              #endif
            }
          } else {
            __pyx_t_1 = __pyx_t_16(__pyx_t_2);
            if (unlikely(!__pyx_t_1)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 296, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_1);
          }
          __Pyx_XDECREF_SET(__pyx_v_o_k, __pyx_t_1);
          __pyx_t_1 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":295
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 * 
 *     comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 */
          __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 295, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_v_o_f);
          __Pyx_GIVEREF(__pyx_v_o_f);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_o_f);
          __Pyx_INCREF(__pyx_v_o_i);
          __Pyx_GIVEREF(__pyx_v_o_i);
          PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_o_i);
          __Pyx_INCREF(__pyx_v_o_j);
          __Pyx_GIVEREF(__pyx_v_o_j);
          PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_o_j);
          __Pyx_INCREF(__pyx_v_o_k);
          __Pyx_GIVEREF(__pyx_v_o_k);
          PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_o_k);
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_6, (PyObject*)__pyx_t_1))) __PYX_ERR(0, 295, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":296
 * 
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 * 
 *     op_temp = {}
 */
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_comb = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":298
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 * 
 *     op_temp = {}             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         # init histogram
 */
  __pyx_t_6 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v_op_temp = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":299
 * 
 *     op_temp = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         # init histogram
 *         hist_temp = []  # hist_temp[bin_num][ibin]
 */
  __pyx_t_6 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
  for (;;) {
    if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 299, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
      PyObject* sequence = __pyx_t_5;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 299, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_1 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_4,&__pyx_t_3,&__pyx_t_2,&__pyx_t_1};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 299, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_4,&__pyx_t_3,&__pyx_t_2,&__pyx_t_1};
      __pyx_t_7 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 299, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_8(__pyx_t_7); if (unlikely(!item)) goto __pyx_L15_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 4) < 0) __PYX_ERR(0, 299, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L16_unpacking_done;
      __pyx_L15_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 299, __pyx_L1_error)
      __pyx_L16_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_k, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":301
 *     for o_f, o_i, o_j, o_k in comb:
 *         # init histogram
 *         hist_temp = []  # hist_temp[bin_num][ibin]             # <<<<<<<<<<<<<<
 *         for i_k, _ in enumerate(h_num):
 *             h_temp2 = [0 for i in range(h_num[i_k])]
 */
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_hist_temp, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":302
 *         # init histogram
 *         hist_temp = []  # hist_temp[bin_num][ibin]
 *         for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *             h_temp2 = [0 for i in range(h_num[i_k])]
 *             hist_temp.append(h_temp2)
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_5 = __pyx_int_0;
    if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
      __pyx_t_1 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_1); __pyx_t_11 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_11 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 302, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 302, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 302, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 302, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 302, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_10(__pyx_t_1);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 302, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_5);
      __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5);
      __pyx_t_5 = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":303
 *         hist_temp = []  # hist_temp[bin_num][ibin]
 *         for i_k, _ in enumerate(h_num):
 *             h_temp2 = [0 for i in range(h_num[i_k])]             # <<<<<<<<<<<<<<
 *             hist_temp.append(h_temp2)
 * 
 */
      __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 303, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
        __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_13 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_12 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 303, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 303, __pyx_L1_error)
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 303, __pyx_L1_error)
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          }
        } else {
          __pyx_t_4 = __pyx_t_12(__pyx_t_3);
          if (unlikely(!__pyx_t_4)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 303, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
        __pyx_t_4 = 0;
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_int_0))) __PYX_ERR(0, 303, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_h_temp2, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":304
 *         for i_k, _ in enumerate(h_num):
 *             h_temp2 = [0 for i in range(h_num[i_k])]
 *             hist_temp.append(h_temp2)             # <<<<<<<<<<<<<<
 * 
 *         x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 */
      __pyx_t_17 = __Pyx_PyList_Append(__pyx_v_hist_temp, __pyx_v_h_temp2); if (unlikely(__pyx_t_17 == ((int)-1))) __PYX_ERR(0, 304, __pyx_L1_error)

      /* "malio_cy/op_h_aha_cy.pyx":302
 *         # init histogram
 *         hist_temp = []  # hist_temp[bin_num][ibin]
 *         for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *             h_temp2 = [0 for i in range(h_num[i_k])]
 *             hist_temp.append(h_temp2)
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":306
 *             hist_temp.append(h_temp2)
 * 
 *         x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)             # <<<<<<<<<<<<<<
 * 
 *         n_list = len(neighbor_list_ii)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_calc_head_coordinate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_coord_1d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_direct_1d); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_18 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_18 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[6] = {__pyx_t_4, __pyx_t_1, __pyx_t_3, __pyx_v_i_i, __pyx_v_o_f, __pyx_v_o_i};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_18, 5+__pyx_t_18); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 306, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[6] = {__pyx_t_4, __pyx_t_1, __pyx_t_3, __pyx_v_i_i, __pyx_v_o_f, __pyx_v_o_i};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_18, 5+__pyx_t_18); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 306, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_7 = PyTuple_New(5+__pyx_t_18); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 306, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_18, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_18, __pyx_t_3);
      __Pyx_INCREF(__pyx_v_i_i);
      __Pyx_GIVEREF(__pyx_v_i_i);
      PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_18, __pyx_v_i_i);
      __Pyx_INCREF(__pyx_v_o_f);
      __Pyx_GIVEREF(__pyx_v_o_f);
      PyTuple_SET_ITEM(__pyx_t_7, 3+__pyx_t_18, __pyx_v_o_f);
      __Pyx_INCREF(__pyx_v_o_i);
      __Pyx_GIVEREF(__pyx_v_o_i);
      PyTuple_SET_ITEM(__pyx_t_7, 4+__pyx_t_18, __pyx_v_o_i);
      __pyx_t_1 = 0;
      __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 306, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_x_i, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":308
 *         x_i = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_i, o_f, o_i)
 * 
 *         n_list = len(neighbor_list_ii)             # <<<<<<<<<<<<<<
 *         for i_2 in range(len(neighbor_list_ii) - 1):
 *             i_j = neighbor_list_ii[i_2]
 */
    __pyx_t_11 = PyObject_Length(__pyx_v_neighbor_list_ii); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 308, __pyx_L1_error)
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_n_list, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":309
 * 
 *         n_list = len(neighbor_list_ii)
 *         for i_2 in range(len(neighbor_list_ii) - 1):             # <<<<<<<<<<<<<<
 *             i_j = neighbor_list_ii[i_2]
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 */
    __pyx_t_11 = PyObject_Length(__pyx_v_neighbor_list_ii); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 309, __pyx_L1_error)
    __pyx_t_5 = PyInt_FromSsize_t((__pyx_t_11 - 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_11 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_11 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 309, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 309, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 309, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 309, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_i_2, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":310
 *         n_list = len(neighbor_list_ii)
 *         for i_2 in range(len(neighbor_list_ii) - 1):
 *             i_j = neighbor_list_ii[i_2]             # <<<<<<<<<<<<<<
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             for i_3 in range(i_2 + 1, len(neighbor_list_ii)):
 */
      __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_neighbor_list_ii, __pyx_v_i_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF_SET(__pyx_v_i_j, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":311
 *         for i_2 in range(len(neighbor_list_ii) - 1):
 *             i_j = neighbor_list_ii[i_2]
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)             # <<<<<<<<<<<<<<
 *             for i_3 in range(i_2 + 1, len(neighbor_list_ii)):
 *                 i_k = neighbor_list_ii[i_3]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_calc_head_coordinate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_coord_1d); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_direct_1d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = NULL;
      __pyx_t_18 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_18 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[6] = {__pyx_t_4, __pyx_t_7, __pyx_t_1, __pyx_v_i_j, __pyx_v_o_f, __pyx_v_o_j};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_18, 5+__pyx_t_18); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[6] = {__pyx_t_4, __pyx_t_7, __pyx_t_1, __pyx_v_i_j, __pyx_v_o_f, __pyx_v_o_j};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_18, 5+__pyx_t_18); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      {
        __pyx_t_19 = PyTuple_New(5+__pyx_t_18); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_19);
        if (__pyx_t_4) {
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_4); __pyx_t_4 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_19, 0+__pyx_t_18, __pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_19, 1+__pyx_t_18, __pyx_t_1);
        __Pyx_INCREF(__pyx_v_i_j);
        __Pyx_GIVEREF(__pyx_v_i_j);
        PyTuple_SET_ITEM(__pyx_t_19, 2+__pyx_t_18, __pyx_v_i_j);
        __Pyx_INCREF(__pyx_v_o_f);
        __Pyx_GIVEREF(__pyx_v_o_f);
        PyTuple_SET_ITEM(__pyx_t_19, 3+__pyx_t_18, __pyx_v_o_f);
        __Pyx_INCREF(__pyx_v_o_j);
        __Pyx_GIVEREF(__pyx_v_o_j);
        PyTuple_SET_ITEM(__pyx_t_19, 4+__pyx_t_18, __pyx_v_o_j);
        __pyx_t_7 = 0;
        __pyx_t_1 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_19, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_x_j, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":312
 *             i_j = neighbor_list_ii[i_2]
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             for i_3 in range(i_2 + 1, len(neighbor_list_ii)):             # <<<<<<<<<<<<<<
 *                 i_k = neighbor_list_ii[i_3]
 *                 x_k = misc_cy.calc_head_coordinate(
 */
      __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_i_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 312, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_13 = PyObject_Length(__pyx_v_neighbor_list_ii); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 312, __pyx_L1_error)
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_19 = PyTuple_New(2); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 312, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_19, 1, __pyx_t_3);
      __pyx_t_2 = 0;
      __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
        __pyx_t_19 = __pyx_t_3; __Pyx_INCREF(__pyx_t_19); __pyx_t_13 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_19 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 312, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_19);
        __pyx_t_12 = Py_TYPE(__pyx_t_19)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 312, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_19))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_19)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_19, __pyx_t_13); __Pyx_INCREF(__pyx_t_3); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 312, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_19, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_19)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_19, __pyx_t_13); __Pyx_INCREF(__pyx_t_3); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 312, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_19, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_12(__pyx_t_19);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 312, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_i_3, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":313
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             for i_3 in range(i_2 + 1, len(neighbor_list_ii)):
 *                 i_k = neighbor_list_ii[i_3]             # <<<<<<<<<<<<<<
 *                 x_k = misc_cy.calc_head_coordinate(
 *                     coord_1d, direct_1d, i_k, o_f, o_k)
 */
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_neighbor_list_ii, __pyx_v_i_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 313, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":314
 *             for i_3 in range(i_2 + 1, len(neighbor_list_ii)):
 *                 i_k = neighbor_list_ii[i_3]
 *                 x_k = misc_cy.calc_head_coordinate(             # <<<<<<<<<<<<<<
 *                     coord_1d, direct_1d, i_k, o_f, o_k)
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_calc_head_coordinate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 314, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":315
 *                 i_k = neighbor_list_ii[i_3]
 *                 x_k = misc_cy.calc_head_coordinate(
 *                     coord_1d, direct_1d, i_k, o_f, o_k)             # <<<<<<<<<<<<<<
 * 
 *                 x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_coord_1d); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_direct_1d); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_4 = NULL;
        __pyx_t_18 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_18 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_1)) {
          PyObject *__pyx_temp[6] = {__pyx_t_4, __pyx_t_2, __pyx_t_7, __pyx_v_i_k, __pyx_v_o_f, __pyx_v_o_k};
          __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_18, 5+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
          PyObject *__pyx_temp[6] = {__pyx_t_4, __pyx_t_2, __pyx_t_7, __pyx_v_i_k, __pyx_v_o_f, __pyx_v_o_k};
          __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_18, 5+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_20 = PyTuple_New(5+__pyx_t_18); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 314, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_18, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_18, __pyx_t_7);
          __Pyx_INCREF(__pyx_v_i_k);
          __Pyx_GIVEREF(__pyx_v_i_k);
          PyTuple_SET_ITEM(__pyx_t_20, 2+__pyx_t_18, __pyx_v_i_k);
          __Pyx_INCREF(__pyx_v_o_f);
          __Pyx_GIVEREF(__pyx_v_o_f);
          PyTuple_SET_ITEM(__pyx_t_20, 3+__pyx_t_18, __pyx_v_o_f);
          __Pyx_INCREF(__pyx_v_o_k);
          __Pyx_GIVEREF(__pyx_v_o_k);
          PyTuple_SET_ITEM(__pyx_t_20, 4+__pyx_t_18, __pyx_v_o_k);
          __pyx_t_2 = 0;
          __pyx_t_7 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_20, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_x_k, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":317
 *                     coord_1d, direct_1d, i_k, o_f, o_k)
 * 
 *                 x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)             # <<<<<<<<<<<<<<
 *                 x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                 try:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 317, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_calc_delta); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 317, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = NULL;
        __pyx_t_18 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_20))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_20);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_20, function);
            __pyx_t_18 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_20)) {
          PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_v_x_j, __pyx_v_x_i, __pyx_v_box_length};
          __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_18, 3+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_GOTREF(__pyx_t_3);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_20)) {
          PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_v_x_j, __pyx_v_x_i, __pyx_v_box_length};
          __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_20, __pyx_temp+1-__pyx_t_18, 3+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_GOTREF(__pyx_t_3);
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(3+__pyx_t_18); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 317, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_1) {
            __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1); __pyx_t_1 = NULL;
          }
          __Pyx_INCREF(__pyx_v_x_j);
          __Pyx_GIVEREF(__pyx_v_x_j);
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_18, __pyx_v_x_j);
          __Pyx_INCREF(__pyx_v_x_i);
          __Pyx_GIVEREF(__pyx_v_x_i);
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_18, __pyx_v_x_i);
          __Pyx_INCREF(__pyx_v_box_length);
          __Pyx_GIVEREF(__pyx_v_box_length);
          PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_18, __pyx_v_box_length);
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_20, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __Pyx_XDECREF_SET(__pyx_v_x_i_j, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":318
 * 
 *                 x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 *                 x_ik = misc_cy.calc_delta(x_k, x_i, box_length)             # <<<<<<<<<<<<<<
 *                 try:
 *                     theta = misc_cy.angle(x_i_j, x_ik)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_20, __pyx_n_s_calc_delta); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_t_20 = NULL;
        __pyx_t_18 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_18 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[4] = {__pyx_t_20, __pyx_v_x_k, __pyx_v_x_i, __pyx_v_box_length};
          __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_18, 3+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 318, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_GOTREF(__pyx_t_3);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[4] = {__pyx_t_20, __pyx_v_x_k, __pyx_v_x_i, __pyx_v_box_length};
          __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_18, 3+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 318, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_GOTREF(__pyx_t_3);
        } else
        #endif
        {
          __pyx_t_1 = PyTuple_New(3+__pyx_t_18); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (__pyx_t_20) {
            __Pyx_GIVEREF(__pyx_t_20); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_20); __pyx_t_20 = NULL;
          }
          __Pyx_INCREF(__pyx_v_x_k);
          __Pyx_GIVEREF(__pyx_v_x_k);
          PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_18, __pyx_v_x_k);
          __Pyx_INCREF(__pyx_v_x_i);
          __Pyx_GIVEREF(__pyx_v_x_i);
          PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_18, __pyx_v_x_i);
          __Pyx_INCREF(__pyx_v_box_length);
          __Pyx_GIVEREF(__pyx_v_box_length);
          PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_18, __pyx_v_box_length);
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 318, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF_SET(__pyx_v_x_ik, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":319
 *                 x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 *                 x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                 try:             # <<<<<<<<<<<<<<
 *                     theta = misc_cy.angle(x_i_j, x_ik)
 *                 except ValueError:
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_21, &__pyx_t_22, &__pyx_t_23);
          __Pyx_XGOTREF(__pyx_t_21);
          __Pyx_XGOTREF(__pyx_t_22);
          __Pyx_XGOTREF(__pyx_t_23);
          /*try:*/ {

            /* "malio_cy/op_h_aha_cy.pyx":320
 *                 x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                 try:
 *                     theta = misc_cy.angle(x_i_j, x_ik)             # <<<<<<<<<<<<<<
 *                 except ValueError:
 *                     theta = 0.0
 */
            __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 320, __pyx_L25_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_angle); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 320, __pyx_L25_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = NULL;
            __pyx_t_18 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
                __pyx_t_18 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_1)) {
              PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_x_i_j, __pyx_v_x_ik};
              __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_18, 2+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L25_error)
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_GOTREF(__pyx_t_3);
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
              PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_x_i_j, __pyx_v_x_ik};
              __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_18, 2+__pyx_t_18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L25_error)
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_GOTREF(__pyx_t_3);
            } else
            #endif
            {
              __pyx_t_20 = PyTuple_New(2+__pyx_t_18); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 320, __pyx_L25_error)
              __Pyx_GOTREF(__pyx_t_20);
              if (__pyx_t_7) {
                __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_7); __pyx_t_7 = NULL;
              }
              __Pyx_INCREF(__pyx_v_x_i_j);
              __Pyx_GIVEREF(__pyx_v_x_i_j);
              PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_18, __pyx_v_x_i_j);
              __Pyx_INCREF(__pyx_v_x_ik);
              __Pyx_GIVEREF(__pyx_v_x_ik);
              PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_18, __pyx_v_x_ik);
              __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_20, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L25_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF_SET(__pyx_v_theta, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":319
 *                 x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 *                 x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                 try:             # <<<<<<<<<<<<<<
 *                     theta = misc_cy.angle(x_i_j, x_ik)
 *                 except ValueError:
 */
          }
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
          __Pyx_XDECREF(__pyx_t_23); __pyx_t_23 = 0;
          goto __pyx_L32_try_end;
          __pyx_L25_error:;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":321
 *                 try:
 *                     theta = misc_cy.angle(x_i_j, x_ik)
 *                 except ValueError:             # <<<<<<<<<<<<<<
 *                     theta = 0.0
 *                 if theta >= math.pi:
 */
          __pyx_t_18 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
          if (__pyx_t_18) {
            __Pyx_AddTraceback("malio_cy.op_h_aha_cy.calc_h_wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_20) < 0) __PYX_ERR(0, 321, __pyx_L27_except_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_GOTREF(__pyx_t_20);

            /* "malio_cy/op_h_aha_cy.pyx":322
 *                     theta = misc_cy.angle(x_i_j, x_ik)
 *                 except ValueError:
 *                     theta = 0.0             # <<<<<<<<<<<<<<
 *                 if theta >= math.pi:
 *                     theta -= math.pi
 */
            __Pyx_INCREF(__pyx_float_0_0);
            __Pyx_XDECREF_SET(__pyx_v_theta, __pyx_float_0_0);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
            goto __pyx_L26_exception_handled;
          }
          goto __pyx_L27_except_error;
          __pyx_L27_except_error:;

          /* "malio_cy/op_h_aha_cy.pyx":319
 *                 x_i_j = misc_cy.calc_delta(x_j, x_i, box_length)
 *                 x_ik = misc_cy.calc_delta(x_k, x_i, box_length)
 *                 try:             # <<<<<<<<<<<<<<
 *                     theta = misc_cy.angle(x_i_j, x_ik)
 *                 except ValueError:
 */
          __Pyx_XGIVEREF(__pyx_t_21);
          __Pyx_XGIVEREF(__pyx_t_22);
          __Pyx_XGIVEREF(__pyx_t_23);
          __Pyx_ExceptionReset(__pyx_t_21, __pyx_t_22, __pyx_t_23);
          goto __pyx_L1_error;
          __pyx_L26_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_21);
          __Pyx_XGIVEREF(__pyx_t_22);
          __Pyx_XGIVEREF(__pyx_t_23);
          __Pyx_ExceptionReset(__pyx_t_21, __pyx_t_22, __pyx_t_23);
          __pyx_L32_try_end:;
        }

        /* "malio_cy/op_h_aha_cy.pyx":323
 *                 except ValueError:
 *                     theta = 0.0
 *                 if theta >= math.pi:             # <<<<<<<<<<<<<<
 *                     theta -= math.pi
 * 
 */
        __pyx_t_20 = PyFloat_FromDouble(M_PI); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 323, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_1 = PyObject_RichCompare(__pyx_v_theta, __pyx_t_20, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __pyx_t_24 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_24 < 0)) __PYX_ERR(0, 323, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__pyx_t_24) {

          /* "malio_cy/op_h_aha_cy.pyx":324
 *                     theta = 0.0
 *                 if theta >= math.pi:
 *                     theta -= math.pi             # <<<<<<<<<<<<<<
 * 
 *                 for i_k, _ in enumerate(h_num):
 */
          __pyx_t_1 = PyFloat_FromDouble(M_PI); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 324, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_20 = PyNumber_InPlaceSubtract(__pyx_v_theta, __pyx_t_1); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 324, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF_SET(__pyx_v_theta, __pyx_t_20);
          __pyx_t_20 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":323
 *                 except ValueError:
 *                     theta = 0.0
 *                 if theta >= math.pi:             # <<<<<<<<<<<<<<
 *                     theta -= math.pi
 * 
 */
        }

        /* "malio_cy/op_h_aha_cy.pyx":326
 *                     theta -= math.pi
 * 
 *                 for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                     h_i = h_num[i_k]
 *                     now_i = int(h_i * theta / math.pi)
 */
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_20 = __pyx_int_0;
        if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
          __pyx_t_1 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_1); __pyx_t_15 = 0;
          __pyx_t_14 = NULL;
        } else {
          __pyx_t_15 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_14 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 326, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_14)) {
            if (likely(PyList_CheckExact(__pyx_t_1))) {
              if (__pyx_t_15 >= PyList_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_15); __Pyx_INCREF(__pyx_t_3); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 326, __pyx_L1_error)
              #else
              __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 326, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              #endif
            } else {
              if (__pyx_t_15 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_15); __Pyx_INCREF(__pyx_t_3); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 326, __pyx_L1_error)
              #else
              __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 326, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              #endif
            }
          } else {
            __pyx_t_3 = __pyx_t_14(__pyx_t_1);
            if (unlikely(!__pyx_t_3)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 326, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_3);
          }
          __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_3);
          __pyx_t_3 = 0;
          __Pyx_INCREF(__pyx_t_20);
          __Pyx_DECREF_SET(__pyx_v_i_k, __pyx_t_20);
          __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_20, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 326, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_20);
          __pyx_t_20 = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":327
 * 
 *                 for i_k, _ in enumerate(h_num):
 *                     h_i = h_num[i_k]             # <<<<<<<<<<<<<<
 *                     now_i = int(h_i * theta / math.pi)
 *                     hist_temp[i_k][now_i] += 1.0 / float(
 */
          __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 327, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_XDECREF_SET(__pyx_v_h_i, __pyx_t_3);
          __pyx_t_3 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":328
 *                 for i_k, _ in enumerate(h_num):
 *                     h_i = h_num[i_k]
 *                     now_i = int(h_i * theta / math.pi)             # <<<<<<<<<<<<<<
 *                     hist_temp[i_k][now_i] += 1.0 / float(
 *                         n_list * (n_list - 1) / 2)
 */
          __pyx_t_3 = PyNumber_Multiply(__pyx_v_h_i, __pyx_v_theta); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = PyFloat_FromDouble(M_PI); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_now_i, __pyx_t_7);
          __pyx_t_7 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":329
 *                     h_i = h_num[i_k]
 *                     now_i = int(h_i * theta / math.pi)
 *                     hist_temp[i_k][now_i] += 1.0 / float(             # <<<<<<<<<<<<<<
 *                         n_list * (n_list - 1) / 2)
 * 
 */
          __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_hist_temp, __pyx_v_i_k); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_INCREF(__pyx_v_now_i);
          __pyx_t_2 = __pyx_v_now_i;
          __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);

          /* "malio_cy/op_h_aha_cy.pyx":330
 *                     now_i = int(h_i * theta / math.pi)
 *                     hist_temp[i_k][now_i] += 1.0 / float(
 *                         n_list * (n_list - 1) / 2)             # <<<<<<<<<<<<<<
 * 
 *         for i_k, _ in enumerate(h_num):
 */
          __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_v_n_list, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_25 = PyNumber_Multiply(__pyx_v_n_list, __pyx_t_4); if (unlikely(!__pyx_t_25)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_25);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_25, __pyx_int_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":329
 *                     h_i = h_num[i_k]
 *                     now_i = int(h_i * theta / math.pi)
 *                     hist_temp[i_k][now_i] += 1.0 / float(             # <<<<<<<<<<<<<<
 *                         n_list * (n_list - 1) / 2)
 * 
 */
          __pyx_t_26 = __Pyx_PyObject_AsDouble(__pyx_t_4); if (unlikely(__pyx_t_26 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 329, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(__pyx_t_26 == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "float division");
            __PYX_ERR(0, 329, __pyx_L1_error)
          }
          __pyx_t_4 = PyFloat_FromDouble((1.0 / __pyx_t_26)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_25 = PyNumber_InPlaceAdd(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_25)) __PYX_ERR(0, 329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_25);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(PyObject_SetItem(__pyx_t_7, __pyx_t_2, __pyx_t_25) < 0)) __PYX_ERR(0, 329, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":326
 *                     theta -= math.pi
 * 
 *                 for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                     h_i = h_num[i_k]
 *                     now_i = int(h_i * theta / math.pi)
 */
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":312
 *             i_j = neighbor_list_ii[i_2]
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 *             for i_3 in range(i_2 + 1, len(neighbor_list_ii)):             # <<<<<<<<<<<<<<
 *                 i_k = neighbor_list_ii[i_3]
 *                 x_k = misc_cy.calc_head_coordinate(
 */
      }
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":309
 * 
 *         n_list = len(neighbor_list_ii)
 *         for i_2 in range(len(neighbor_list_ii) - 1):             # <<<<<<<<<<<<<<
 *             i_j = neighbor_list_ii[i_2]
 *             x_j = misc_cy.calc_head_coordinate(coord_1d, direct_1d, i_j, o_f, o_j)
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":332
 *                         n_list * (n_list - 1) / 2)
 * 
 *         for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *             name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])
 *             op_temp[name] = hist_temp[i_k]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_5 = __pyx_int_0;
    if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
      __pyx_t_19 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_19); __pyx_t_11 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_11 = -1; __pyx_t_19 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __pyx_t_10 = Py_TYPE(__pyx_t_19)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 332, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_19))) {
          if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_19)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_20 = PyList_GET_ITEM(__pyx_t_19, __pyx_t_11); __Pyx_INCREF(__pyx_t_20); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 332, __pyx_L1_error)
          #else
          __pyx_t_20 = PySequence_ITEM(__pyx_t_19, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 332, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          #endif
        } else {
          if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_19)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_20 = PyTuple_GET_ITEM(__pyx_t_19, __pyx_t_11); __Pyx_INCREF(__pyx_t_20); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 332, __pyx_L1_error)
          #else
          __pyx_t_20 = PySequence_ITEM(__pyx_t_19, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 332, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          #endif
        }
      } else {
        __pyx_t_20 = __pyx_t_10(__pyx_t_19);
        if (unlikely(!__pyx_t_20)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 332, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_20);
      }
      __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_20);
      __pyx_t_20 = 0;
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_5);
      __pyx_t_20 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      __Pyx_DECREF(__pyx_t_5);
      __pyx_t_5 = __pyx_t_20;
      __pyx_t_20 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":333
 * 
 *         for i_k, _ in enumerate(h_num):
 *             name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *             op_temp[name] = hist_temp[i_k]
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_naming); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyList_New(7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_int_0);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyList_SET_ITEM(__pyx_t_2, 1, __pyx_int_0);
      __Pyx_GIVEREF(__pyx_t_1);
      PyList_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
      __Pyx_INCREF(__pyx_v_o_f);
      __Pyx_GIVEREF(__pyx_v_o_f);
      PyList_SET_ITEM(__pyx_t_2, 3, __pyx_v_o_f);
      __Pyx_INCREF(__pyx_v_o_i);
      __Pyx_GIVEREF(__pyx_v_o_i);
      PyList_SET_ITEM(__pyx_t_2, 4, __pyx_v_o_i);
      __Pyx_INCREF(__pyx_v_o_j);
      __Pyx_GIVEREF(__pyx_v_o_j);
      PyList_SET_ITEM(__pyx_t_2, 5, __pyx_v_o_j);
      __Pyx_INCREF(__pyx_v_o_k);
      __Pyx_GIVEREF(__pyx_v_o_k);
      PyList_SET_ITEM(__pyx_t_2, 6, __pyx_v_o_k);
      __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      __pyx_t_18 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_18 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_n_s_h, __pyx_t_2};
        __pyx_t_20 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_18, 2+__pyx_t_18); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_GOTREF(__pyx_t_20);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_n_s_h, __pyx_t_2};
        __pyx_t_20 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_18, 2+__pyx_t_18); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_GOTREF(__pyx_t_20);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      {
        __pyx_t_25 = PyTuple_New(2+__pyx_t_18); if (unlikely(!__pyx_t_25)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_25);
        if (__pyx_t_1) {
          __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_25, 0, __pyx_t_1); __pyx_t_1 = NULL;
        }
        __Pyx_INCREF(__pyx_n_s_h);
        __Pyx_GIVEREF(__pyx_n_s_h);
        PyTuple_SET_ITEM(__pyx_t_25, 0+__pyx_t_18, __pyx_n_s_h);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_25, 1+__pyx_t_18, __pyx_t_2);
        __pyx_t_2 = 0;
        __pyx_t_20 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_25, NULL); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_20);
      __pyx_t_20 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":334
 *         for i_k, _ in enumerate(h_num):
 *             name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])
 *             op_temp[name] = hist_temp[i_k]             # <<<<<<<<<<<<<<
 * 
 *     return op_temp
 */
      __pyx_t_20 = __Pyx_PyObject_GetItem(__pyx_v_hist_temp, __pyx_v_i_k); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      if (unlikely(PyDict_SetItem(__pyx_v_op_temp, __pyx_v_name, __pyx_t_20) < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":332
 *                         n_list * (n_list - 1) / 2)
 * 
 *         for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *             name = misc_cy.naming('h', [0, 0, h_num[i_k], o_f, o_i, o_j, o_k])
 *             op_temp[name] = hist_temp[i_k]
 */
    }
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":299
 * 
 *     op_temp = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         # init histogram
 *         hist_temp = []  # hist_temp[bin_num][ibin]
 */
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":336
 *             op_temp[name] = hist_temp[i_k]
 * 
 *     return op_temp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_op_temp);
  __pyx_r = __pyx_v_op_temp;
  goto __pyx_L0;

  /* "malio_cy/op_h_aha_cy.pyx":291
 * 
 * 
 * def calc_h_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_25);
  __Pyx_AddTraceback("malio_cy.op_h_aha_cy.calc_h_wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_box_length);
  __Pyx_XDECREF(__pyx_v_neighbor_list_ii);
  __Pyx_XDECREF(__pyx_v_i_i);
  __Pyx_XDECREF(__pyx_v_h_num);
  __Pyx_XDECREF(__pyx_v_o_factor);
  __Pyx_XDECREF(__pyx_v_oi_oj_ok);
  __Pyx_XDECREF(__pyx_v_comb);
  __Pyx_XDECREF(__pyx_v_op_temp);
  __Pyx_XDECREF(__pyx_v_o_f);
  __Pyx_XDECREF(__pyx_v_o_i);
  __Pyx_XDECREF(__pyx_v_o_j);
  __Pyx_XDECREF(__pyx_v_o_k);
  __Pyx_XDECREF(__pyx_v_hist_temp);
  __Pyx_XDECREF(__pyx_v_i_k);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XDECREF(__pyx_v_h_temp2);
  __Pyx_XDECREF(__pyx_v_x_i);
  __Pyx_XDECREF(__pyx_v_n_list);
  __Pyx_XDECREF(__pyx_v_i_2);
  __Pyx_XDECREF(__pyx_v_i_j);
  __Pyx_XDECREF(__pyx_v_x_j);
  __Pyx_XDECREF(__pyx_v_i_3);
  __Pyx_XDECREF(__pyx_v_x_k);
  __Pyx_XDECREF(__pyx_v_x_i_j);
  __Pyx_XDECREF(__pyx_v_x_ik);
  __Pyx_XDECREF(__pyx_v_theta);
  __Pyx_XDECREF(__pyx_v_h_i);
  __Pyx_XDECREF(__pyx_v_now_i);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "malio_cy/op_h_aha_cy.pyx":339
 * 
 * 
 * def aha_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */

/* Python wrapper */
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_7aha_order_parameter_org(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8malio_cy_11op_h_aha_cy_7aha_order_parameter_org = {"aha_order_parameter_org", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8malio_cy_11op_h_aha_cy_7aha_order_parameter_org, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8malio_cy_11op_h_aha_cy_7aha_order_parameter_org(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_coord = 0;
  PyObject *__pyx_v_direct = 0;
  PyObject *__pyx_v_box_length = 0;
  PyObject *__pyx_v_setting = 0;
  PyObject *__pyx_v_neighbor_list = 0;
  PyObject *__pyx_v_thread_num = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("aha_order_parameter_org (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_coord,&__pyx_n_s_direct,&__pyx_n_s_box_length,&__pyx_n_s_setting,&__pyx_n_s_neighbor_list,&__pyx_n_s_thread_num,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_coord)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_direct)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter_org", 1, 6, 6, 1); __PYX_ERR(0, 339, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_box_length)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter_org", 1, 6, 6, 2); __PYX_ERR(0, 339, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_setting)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter_org", 1, 6, 6, 3); __PYX_ERR(0, 339, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_neighbor_list)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter_org", 1, 6, 6, 4); __PYX_ERR(0, 339, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_thread_num)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("aha_order_parameter_org", 1, 6, 6, 5); __PYX_ERR(0, 339, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "aha_order_parameter_org") < 0)) __PYX_ERR(0, 339, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_coord = values[0];
    __pyx_v_direct = values[1];
    __pyx_v_box_length = values[2];
    __pyx_v_setting = values[3];
    __pyx_v_neighbor_list = values[4];
    __pyx_v_thread_num = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("aha_order_parameter_org", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 339, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("malio_cy.op_h_aha_cy.aha_order_parameter_org", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8malio_cy_11op_h_aha_cy_6aha_order_parameter_org(__pyx_self, __pyx_v_coord, __pyx_v_direct, __pyx_v_box_length, __pyx_v_setting, __pyx_v_neighbor_list, __pyx_v_thread_num);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8malio_cy_11op_h_aha_cy_6aha_order_parameter_org(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_coord, PyObject *__pyx_v_direct, PyObject *__pyx_v_box_length, PyObject *__pyx_v_setting, PyObject *__pyx_v_neighbor_list, PyObject *__pyx_v_thread_num) {
  PyObject *__pyx_v_a_times = NULL;
  PyObject *__pyx_v_b_times = NULL;
  PyObject *__pyx_v_h_num = NULL;
  PyObject *__pyx_v_o_factor = NULL;
  PyObject *__pyx_v_oi_oj_ok = NULL;
  PyObject *__pyx_v_nu = NULL;
  PyObject *__pyx_v_now_pool = NULL;
  PyObject *__pyx_v_args = NULL;
  PyObject *__pyx_v_op_val_temp = NULL;
  PyObject *__pyx_v_h_hist = NULL;
  PyObject *__pyx_v_comb = NULL;
  PyObject *__pyx_v_o_f = NULL;
  PyObject *__pyx_v_o_i = NULL;
  PyObject *__pyx_v_o_j = NULL;
  PyObject *__pyx_v_o_k = NULL;
  PyObject *__pyx_v_b_t = NULL;
  PyObject *__pyx_v_i_k = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_name_old = NULL;
  PyObject *__pyx_v_h_data_part_nu = NULL;
  PyObject *__pyx_v_g_list = NULL;
  PyObject *__pyx_v_i_i = NULL;
  PyObject *__pyx_v_g_func = NULL;
  PyObject *__pyx_v_g_power = NULL;
  PyObject *__pyx_v_power = NULL;
  PyObject *__pyx_v_inu = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_v_op_value = NULL;
  PyObject *__pyx_v_i_l = NULL;
  PyObject *__pyx_v_name_h = NULL;
  PyObject *__pyx_v_a_t = NULL;
  PyObject *__pyx_v_dist_layers = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  Py_ssize_t __pyx_t_13;
  PyObject *(*__pyx_t_14)(PyObject *);
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *(*__pyx_t_17)(PyObject *);
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  Py_ssize_t __pyx_t_23;
  PyObject *__pyx_t_24 = NULL;
  PyObject *__pyx_t_25 = NULL;
  PyObject *__pyx_t_26 = NULL;
  int __pyx_t_27;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("aha_order_parameter_org", 0);

  /* "malio_cy/op_h_aha_cy.pyx":340
 * 
 * def aha_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):
 *     a_times = setting['ave_times']             # <<<<<<<<<<<<<<
 *     b_times = setting['b_in_H']
 *     h_num = setting['hist_num']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_ave_times); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_a_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":341
 * def aha_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']             # <<<<<<<<<<<<<<
 *     h_num = setting['hist_num']
 *     o_factor = setting['o_factor']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_b_in_H); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_b_times = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":342
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 *     h_num = setting['hist_num']             # <<<<<<<<<<<<<<
 *     o_factor = setting['o_factor']
 *     oi_oj_ok = setting['oi_oj_ok']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_hist_num); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h_num = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":343
 *     b_times = setting['b_in_H']
 *     h_num = setting['hist_num']
 *     o_factor = setting['o_factor']             # <<<<<<<<<<<<<<
 *     oi_oj_ok = setting['oi_oj_ok']
 *     nu = setting['nu']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_o_factor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o_factor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":344
 *     h_num = setting['hist_num']
 *     o_factor = setting['o_factor']
 *     oi_oj_ok = setting['oi_oj_ok']             # <<<<<<<<<<<<<<
 *     nu = setting['nu']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_oi_oj_ok); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_oi_oj_ok = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":345
 *     o_factor = setting['o_factor']
 *     oi_oj_ok = setting['oi_oj_ok']
 *     nu = setting['nu']             # <<<<<<<<<<<<<<
 * 
 *     # prepare parallel
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_setting, __pyx_n_s_nu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_nu = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":349
 *     # prepare parallel
 *     global coord_1d
 *     coord_1d = Array('d', misc_cy.convert_3dim_to_1dim(coord), lock=False)             # <<<<<<<<<<<<<<
 * 
 *     global direct_1d
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_convert_3dim_to_1dim); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_v_coord) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_coord);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_n_s_d);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_lock, Py_False) < 0) __PYX_ERR(0, 349, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_coord_1d, __pyx_t_3) < 0) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":352
 * 
 *     global direct_1d
 *     direct_1d = Array('d', misc_cy.convert_3dim_to_1dim(direct), lock=False)             # <<<<<<<<<<<<<<
 * 
 *     now_pool = Pool(thread_num)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_convert_3dim_to_1dim); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_v_direct) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_direct);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_n_s_d);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_d);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_lock, Py_False) < 0) __PYX_ERR(0, 352, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_direct_1d, __pyx_t_4) < 0) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":354
 *     direct_1d = Array('d', misc_cy.convert_3dim_to_1dim(direct), lock=False)
 * 
 *     now_pool = Pool(thread_num)             # <<<<<<<<<<<<<<
 *     args = [[box_length, neighbor_list[i_i], i_i, h_num, o_factor, oi_oj_ok]
 *             for i_i in range(len(coord))]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Pool); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_thread_num) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_thread_num);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_now_pool = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":355
 * 
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, h_num, o_factor, oi_oj_ok]             # <<<<<<<<<<<<<<
 *             for i_i in range(len(coord))]
 *     op_val_temp = now_pool.map(calc_h_wrapper, args)
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "malio_cy/op_h_aha_cy.pyx":356
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, h_num, o_factor, oi_oj_ok]
 *             for i_i in range(len(coord))]             # <<<<<<<<<<<<<<
 *     op_val_temp = now_pool.map(calc_h_wrapper, args)
 *     now_pool.close()
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 356, __pyx_L1_error)
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 356, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 356, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 356, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 356, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 356, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 356, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_6(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 356, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":355
 * 
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, h_num, o_factor, oi_oj_ok]             # <<<<<<<<<<<<<<
 *             for i_i in range(len(coord))]
 *     op_val_temp = now_pool.map(calc_h_wrapper, args)
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_neighbor_list, __pyx_v_i_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyList_New(6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_box_length);
    __Pyx_GIVEREF(__pyx_v_box_length);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_box_length);
    __Pyx_GIVEREF(__pyx_t_1);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_i_i);
    __Pyx_GIVEREF(__pyx_v_i_i);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_i_i);
    __Pyx_INCREF(__pyx_v_h_num);
    __Pyx_GIVEREF(__pyx_v_h_num);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_v_h_num);
    __Pyx_INCREF(__pyx_v_o_factor);
    __Pyx_GIVEREF(__pyx_v_o_factor);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_v_o_factor);
    __Pyx_INCREF(__pyx_v_oi_oj_ok);
    __Pyx_GIVEREF(__pyx_v_oi_oj_ok);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_v_oi_oj_ok);
    __pyx_t_1 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":356
 *     now_pool = Pool(thread_num)
 *     args = [[box_length, neighbor_list[i_i], i_i, h_num, o_factor, oi_oj_ok]
 *             for i_i in range(len(coord))]             # <<<<<<<<<<<<<<
 *     op_val_temp = now_pool.map(calc_h_wrapper, args)
 *     now_pool.close()
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_args = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":357
 *     args = [[box_length, neighbor_list[i_i], i_i, h_num, o_factor, oi_oj_ok]
 *             for i_i in range(len(coord))]
 *     op_val_temp = now_pool.map(calc_h_wrapper, args)             # <<<<<<<<<<<<<<
 *     now_pool.close()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_now_pool, __pyx_n_s_map); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_calc_h_wrapper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_3, __pyx_v_args};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 357, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_3, __pyx_v_args};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 357, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 357, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_1) {
      __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_1); __pyx_t_1 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_args);
    __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 357, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_op_val_temp = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":358
 *             for i_i in range(len(coord))]
 *     op_val_temp = now_pool.map(calc_h_wrapper, args)
 *     now_pool.close()             # <<<<<<<<<<<<<<
 * 
 *     del coord_1d
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_now_pool, __pyx_n_s_close); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":360
 *     now_pool.close()
 * 
 *     del coord_1d             # <<<<<<<<<<<<<<
 *     del direct_1d
 * 
 */
  if (__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_coord_1d) < 0) __PYX_ERR(0, 360, __pyx_L1_error)

  /* "malio_cy/op_h_aha_cy.pyx":361
 * 
 *     del coord_1d
 *     del direct_1d             # <<<<<<<<<<<<<<
 * 
 *     h_hist = misc_cy.data_num_name_to_data_name_num(op_val_temp, len(coord))
 */
  if (__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_direct_1d) < 0) __PYX_ERR(0, 361, __pyx_L1_error)

  /* "malio_cy/op_h_aha_cy.pyx":363
 *     del direct_1d
 * 
 *     h_hist = misc_cy.data_num_name_to_data_name_num(op_val_temp, len(coord))             # <<<<<<<<<<<<<<
 * 
 *     # neighbor histogram averaging
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_data_num_name_to_data_name_num); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 363, __pyx_L1_error)
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_op_val_temp, __pyx_t_2};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 363, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_op_val_temp, __pyx_t_2};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 363, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 363, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_op_val_temp);
    __Pyx_GIVEREF(__pyx_v_op_val_temp);
    PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_v_op_val_temp);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 363, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_v_h_hist = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":366
 * 
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 *     for o_f, o_i, o_j, o_k in comb:
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "malio_cy/op_h_aha_cy.pyx":367
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):
 */
  if (likely(PyList_CheckExact(__pyx_v_o_factor)) || PyTuple_CheckExact(__pyx_v_o_factor)) {
    __pyx_t_8 = __pyx_v_o_factor; __Pyx_INCREF(__pyx_t_8); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_v_o_factor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 367, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_6 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 367, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_8))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_6(__pyx_t_8);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 367, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_1);
    __pyx_t_1 = 0;
    if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
      __pyx_t_1 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 367, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_10(__pyx_t_1);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 367, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_2);
      __pyx_t_2 = 0;
      if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
        __pyx_t_2 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_12 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 367, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_2))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_12(__pyx_t_2);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 367, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_3);
        __pyx_t_3 = 0;
        if (likely(PyList_CheckExact(__pyx_v_oi_oj_ok)) || PyTuple_CheckExact(__pyx_v_oi_oj_ok)) {
          __pyx_t_3 = __pyx_v_oi_oj_ok; __Pyx_INCREF(__pyx_t_3); __pyx_t_13 = 0;
          __pyx_t_14 = NULL;
        } else {
          __pyx_t_13 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_oi_oj_ok); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_14 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 367, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_14)) {
            if (likely(PyList_CheckExact(__pyx_t_3))) {
              if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_3)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_15 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_13); __Pyx_INCREF(__pyx_t_15); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
              #else
              __pyx_t_15 = PySequence_ITEM(__pyx_t_3, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              #endif
            } else {
              if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_15 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_13); __Pyx_INCREF(__pyx_t_15); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 367, __pyx_L1_error)
              #else
              __pyx_t_15 = PySequence_ITEM(__pyx_t_3, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_15);
              #endif
            }
          } else {
            __pyx_t_15 = __pyx_t_14(__pyx_t_3);
            if (unlikely(!__pyx_t_15)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 367, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_15);
          }
          __Pyx_XDECREF_SET(__pyx_v_o_k, __pyx_t_15);
          __pyx_t_15 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":366
 * 
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)             # <<<<<<<<<<<<<<
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 *     for o_f, o_i, o_j, o_k in comb:
 */
          __pyx_t_15 = PyTuple_New(4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 366, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_INCREF(__pyx_v_o_f);
          __Pyx_GIVEREF(__pyx_v_o_f);
          PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_v_o_f);
          __Pyx_INCREF(__pyx_v_o_i);
          __Pyx_GIVEREF(__pyx_v_o_i);
          PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_v_o_i);
          __Pyx_INCREF(__pyx_v_o_j);
          __Pyx_GIVEREF(__pyx_v_o_j);
          PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_v_o_j);
          __Pyx_INCREF(__pyx_v_o_k);
          __Pyx_GIVEREF(__pyx_v_o_k);
          PyTuple_SET_ITEM(__pyx_t_15, 3, __pyx_v_o_k);
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_15))) __PYX_ERR(0, 366, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":367
 *     # neighbor histogram averaging
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):
 */
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_v_comb = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":368
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times):
 *             for i_k, _ in enumerate(h_num):
 */
  __pyx_t_4 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_8); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 368, __pyx_L1_error)
    #else
    __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_8))) || (PyList_CheckExact(__pyx_t_8))) {
      PyObject* sequence = __pyx_t_8;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 368, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_15 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_15 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_15);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_1,&__pyx_t_2,&__pyx_t_3,&__pyx_t_15};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 368, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_1,&__pyx_t_2,&__pyx_t_3,&__pyx_t_15};
      __pyx_t_16 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_17 = Py_TYPE(__pyx_t_16)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_17(__pyx_t_16); if (unlikely(!item)) goto __pyx_L15_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_17(__pyx_t_16), 4) < 0) __PYX_ERR(0, 368, __pyx_L1_error)
      __pyx_t_17 = NULL;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      goto __pyx_L16_unpacking_done;
      __pyx_L15_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 368, __pyx_L1_error)
      __pyx_L16_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_k, __pyx_t_15);
    __pyx_t_15 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":369
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 */
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_b_times); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
      __pyx_t_15 = __pyx_t_8; __Pyx_INCREF(__pyx_t_15); __pyx_t_9 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 369, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_6 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 369, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    for (;;) {
      if (likely(!__pyx_t_6)) {
        if (likely(PyList_CheckExact(__pyx_t_15))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 369, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_15, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 369, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_15, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        }
      } else {
        __pyx_t_8 = __pyx_t_6(__pyx_t_15);
        if (unlikely(!__pyx_t_8)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 369, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_8);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":370
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming(
 */
      __Pyx_INCREF(__pyx_int_0);
      __pyx_t_8 = __pyx_int_0;
      if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
        __pyx_t_3 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_3); __pyx_t_11 = 0;
        __pyx_t_10 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 370, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_10)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 370, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 370, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_10(__pyx_t_3);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 370, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_8);
        __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8);
        __pyx_t_8 = __pyx_t_2;
        __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":371
 *         for b_t in range(b_times):
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 name_old = misc_cy.naming(
 *                     'h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 371, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_naming); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 371, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_b_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 371, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_18 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 371, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_19 = PyList_New(7); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 371, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_19);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_19, 0, __pyx_int_0);
        __Pyx_GIVEREF(__pyx_t_1);
        PyList_SET_ITEM(__pyx_t_19, 1, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_18);
        PyList_SET_ITEM(__pyx_t_19, 2, __pyx_t_18);
        __Pyx_INCREF(__pyx_v_o_f);
        __Pyx_GIVEREF(__pyx_v_o_f);
        PyList_SET_ITEM(__pyx_t_19, 3, __pyx_v_o_f);
        __Pyx_INCREF(__pyx_v_o_i);
        __Pyx_GIVEREF(__pyx_v_o_i);
        PyList_SET_ITEM(__pyx_t_19, 4, __pyx_v_o_i);
        __Pyx_INCREF(__pyx_v_o_j);
        __Pyx_GIVEREF(__pyx_v_o_j);
        PyList_SET_ITEM(__pyx_t_19, 5, __pyx_v_o_j);
        __Pyx_INCREF(__pyx_v_o_k);
        __Pyx_GIVEREF(__pyx_v_o_k);
        PyList_SET_ITEM(__pyx_t_19, 6, __pyx_v_o_k);
        __pyx_t_1 = 0;
        __pyx_t_18 = 0;
        __pyx_t_18 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_n_s_h, __pyx_t_19};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 371, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_18, __pyx_n_s_h, __pyx_t_19};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 371, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        } else
        #endif
        {
          __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 371, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (__pyx_t_18) {
            __Pyx_GIVEREF(__pyx_t_18); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_18); __pyx_t_18 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_19);
          PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_t_19);
          __pyx_t_19 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 371, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":372
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming(             # <<<<<<<<<<<<<<
 *                     'h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 h_hist[name] = misc_cy.v_neighb_ave(
 */
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 372, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_naming); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":373
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming(
 *                     'h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 h_hist[name] = misc_cy.v_neighb_ave(
 *                     neighbor_list, h_hist[name_old])
 */
        __pyx_t_16 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 373, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_19 = PyList_New(7); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 373, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_19);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_19, 0, __pyx_int_0);
        __Pyx_INCREF(__pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_v_b_t);
        PyList_SET_ITEM(__pyx_t_19, 1, __pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_t_16);
        PyList_SET_ITEM(__pyx_t_19, 2, __pyx_t_16);
        __Pyx_INCREF(__pyx_v_o_f);
        __Pyx_GIVEREF(__pyx_v_o_f);
        PyList_SET_ITEM(__pyx_t_19, 3, __pyx_v_o_f);
        __Pyx_INCREF(__pyx_v_o_i);
        __Pyx_GIVEREF(__pyx_v_o_i);
        PyList_SET_ITEM(__pyx_t_19, 4, __pyx_v_o_i);
        __Pyx_INCREF(__pyx_v_o_j);
        __Pyx_GIVEREF(__pyx_v_o_j);
        PyList_SET_ITEM(__pyx_t_19, 5, __pyx_v_o_j);
        __Pyx_INCREF(__pyx_v_o_k);
        __Pyx_GIVEREF(__pyx_v_o_k);
        PyList_SET_ITEM(__pyx_t_19, 6, __pyx_v_o_k);
        __pyx_t_16 = 0;
        __pyx_t_16 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_1)) {
          PyObject *__pyx_temp[3] = {__pyx_t_16, __pyx_n_s_h, __pyx_t_19};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
          PyObject *__pyx_temp[3] = {__pyx_t_16, __pyx_n_s_h, __pyx_t_19};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        } else
        #endif
        {
          __pyx_t_18 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          if (__pyx_t_16) {
            __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_16); __pyx_t_16 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_7, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_19);
          PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_7, __pyx_t_19);
          __pyx_t_19 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_18, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":374
 *                 name_old = misc_cy.naming(
 *                     'h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 h_hist[name] = misc_cy.v_neighb_ave(             # <<<<<<<<<<<<<<
 *                     neighbor_list, h_hist[name_old])
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_v_neighb_ave); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 374, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":375
 *                     'h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 h_hist[name] = misc_cy.v_neighb_ave(
 *                     neighbor_list, h_hist[name_old])             # <<<<<<<<<<<<<<
 * 
 *     # FFT
 */
        __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_h_hist, __pyx_v_name_old); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_19 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_18)) {
          PyObject *__pyx_temp[3] = {__pyx_t_19, __pyx_v_neighbor_list, __pyx_t_1};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_18)) {
          PyObject *__pyx_temp[3] = {__pyx_t_19, __pyx_v_neighbor_list, __pyx_t_1};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_18, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        } else
        #endif
        {
          __pyx_t_16 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          if (__pyx_t_19) {
            __Pyx_GIVEREF(__pyx_t_19); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_19); __pyx_t_19 = NULL;
          }
          __Pyx_INCREF(__pyx_v_neighbor_list);
          __Pyx_GIVEREF(__pyx_v_neighbor_list);
          PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_7, __pyx_v_neighbor_list);
          __Pyx_GIVEREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_7, __pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_16, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":374
 *                 name_old = misc_cy.naming(
 *                     'h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 h_hist[name] = misc_cy.v_neighb_ave(             # <<<<<<<<<<<<<<
 *                     neighbor_list, h_hist[name_old])
 * 
 */
        if (unlikely(PyObject_SetItem(__pyx_v_h_hist, __pyx_v_name, __pyx_t_2) < 0)) __PYX_ERR(0, 374, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":370
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 name_old = misc_cy.naming(
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":369
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t+1, h_num[i_k], o_f, o_i, o_j, o_k])
 */
    }
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":368
 *     comb = [(o_f, o_i, o_j, o_k)
 *             for o_f in o_factor for o_i in oi_oj_ok for o_j in oi_oj_ok for o_k in oi_oj_ok]
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times):
 *             for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":378
 * 
 *     # FFT
 *     h_data_part_nu = {}             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 */
  __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_h_data_part_nu = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":379
 *     # FFT
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 */
  __pyx_t_4 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_15 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_15); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 379, __pyx_L1_error)
    #else
    __pyx_t_15 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_15))) || (PyList_CheckExact(__pyx_t_15))) {
      PyObject* sequence = __pyx_t_15;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 379, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_18 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_8 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_18 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_18);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_8,&__pyx_t_3,&__pyx_t_2,&__pyx_t_18};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_8,&__pyx_t_3,&__pyx_t_2,&__pyx_t_18};
      __pyx_t_16 = PyObject_GetIter(__pyx_t_15); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 379, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_17 = Py_TYPE(__pyx_t_16)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_17(__pyx_t_16); if (unlikely(!item)) goto __pyx_L23_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_17(__pyx_t_16), 4) < 0) __PYX_ERR(0, 379, __pyx_L1_error)
      __pyx_t_17 = NULL;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      goto __pyx_L24_unpacking_done;
      __pyx_L23_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 379, __pyx_L1_error)
      __pyx_L24_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_8);
    __pyx_t_8 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_k, __pyx_t_18);
    __pyx_t_18 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":380
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
    __pyx_t_15 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_18 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_15); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (likely(PyList_CheckExact(__pyx_t_18)) || PyTuple_CheckExact(__pyx_t_18)) {
      __pyx_t_15 = __pyx_t_18; __Pyx_INCREF(__pyx_t_15); __pyx_t_9 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_t_18); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 380, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_6 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 380, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    for (;;) {
      if (likely(!__pyx_t_6)) {
        if (likely(PyList_CheckExact(__pyx_t_15))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_18 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_9); __Pyx_INCREF(__pyx_t_18); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 380, __pyx_L1_error)
          #else
          __pyx_t_18 = PySequence_ITEM(__pyx_t_15, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 380, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_18 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_9); __Pyx_INCREF(__pyx_t_18); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 380, __pyx_L1_error)
          #else
          __pyx_t_18 = PySequence_ITEM(__pyx_t_15, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 380, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          #endif
        }
      } else {
        __pyx_t_18 = __pyx_t_6(__pyx_t_15);
        if (unlikely(!__pyx_t_18)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 380, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_18);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_18);
      __pyx_t_18 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":381
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 g_list = []
 */
      __Pyx_INCREF(__pyx_int_0);
      __pyx_t_18 = __pyx_int_0;
      if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
        __pyx_t_2 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
        __pyx_t_10 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 381, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_10)) {
          if (likely(PyList_CheckExact(__pyx_t_2))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 381, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 381, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 381, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 381, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_10(__pyx_t_2);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 381, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_3);
        __pyx_t_3 = 0;
        __Pyx_INCREF(__pyx_t_18);
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_18);
        __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_18, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 381, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_18);
        __pyx_t_18 = __pyx_t_3;
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":382
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                 g_list = []
 *                 for i_i, _ in enumerate(coord):
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 382, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_naming); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 382, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 382, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_1 = PyList_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 382, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyList_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
        __Pyx_INCREF(__pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_v_b_t);
        PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_b_t);
        __Pyx_GIVEREF(__pyx_t_8);
        PyList_SET_ITEM(__pyx_t_1, 2, __pyx_t_8);
        __Pyx_INCREF(__pyx_v_o_f);
        __Pyx_GIVEREF(__pyx_v_o_f);
        PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_o_f);
        __Pyx_INCREF(__pyx_v_o_i);
        __Pyx_GIVEREF(__pyx_v_o_i);
        PyList_SET_ITEM(__pyx_t_1, 4, __pyx_v_o_i);
        __Pyx_INCREF(__pyx_v_o_j);
        __Pyx_GIVEREF(__pyx_v_o_j);
        PyList_SET_ITEM(__pyx_t_1, 5, __pyx_v_o_j);
        __Pyx_INCREF(__pyx_v_o_k);
        __Pyx_GIVEREF(__pyx_v_o_k);
        PyList_SET_ITEM(__pyx_t_1, 6, __pyx_v_o_k);
        __pyx_t_8 = 0;
        __pyx_t_8 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_n_s_h, __pyx_t_1};
          __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_n_s_h, __pyx_t_1};
          __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        } else
        #endif
        {
          __pyx_t_19 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 382, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          if (__pyx_t_8) {
            __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_8); __pyx_t_8 = NULL;
          }
          __Pyx_INCREF(__pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_n_s_h);
          PyTuple_SET_ITEM(__pyx_t_19, 0+__pyx_t_7, __pyx_n_s_h);
          __Pyx_GIVEREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_19, 1+__pyx_t_7, __pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
        }
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":383
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 g_list = []             # <<<<<<<<<<<<<<
 *                 for i_i, _ in enumerate(coord):
 *                     g_func = fft(histogram_normalize(h_hist[name][i_i]))
 */
        __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_XDECREF_SET(__pyx_v_g_list, ((PyObject*)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":384
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 g_list = []
 *                 for i_i, _ in enumerate(coord):             # <<<<<<<<<<<<<<
 *                     g_func = fft(histogram_normalize(h_hist[name][i_i]))
 *                     g_power = np.abs(g_func)**2
 */
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_3 = __pyx_int_0;
        if (likely(PyList_CheckExact(__pyx_v_coord)) || PyTuple_CheckExact(__pyx_v_coord)) {
          __pyx_t_16 = __pyx_v_coord; __Pyx_INCREF(__pyx_t_16); __pyx_t_13 = 0;
          __pyx_t_12 = NULL;
        } else {
          __pyx_t_13 = -1; __pyx_t_16 = PyObject_GetIter(__pyx_v_coord); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_12 = Py_TYPE(__pyx_t_16)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 384, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_12)) {
            if (likely(PyList_CheckExact(__pyx_t_16))) {
              if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_16)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_19 = PyList_GET_ITEM(__pyx_t_16, __pyx_t_13); __Pyx_INCREF(__pyx_t_19); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 384, __pyx_L1_error)
              #else
              __pyx_t_19 = PySequence_ITEM(__pyx_t_16, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 384, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_19);
              #endif
            } else {
              if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_16)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_19 = PyTuple_GET_ITEM(__pyx_t_16, __pyx_t_13); __Pyx_INCREF(__pyx_t_19); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 384, __pyx_L1_error)
              #else
              __pyx_t_19 = PySequence_ITEM(__pyx_t_16, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 384, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_19);
              #endif
            }
          } else {
            __pyx_t_19 = __pyx_t_12(__pyx_t_16);
            if (unlikely(!__pyx_t_19)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 384, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_19);
          }
          __Pyx_DECREF_SET(__pyx_v__, __pyx_t_19);
          __pyx_t_19 = 0;
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_XDECREF_SET(__pyx_v_i_i, __pyx_t_3);
          __pyx_t_19 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_3);
          __pyx_t_3 = __pyx_t_19;
          __pyx_t_19 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":385
 *                 g_list = []
 *                 for i_i, _ in enumerate(coord):
 *                     g_func = fft(histogram_normalize(h_hist[name][i_i]))             # <<<<<<<<<<<<<<
 *                     g_power = np.abs(g_func)**2
 *                     power = []
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fft); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 385, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_histogram_normalize); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 385, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_21 = __Pyx_PyObject_GetItem(__pyx_v_h_hist, __pyx_v_name); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 385, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_21);
          __pyx_t_22 = __Pyx_PyObject_GetItem(__pyx_t_21, __pyx_v_i_i); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 385, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_22);
          __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
          __pyx_t_21 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_20))) {
            __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_20);
            if (likely(__pyx_t_21)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
              __Pyx_INCREF(__pyx_t_21);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_20, function);
            }
          }
          __pyx_t_8 = (__pyx_t_21) ? __Pyx_PyObject_Call2Args(__pyx_t_20, __pyx_t_21, __pyx_t_22) : __Pyx_PyObject_CallOneArg(__pyx_t_20, __pyx_t_22);
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 385, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_t_20 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_20)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_20);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_19 = (__pyx_t_20) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_20, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 385, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF_SET(__pyx_v_g_func, __pyx_t_19);
          __pyx_t_19 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":386
 *                 for i_i, _ in enumerate(coord):
 *                     g_func = fft(histogram_normalize(h_hist[name][i_i]))
 *                     g_power = np.abs(g_func)**2             # <<<<<<<<<<<<<<
 *                     power = []
 *                     for inu in nu:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 386, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_abs); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 386, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_19 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_1, __pyx_v_g_func) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_g_func);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 386, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Power(__pyx_t_19, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 386, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_XDECREF_SET(__pyx_v_g_power, __pyx_t_8);
          __pyx_t_8 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":387
 *                     g_func = fft(histogram_normalize(h_hist[name][i_i]))
 *                     g_power = np.abs(g_func)**2
 *                     power = []             # <<<<<<<<<<<<<<
 *                     for inu in nu:
 *                         try:
 */
          __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 387, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_XDECREF_SET(__pyx_v_power, ((PyObject*)__pyx_t_8));
          __pyx_t_8 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":388
 *                     g_power = np.abs(g_func)**2
 *                     power = []
 *                     for inu in nu:             # <<<<<<<<<<<<<<
 *                         try:
 *                             power.append(g_power[inu])
 */
          if (likely(PyList_CheckExact(__pyx_v_nu)) || PyTuple_CheckExact(__pyx_v_nu)) {
            __pyx_t_8 = __pyx_v_nu; __Pyx_INCREF(__pyx_t_8); __pyx_t_23 = 0;
            __pyx_t_14 = NULL;
          } else {
            __pyx_t_23 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_v_nu); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_14 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 388, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_14)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_23 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_19 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_23); __Pyx_INCREF(__pyx_t_19); __pyx_t_23++; if (unlikely(0 < 0)) __PYX_ERR(0, 388, __pyx_L1_error)
                #else
                __pyx_t_19 = PySequence_ITEM(__pyx_t_8, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 388, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_19);
                #endif
              } else {
                if (__pyx_t_23 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_19 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_23); __Pyx_INCREF(__pyx_t_19); __pyx_t_23++; if (unlikely(0 < 0)) __PYX_ERR(0, 388, __pyx_L1_error)
                #else
                __pyx_t_19 = PySequence_ITEM(__pyx_t_8, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 388, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_19);
                #endif
              }
            } else {
              __pyx_t_19 = __pyx_t_14(__pyx_t_8);
              if (unlikely(!__pyx_t_19)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 388, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_19);
            }
            __Pyx_XDECREF_SET(__pyx_v_inu, __pyx_t_19);
            __pyx_t_19 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":389
 *                     power = []
 *                     for inu in nu:
 *                         try:             # <<<<<<<<<<<<<<
 *                             power.append(g_power[inu])
 *                         except IndexError as e:
 */
            {
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __Pyx_ExceptionSave(&__pyx_t_24, &__pyx_t_25, &__pyx_t_26);
              __Pyx_XGOTREF(__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_26);
              /*try:*/ {

                /* "malio_cy/op_h_aha_cy.pyx":390
 *                     for inu in nu:
 *                         try:
 *                             power.append(g_power[inu])             # <<<<<<<<<<<<<<
 *                         except IndexError as e:
 *                             power.append(0)
 */
                __pyx_t_19 = __Pyx_PyObject_GetItem(__pyx_v_g_power, __pyx_v_inu); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 390, __pyx_L33_error)
                __Pyx_GOTREF(__pyx_t_19);
                __pyx_t_27 = __Pyx_PyList_Append(__pyx_v_power, __pyx_t_19); if (unlikely(__pyx_t_27 == ((int)-1))) __PYX_ERR(0, 390, __pyx_L33_error)
                __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;

                /* "malio_cy/op_h_aha_cy.pyx":389
 *                     power = []
 *                     for inu in nu:
 *                         try:             # <<<<<<<<<<<<<<
 *                             power.append(g_power[inu])
 *                         except IndexError as e:
 */
              }
              __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
              __Pyx_XDECREF(__pyx_t_25); __pyx_t_25 = 0;
              __Pyx_XDECREF(__pyx_t_26); __pyx_t_26 = 0;
              goto __pyx_L40_try_end;
              __pyx_L33_error:;
              __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
              __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
              __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
              __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;

              /* "malio_cy/op_h_aha_cy.pyx":391
 *                         try:
 *                             power.append(g_power[inu])
 *                         except IndexError as e:             # <<<<<<<<<<<<<<
 *                             power.append(0)
 *                     g_list.append(power)
 */
              __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
              if (__pyx_t_7) {
                __Pyx_AddTraceback("malio_cy.op_h_aha_cy.aha_order_parameter_org", __pyx_clineno, __pyx_lineno, __pyx_filename);
                if (__Pyx_GetException(&__pyx_t_19, &__pyx_t_1, &__pyx_t_20) < 0) __PYX_ERR(0, 391, __pyx_L35_except_error)
                __Pyx_GOTREF(__pyx_t_19);
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_GOTREF(__pyx_t_20);
                __Pyx_INCREF(__pyx_t_1);
                __Pyx_XDECREF_SET(__pyx_v_e, __pyx_t_1);

                /* "malio_cy/op_h_aha_cy.pyx":392
 *                             power.append(g_power[inu])
 *                         except IndexError as e:
 *                             power.append(0)             # <<<<<<<<<<<<<<
 *                     g_list.append(power)
 *                 h_data_part_nu[name] = g_list
 */
                __pyx_t_27 = __Pyx_PyList_Append(__pyx_v_power, __pyx_int_0); if (unlikely(__pyx_t_27 == ((int)-1))) __PYX_ERR(0, 392, __pyx_L35_except_error)
                __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
                __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
                goto __pyx_L34_exception_handled;
              }
              goto __pyx_L35_except_error;
              __pyx_L35_except_error:;

              /* "malio_cy/op_h_aha_cy.pyx":389
 *                     power = []
 *                     for inu in nu:
 *                         try:             # <<<<<<<<<<<<<<
 *                             power.append(g_power[inu])
 *                         except IndexError as e:
 */
              __Pyx_XGIVEREF(__pyx_t_24);
              __Pyx_XGIVEREF(__pyx_t_25);
              __Pyx_XGIVEREF(__pyx_t_26);
              __Pyx_ExceptionReset(__pyx_t_24, __pyx_t_25, __pyx_t_26);
              goto __pyx_L1_error;
              __pyx_L34_exception_handled:;
              __Pyx_XGIVEREF(__pyx_t_24);
              __Pyx_XGIVEREF(__pyx_t_25);
              __Pyx_XGIVEREF(__pyx_t_26);
              __Pyx_ExceptionReset(__pyx_t_24, __pyx_t_25, __pyx_t_26);
              __pyx_L40_try_end:;
            }

            /* "malio_cy/op_h_aha_cy.pyx":388
 *                     g_power = np.abs(g_func)**2
 *                     power = []
 *                     for inu in nu:             # <<<<<<<<<<<<<<
 *                         try:
 *                             power.append(g_power[inu])
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":393
 *                         except IndexError as e:
 *                             power.append(0)
 *                     g_list.append(power)             # <<<<<<<<<<<<<<
 *                 h_data_part_nu[name] = g_list
 * 
 */
          __pyx_t_27 = __Pyx_PyList_Append(__pyx_v_g_list, __pyx_v_power); if (unlikely(__pyx_t_27 == ((int)-1))) __PYX_ERR(0, 393, __pyx_L1_error)

          /* "malio_cy/op_h_aha_cy.pyx":384
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 g_list = []
 *                 for i_i, _ in enumerate(coord):             # <<<<<<<<<<<<<<
 *                     g_func = fft(histogram_normalize(h_hist[name][i_i]))
 *                     g_power = np.abs(g_func)**2
 */
        }
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":394
 *                             power.append(0)
 *                     g_list.append(power)
 *                 h_data_part_nu[name] = g_list             # <<<<<<<<<<<<<<
 * 
 *     op_value = {}
 */
        if (unlikely(PyDict_SetItem(__pyx_v_h_data_part_nu, __pyx_v_name, __pyx_v_g_list) < 0)) __PYX_ERR(0, 394, __pyx_L1_error)

        /* "malio_cy/op_h_aha_cy.pyx":381
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                 g_list = []
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":380
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
    }
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":379
 *     # FFT
 *     h_data_part_nu = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":396
 *                 h_data_part_nu[name] = g_list
 * 
 *     op_value = {}             # <<<<<<<<<<<<<<
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 */
  __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_op_value = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":397
 * 
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 */
  __pyx_t_4 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_15 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_15); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 397, __pyx_L1_error)
    #else
    __pyx_t_15 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_15))) || (PyList_CheckExact(__pyx_t_15))) {
      PyObject* sequence = __pyx_t_15;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 397, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_18 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_16 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_18 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_16 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_18);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_16);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_18,&__pyx_t_2,&__pyx_t_3,&__pyx_t_16};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_18,&__pyx_t_2,&__pyx_t_3,&__pyx_t_16};
      __pyx_t_8 = PyObject_GetIter(__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_17 = Py_TYPE(__pyx_t_8)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_17(__pyx_t_8); if (unlikely(!item)) goto __pyx_L45_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_17(__pyx_t_8), 4) < 0) __PYX_ERR(0, 397, __pyx_L1_error)
      __pyx_t_17 = NULL;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L46_unpacking_done;
      __pyx_L45_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_17 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 397, __pyx_L1_error)
      __pyx_L46_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_18);
    __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_o_k, __pyx_t_16);
    __pyx_t_16 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":398
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 for i_l, _ in enumerate(nu):
 */
    __pyx_t_15 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_16 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_15); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (likely(PyList_CheckExact(__pyx_t_16)) || PyTuple_CheckExact(__pyx_t_16)) {
      __pyx_t_15 = __pyx_t_16; __Pyx_INCREF(__pyx_t_15); __pyx_t_9 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_t_16); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_6 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 398, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    for (;;) {
      if (likely(!__pyx_t_6)) {
        if (likely(PyList_CheckExact(__pyx_t_15))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_16 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_9); __Pyx_INCREF(__pyx_t_16); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
          #else
          __pyx_t_16 = PySequence_ITEM(__pyx_t_15, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_16 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_9); __Pyx_INCREF(__pyx_t_16); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
          #else
          __pyx_t_16 = PySequence_ITEM(__pyx_t_15, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          #endif
        }
      } else {
        __pyx_t_16 = __pyx_t_6(__pyx_t_15);
        if (unlikely(!__pyx_t_16)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 398, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_16);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_16);
      __pyx_t_16 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":399
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]
 */
      __Pyx_INCREF(__pyx_int_0);
      __pyx_t_16 = __pyx_int_0;
      if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
        __pyx_t_3 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_3); __pyx_t_11 = 0;
        __pyx_t_10 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 399, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 399, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_10)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 399, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 399, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_10(__pyx_t_3);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 399, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_INCREF(__pyx_t_16);
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_16);
        __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_16, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_16);
        __pyx_t_16 = __pyx_t_2;
        __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":400
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 *                 for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_2 = __pyx_int_0;
        if (likely(PyList_CheckExact(__pyx_v_nu)) || PyTuple_CheckExact(__pyx_v_nu)) {
          __pyx_t_18 = __pyx_v_nu; __Pyx_INCREF(__pyx_t_18); __pyx_t_13 = 0;
          __pyx_t_12 = NULL;
        } else {
          __pyx_t_13 = -1; __pyx_t_18 = PyObject_GetIter(__pyx_v_nu); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 400, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_12 = Py_TYPE(__pyx_t_18)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 400, __pyx_L1_error)
        }
        for (;;) {
          if (likely(!__pyx_t_12)) {
            if (likely(PyList_CheckExact(__pyx_t_18))) {
              if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_18)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_8 = PyList_GET_ITEM(__pyx_t_18, __pyx_t_13); __Pyx_INCREF(__pyx_t_8); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 400, __pyx_L1_error)
              #else
              __pyx_t_8 = PySequence_ITEM(__pyx_t_18, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 400, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              #endif
            } else {
              if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_18)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_18, __pyx_t_13); __Pyx_INCREF(__pyx_t_8); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 400, __pyx_L1_error)
              #else
              __pyx_t_8 = PySequence_ITEM(__pyx_t_18, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 400, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              #endif
            }
          } else {
            __pyx_t_8 = __pyx_t_12(__pyx_t_18);
            if (unlikely(!__pyx_t_8)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 400, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_8);
          }
          __Pyx_DECREF_SET(__pyx_v__, __pyx_t_8);
          __pyx_t_8 = 0;
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_XDECREF_SET(__pyx_v_i_l, __pyx_t_2);
          __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 400, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2);
          __pyx_t_2 = __pyx_t_8;
          __pyx_t_8 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":401
 *             for i_k, _ in enumerate(h_num):
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]             # <<<<<<<<<<<<<<
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)
 */
          __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_nu, __pyx_v_i_l); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 401, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_XDECREF_SET(__pyx_v_inu, __pyx_t_8);
          __pyx_t_8 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":402
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])             # <<<<<<<<<<<<<<
 *                     name_h = name + '_nu=' + str(inu)
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 402, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_20, __pyx_n_s_naming); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 402, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
          __pyx_t_20 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 402, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          __pyx_t_19 = PyList_New(7); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 402, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_INCREF(__pyx_int_0);
          __Pyx_GIVEREF(__pyx_int_0);
          PyList_SET_ITEM(__pyx_t_19, 0, __pyx_int_0);
          __Pyx_INCREF(__pyx_v_b_t);
          __Pyx_GIVEREF(__pyx_v_b_t);
          PyList_SET_ITEM(__pyx_t_19, 1, __pyx_v_b_t);
          __Pyx_GIVEREF(__pyx_t_20);
          PyList_SET_ITEM(__pyx_t_19, 2, __pyx_t_20);
          __Pyx_INCREF(__pyx_v_o_f);
          __Pyx_GIVEREF(__pyx_v_o_f);
          PyList_SET_ITEM(__pyx_t_19, 3, __pyx_v_o_f);
          __Pyx_INCREF(__pyx_v_o_i);
          __Pyx_GIVEREF(__pyx_v_o_i);
          PyList_SET_ITEM(__pyx_t_19, 4, __pyx_v_o_i);
          __Pyx_INCREF(__pyx_v_o_j);
          __Pyx_GIVEREF(__pyx_v_o_j);
          PyList_SET_ITEM(__pyx_t_19, 5, __pyx_v_o_j);
          __Pyx_INCREF(__pyx_v_o_k);
          __Pyx_GIVEREF(__pyx_v_o_k);
          PyList_SET_ITEM(__pyx_t_19, 6, __pyx_v_o_k);
          __pyx_t_20 = 0;
          __pyx_t_20 = NULL;
          __pyx_t_7 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_20)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_20);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_7 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_1)) {
            PyObject *__pyx_temp[3] = {__pyx_t_20, __pyx_n_s_h, __pyx_t_19};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 402, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
            PyObject *__pyx_temp[3] = {__pyx_t_20, __pyx_n_s_h, __pyx_t_19};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 402, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          } else
          #endif
          {
            __pyx_t_22 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 402, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_22);
            if (__pyx_t_20) {
              __Pyx_GIVEREF(__pyx_t_20); PyTuple_SET_ITEM(__pyx_t_22, 0, __pyx_t_20); __pyx_t_20 = NULL;
            }
            __Pyx_INCREF(__pyx_n_s_h);
            __Pyx_GIVEREF(__pyx_n_s_h);
            PyTuple_SET_ITEM(__pyx_t_22, 0+__pyx_t_7, __pyx_n_s_h);
            __Pyx_GIVEREF(__pyx_t_19);
            PyTuple_SET_ITEM(__pyx_t_22, 1+__pyx_t_7, __pyx_t_19);
            __pyx_t_19 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_22, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 402, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_8);
          __pyx_t_8 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":403
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 *                     name_h = name + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 * 
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l]
 */
          __pyx_t_8 = PyNumber_Add(__pyx_v_name, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_inu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_22 = PyNumber_Add(__pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_22);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF_SET(__pyx_v_name_h, __pyx_t_22);
          __pyx_t_22 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":405
 *                     name_h = name + '_nu=' + str(inu)
 * 
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l]             # <<<<<<<<<<<<<<
 *                                       for i_i in range(len(coord))]
 * 
 */
          __pyx_t_22 = PyList_New(0); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 405, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_22);

          /* "malio_cy/op_h_aha_cy.pyx":406
 * 
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l]
 *                                       for i_i in range(len(coord))]             # <<<<<<<<<<<<<<
 * 
 *     for a_t in range(a_times):
 */
          __pyx_t_23 = PyObject_Length(__pyx_v_coord); if (unlikely(__pyx_t_23 == ((Py_ssize_t)-1))) __PYX_ERR(0, 406, __pyx_L1_error)
          __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_23); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_1 = __pyx_t_8; __Pyx_INCREF(__pyx_t_1); __pyx_t_23 = 0;
            __pyx_t_14 = NULL;
          } else {
            __pyx_t_23 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_14 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 406, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_14)) {
              if (likely(PyList_CheckExact(__pyx_t_1))) {
                if (__pyx_t_23 >= PyList_GET_SIZE(__pyx_t_1)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_23); __Pyx_INCREF(__pyx_t_8); __pyx_t_23++; if (unlikely(0 < 0)) __PYX_ERR(0, 406, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_1, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 406, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_23 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_23); __Pyx_INCREF(__pyx_t_8); __pyx_t_23++; if (unlikely(0 < 0)) __PYX_ERR(0, 406, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_1, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 406, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_14(__pyx_t_1);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 406, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_i_i, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":405
 *                     name_h = name + '_nu=' + str(inu)
 * 
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l]             # <<<<<<<<<<<<<<
 *                                       for i_i in range(len(coord))]
 * 
 */
            __pyx_t_8 = __Pyx_PyDict_GetItem(__pyx_v_h_data_part_nu, __pyx_v_name); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_19 = __Pyx_PyObject_GetItem(__pyx_t_8, __pyx_v_i_i); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_19);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_t_19, __pyx_v_i_l); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
            if (unlikely(__Pyx_ListComp_Append(__pyx_t_22, (PyObject*)__pyx_t_8))) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":406
 * 
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l]
 *                                       for i_i in range(len(coord))]             # <<<<<<<<<<<<<<
 * 
 *     for a_t in range(a_times):
 */
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":405
 *                     name_h = name + '_nu=' + str(inu)
 * 
 *                     op_value[name_h] = [h_data_part_nu[name][i_i][i_l]             # <<<<<<<<<<<<<<
 *                                       for i_i in range(len(coord))]
 * 
 */
          if (unlikely(PyDict_SetItem(__pyx_v_op_value, __pyx_v_name_h, __pyx_t_22) < 0)) __PYX_ERR(0, 405, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":400
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 *                 for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                     inu = nu[i_l]
 *                     name = misc_cy.naming('h', [0, b_t, h_num[i_k], o_f, o_i, o_j, o_k])
 */
        }
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":399
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 for i_l, _ in enumerate(nu):
 *                     inu = nu[i_l]
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":398
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 for i_l, _ in enumerate(nu):
 */
    }
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":397
 * 
 *     op_value = {}
 *     for o_f, o_i, o_j, o_k in comb:             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":408
 *                                       for i_i in range(len(coord))]
 * 
 *     for a_t in range(a_times):             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 */
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_a_times); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
    __pyx_t_15 = __pyx_t_4; __Pyx_INCREF(__pyx_t_15); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_15 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = Py_TYPE(__pyx_t_15)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 408, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_15))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_15)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_15, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 408, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_15, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_15)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_15, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 408, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_15, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_6(__pyx_t_15);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 408, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_a_t, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":409
 * 
 *     for a_t in range(a_times):
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_b_times, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 409, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_16 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_4); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 409, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_16)) || PyTuple_CheckExact(__pyx_t_16)) {
      __pyx_t_4 = __pyx_t_16; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 409, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 409, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_16 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_16); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 409, __pyx_L1_error)
          #else
          __pyx_t_16 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 409, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_16 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_16); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 409, __pyx_L1_error)
          #else
          __pyx_t_16 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 409, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          #endif
        }
      } else {
        __pyx_t_16 = __pyx_t_10(__pyx_t_4);
        if (unlikely(!__pyx_t_16)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 409, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_16);
      }
      __Pyx_XDECREF_SET(__pyx_v_b_t, __pyx_t_16);
      __pyx_t_16 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":410
 *     for a_t in range(a_times):
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):
 */
      __Pyx_INCREF(__pyx_int_0);
      __pyx_t_16 = __pyx_int_0;
      if (likely(PyList_CheckExact(__pyx_v_h_num)) || PyTuple_CheckExact(__pyx_v_h_num)) {
        __pyx_t_3 = __pyx_v_h_num; __Pyx_INCREF(__pyx_t_3); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_h_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_12 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 410, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 410, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 410, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_12(__pyx_t_3);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 410, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_INCREF(__pyx_t_16);
        __Pyx_XDECREF_SET(__pyx_v_i_k, __pyx_t_16);
        __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_16, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_16);
        __pyx_t_16 = __pyx_t_2;
        __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":411
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:             # <<<<<<<<<<<<<<
 *                     for i_l, _ in enumerate(nu):
 *                         inu = nu[i_l] ### ohino
 */
        __pyx_t_2 = __pyx_v_comb; __Pyx_INCREF(__pyx_t_2); __pyx_t_13 = 0;
        for (;;) {
          if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_18 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_13); __Pyx_INCREF(__pyx_t_18); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 411, __pyx_L1_error)
          #else
          __pyx_t_18 = PySequence_ITEM(__pyx_t_2, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 411, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          #endif
          if ((likely(PyTuple_CheckExact(__pyx_t_18))) || (PyList_CheckExact(__pyx_t_18))) {
            PyObject* sequence = __pyx_t_18;
            Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
            if (unlikely(size != 4)) {
              if (size > 4) __Pyx_RaiseTooManyValuesError(4);
              else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
              __PYX_ERR(0, 411, __pyx_L1_error)
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            if (likely(PyTuple_CheckExact(sequence))) {
              __pyx_t_22 = PyTuple_GET_ITEM(sequence, 0); 
              __pyx_t_1 = PyTuple_GET_ITEM(sequence, 1); 
              __pyx_t_8 = PyTuple_GET_ITEM(sequence, 2); 
              __pyx_t_19 = PyTuple_GET_ITEM(sequence, 3); 
            } else {
              __pyx_t_22 = PyList_GET_ITEM(sequence, 0); 
              __pyx_t_1 = PyList_GET_ITEM(sequence, 1); 
              __pyx_t_8 = PyList_GET_ITEM(sequence, 2); 
              __pyx_t_19 = PyList_GET_ITEM(sequence, 3); 
            }
            __Pyx_INCREF(__pyx_t_22);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_19);
            #else
            {
              Py_ssize_t i;
              PyObject** temps[4] = {&__pyx_t_22,&__pyx_t_1,&__pyx_t_8,&__pyx_t_19};
              for (i=0; i < 4; i++) {
                PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 411, __pyx_L1_error)
                __Pyx_GOTREF(item);
                *(temps[i]) = item;
              }
            }
            #endif
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          } else {
            Py_ssize_t index = -1;
            PyObject** temps[4] = {&__pyx_t_22,&__pyx_t_1,&__pyx_t_8,&__pyx_t_19};
            __pyx_t_20 = PyObject_GetIter(__pyx_t_18); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 411, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __pyx_t_17 = Py_TYPE(__pyx_t_20)->tp_iternext;
            for (index=0; index < 4; index++) {
              PyObject* item = __pyx_t_17(__pyx_t_20); if (unlikely(!item)) goto __pyx_L63_unpacking_failed;
              __Pyx_GOTREF(item);
              *(temps[index]) = item;
            }
            if (__Pyx_IternextUnpackEndCheck(__pyx_t_17(__pyx_t_20), 4) < 0) __PYX_ERR(0, 411, __pyx_L1_error)
            __pyx_t_17 = NULL;
            __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
            goto __pyx_L64_unpacking_done;
            __pyx_L63_unpacking_failed:;
            __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
            __pyx_t_17 = NULL;
            if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
            __PYX_ERR(0, 411, __pyx_L1_error)
            __pyx_L64_unpacking_done:;
          }
          __Pyx_XDECREF_SET(__pyx_v_o_f, __pyx_t_22);
          __pyx_t_22 = 0;
          __Pyx_XDECREF_SET(__pyx_v_o_i, __pyx_t_1);
          __pyx_t_1 = 0;
          __Pyx_XDECREF_SET(__pyx_v_o_j, __pyx_t_8);
          __pyx_t_8 = 0;
          __Pyx_XDECREF_SET(__pyx_v_dist_layers, __pyx_t_19);
          __pyx_t_19 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":412
 *             for i_k, _ in enumerate(h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                         inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 */
          __Pyx_INCREF(__pyx_int_0);
          __pyx_t_18 = __pyx_int_0;
          if (likely(PyList_CheckExact(__pyx_v_nu)) || PyTuple_CheckExact(__pyx_v_nu)) {
            __pyx_t_19 = __pyx_v_nu; __Pyx_INCREF(__pyx_t_19); __pyx_t_23 = 0;
            __pyx_t_14 = NULL;
          } else {
            __pyx_t_23 = -1; __pyx_t_19 = PyObject_GetIter(__pyx_v_nu); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_19);
            __pyx_t_14 = Py_TYPE(__pyx_t_19)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 412, __pyx_L1_error)
          }
          for (;;) {
            if (likely(!__pyx_t_14)) {
              if (likely(PyList_CheckExact(__pyx_t_19))) {
                if (__pyx_t_23 >= PyList_GET_SIZE(__pyx_t_19)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_19, __pyx_t_23); __Pyx_INCREF(__pyx_t_8); __pyx_t_23++; if (unlikely(0 < 0)) __PYX_ERR(0, 412, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_19, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 412, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_23 >= PyTuple_GET_SIZE(__pyx_t_19)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_19, __pyx_t_23); __Pyx_INCREF(__pyx_t_8); __pyx_t_23++; if (unlikely(0 < 0)) __PYX_ERR(0, 412, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_19, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 412, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_14(__pyx_t_19);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 412, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_DECREF_SET(__pyx_v__, __pyx_t_8);
            __pyx_t_8 = 0;
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_XDECREF_SET(__pyx_v_i_l, __pyx_t_18);
            __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_18, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_18);
            __pyx_t_18 = __pyx_t_8;
            __pyx_t_8 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":413
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):
 *                         inu = nu[i_l] ### ohino             # <<<<<<<<<<<<<<
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 */
            __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_nu, __pyx_v_i_l); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 413, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_XDECREF_SET(__pyx_v_inu, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":414
 *                     for i_l, _ in enumerate(nu):
 *                         inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 */
            __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_22 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_naming); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_22);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_a_t, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_20 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            __pyx_t_21 = PyList_New(7); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_21);
            __Pyx_GIVEREF(__pyx_t_1);
            PyList_SET_ITEM(__pyx_t_21, 0, __pyx_t_1);
            __Pyx_INCREF(__pyx_v_b_t);
            __Pyx_GIVEREF(__pyx_v_b_t);
            PyList_SET_ITEM(__pyx_t_21, 1, __pyx_v_b_t);
            __Pyx_GIVEREF(__pyx_t_20);
            PyList_SET_ITEM(__pyx_t_21, 2, __pyx_t_20);
            __Pyx_INCREF(__pyx_v_o_f);
            __Pyx_GIVEREF(__pyx_v_o_f);
            PyList_SET_ITEM(__pyx_t_21, 3, __pyx_v_o_f);
            __Pyx_INCREF(__pyx_v_o_i);
            __Pyx_GIVEREF(__pyx_v_o_i);
            PyList_SET_ITEM(__pyx_t_21, 4, __pyx_v_o_i);
            __Pyx_INCREF(__pyx_v_o_j);
            __Pyx_GIVEREF(__pyx_v_o_j);
            PyList_SET_ITEM(__pyx_t_21, 5, __pyx_v_o_j);
            __Pyx_INCREF(__pyx_v_dist_layers);
            __Pyx_GIVEREF(__pyx_v_dist_layers);
            PyList_SET_ITEM(__pyx_t_21, 6, __pyx_v_dist_layers);
            __pyx_t_1 = 0;
            __pyx_t_20 = 0;
            __pyx_t_20 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_22))) {
              __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_22);
              if (likely(__pyx_t_20)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_22);
                __Pyx_INCREF(__pyx_t_20);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_22, function);
                __pyx_t_7 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_22)) {
              PyObject *__pyx_temp[3] = {__pyx_t_20, __pyx_n_s_h, __pyx_t_21};
              __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_22)) {
              PyObject *__pyx_temp[3] = {__pyx_t_20, __pyx_n_s_h, __pyx_t_21};
              __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            } else
            #endif
            {
              __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              if (__pyx_t_20) {
                __Pyx_GIVEREF(__pyx_t_20); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_20); __pyx_t_20 = NULL;
              }
              __Pyx_INCREF(__pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_n_s_h);
              PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_t_21);
              PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_t_21);
              __pyx_t_21 = 0;
              __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_22, __pyx_t_1, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 414, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            }
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
            __pyx_t_22 = PyNumber_Add(__pyx_t_8, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_22);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_inu); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_1 = PyNumber_Add(__pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_1);
            __pyx_t_1 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":415
 *                         inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)             # <<<<<<<<<<<<<<
 *                         op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 * 
 */
            __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_22 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_naming); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_22);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_h_num, __pyx_v_i_k); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_21 = PyList_New(7); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_21);
            __Pyx_INCREF(__pyx_v_a_t);
            __Pyx_GIVEREF(__pyx_v_a_t);
            PyList_SET_ITEM(__pyx_t_21, 0, __pyx_v_a_t);
            __Pyx_INCREF(__pyx_v_b_t);
            __Pyx_GIVEREF(__pyx_v_b_t);
            PyList_SET_ITEM(__pyx_t_21, 1, __pyx_v_b_t);
            __Pyx_GIVEREF(__pyx_t_8);
            PyList_SET_ITEM(__pyx_t_21, 2, __pyx_t_8);
            __Pyx_INCREF(__pyx_v_o_f);
            __Pyx_GIVEREF(__pyx_v_o_f);
            PyList_SET_ITEM(__pyx_t_21, 3, __pyx_v_o_f);
            __Pyx_INCREF(__pyx_v_o_i);
            __Pyx_GIVEREF(__pyx_v_o_i);
            PyList_SET_ITEM(__pyx_t_21, 4, __pyx_v_o_i);
            __Pyx_INCREF(__pyx_v_o_j);
            __Pyx_GIVEREF(__pyx_v_o_j);
            PyList_SET_ITEM(__pyx_t_21, 5, __pyx_v_o_j);
            __Pyx_INCREF(__pyx_v_dist_layers);
            __Pyx_GIVEREF(__pyx_v_dist_layers);
            PyList_SET_ITEM(__pyx_t_21, 6, __pyx_v_dist_layers);
            __pyx_t_8 = 0;
            __pyx_t_8 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_22))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_22);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_22);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_22, function);
                __pyx_t_7 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_22)) {
              PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_n_s_h, __pyx_t_21};
              __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_22)) {
              PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_n_s_h, __pyx_t_21};
              __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
            } else
            #endif
            {
              __pyx_t_20 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_20);
              if (__pyx_t_8) {
                __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_8); __pyx_t_8 = NULL;
              }
              __Pyx_INCREF(__pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_n_s_h);
              PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_7, __pyx_n_s_h);
              __Pyx_GIVEREF(__pyx_t_21);
              PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_7, __pyx_t_21);
              __pyx_t_21 = 0;
              __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_22, __pyx_t_20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
            }
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
            __pyx_t_22 = PyNumber_Add(__pyx_t_1, __pyx_kp_s_nu_2); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_22);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_inu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_20 = PyNumber_Add(__pyx_t_22, __pyx_t_1); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_20);
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF_SET(__pyx_v_name_old, __pyx_t_20);
            __pyx_t_20 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":416
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         name_old = misc_cy.naming('h', [a_t, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 *                         op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])             # <<<<<<<<<<<<<<
 * 
 *     return op_value
 */
            __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_misc_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 416, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_22 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_v_neighb_ave); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 416, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_22);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_op_value, __pyx_v_name_old); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 416, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_21 = NULL;
            __pyx_t_7 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_22))) {
              __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_22);
              if (likely(__pyx_t_21)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_22);
                __Pyx_INCREF(__pyx_t_21);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_22, function);
                __pyx_t_7 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_22)) {
              PyObject *__pyx_temp[3] = {__pyx_t_21, __pyx_v_neighbor_list, __pyx_t_1};
              __pyx_t_20 = __Pyx_PyFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 416, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
              __Pyx_GOTREF(__pyx_t_20);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_22)) {
              PyObject *__pyx_temp[3] = {__pyx_t_21, __pyx_v_neighbor_list, __pyx_t_1};
              __pyx_t_20 = __Pyx_PyCFunction_FastCall(__pyx_t_22, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 416, __pyx_L1_error)
              __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
              __Pyx_GOTREF(__pyx_t_20);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            } else
            #endif
            {
              __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 416, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              if (__pyx_t_21) {
                __Pyx_GIVEREF(__pyx_t_21); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_21); __pyx_t_21 = NULL;
              }
              __Pyx_INCREF(__pyx_v_neighbor_list);
              __Pyx_GIVEREF(__pyx_v_neighbor_list);
              PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_neighbor_list);
              __Pyx_GIVEREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_1);
              __pyx_t_1 = 0;
              __pyx_t_20 = __Pyx_PyObject_Call(__pyx_t_22, __pyx_t_8, NULL); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 416, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_20);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            }
            __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
            if (unlikely(PyDict_SetItem(__pyx_v_op_value, __pyx_v_name, __pyx_t_20) < 0)) __PYX_ERR(0, 416, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

            /* "malio_cy/op_h_aha_cy.pyx":412
 *             for i_k, _ in enumerate(h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):             # <<<<<<<<<<<<<<
 *                         inu = nu[i_l] ### ohino
 *                         name = misc_cy.naming('h', [a_t+1, b_t, h_num[i_k], o_f, o_i, o_j, dist_layers]) + '_nu=' + str(inu)
 */
          }
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

          /* "malio_cy/op_h_aha_cy.pyx":411
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:             # <<<<<<<<<<<<<<
 *                     for i_l, _ in enumerate(nu):
 *                         inu = nu[i_l] ### ohino
 */
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "malio_cy/op_h_aha_cy.pyx":410
 *     for a_t in range(a_times):
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):             # <<<<<<<<<<<<<<
 *                 for o_f, o_i, o_j, dist_layers in comb:
 *                     for i_l, _ in enumerate(nu):
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

      /* "malio_cy/op_h_aha_cy.pyx":409
 * 
 *     for a_t in range(a_times):
 *         for b_t in range(b_times + 1):             # <<<<<<<<<<<<<<
 *             for i_k, _ in enumerate(h_num):
 *                 for o_f, o_i, o_j, dist_layers in comb:
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "malio_cy/op_h_aha_cy.pyx":408
 *                                       for i_i in range(len(coord))]
 * 
 *     for a_t in range(a_times):             # <<<<<<<<<<<<<<
 *         for b_t in range(b_times + 1):
 *             for i_k, _ in enumerate(h_num):
 */
  }
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":418
 *                         op_value[name] = misc_cy.v_neighb_ave(neighbor_list, op_value[name_old])
 * 
 *     return op_value             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_op_value);
  __pyx_r = __pyx_v_op_value;
  goto __pyx_L0;

  /* "malio_cy/op_h_aha_cy.pyx":339
 * 
 * 
 * def aha_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_22);
  __Pyx_AddTraceback("malio_cy.op_h_aha_cy.aha_order_parameter_org", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a_times);
  __Pyx_XDECREF(__pyx_v_b_times);
  __Pyx_XDECREF(__pyx_v_h_num);
  __Pyx_XDECREF(__pyx_v_o_factor);
  __Pyx_XDECREF(__pyx_v_oi_oj_ok);
  __Pyx_XDECREF(__pyx_v_nu);
  __Pyx_XDECREF(__pyx_v_now_pool);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_op_val_temp);
  __Pyx_XDECREF(__pyx_v_h_hist);
  __Pyx_XDECREF(__pyx_v_comb);
  __Pyx_XDECREF(__pyx_v_o_f);
  __Pyx_XDECREF(__pyx_v_o_i);
  __Pyx_XDECREF(__pyx_v_o_j);
  __Pyx_XDECREF(__pyx_v_o_k);
  __Pyx_XDECREF(__pyx_v_b_t);
  __Pyx_XDECREF(__pyx_v_i_k);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_name_old);
  __Pyx_XDECREF(__pyx_v_h_data_part_nu);
  __Pyx_XDECREF(__pyx_v_g_list);
  __Pyx_XDECREF(__pyx_v_i_i);
  __Pyx_XDECREF(__pyx_v_g_func);
  __Pyx_XDECREF(__pyx_v_g_power);
  __Pyx_XDECREF(__pyx_v_power);
  __Pyx_XDECREF(__pyx_v_inu);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_v_op_value);
  __Pyx_XDECREF(__pyx_v_i_l);
  __Pyx_XDECREF(__pyx_v_name_h);
  __Pyx_XDECREF(__pyx_v_a_t);
  __Pyx_XDECREF(__pyx_v_dist_layers);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *__pyx_v_o) {
  std::vector<double>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_double", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((double)__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<std::vector<double> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(PyObject *__pyx_v_o) {
  std::vector<std::vector<double> >  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::vector<double> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::vector<double>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_vector_from_py_double(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::vector<double> )__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_vector_3c_double_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<int>  __pyx_convert_vector_from_py_int(PyObject *__pyx_v_o) {
  std::vector<int>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_int", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_item); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((int)__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_int")
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<std::vector<int> >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(PyObject *__pyx_v_o) {
  std::vector<std::vector<int> >  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::vector<int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::vector<int>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_vector_from_py_int(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::vector<int> )__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_vector_3c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec")
 * cdef object __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(const std::vector<__pyx_t_8malio_cy_12malio_cy_def_dvec>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec")
 * cdef object __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_vector_to_py_double((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec")
 * cdef object __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_op_h_aha_cy(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_op_h_aha_cy},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "op_h_aha_cy",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_Array, __pyx_k_Array, sizeof(__pyx_k_Array), 0, 0, 1, 1},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_n_s_Pool, __pyx_k_Pool, sizeof(__pyx_k_Pool), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 0, 1, 1},
  {&__pyx_n_s_a_t, __pyx_k_a_t, sizeof(__pyx_k_a_t), 0, 0, 1, 1},
  {&__pyx_n_s_a_times, __pyx_k_a_times, sizeof(__pyx_k_a_times), 0, 0, 1, 1},
  {&__pyx_n_s_abs, __pyx_k_abs, sizeof(__pyx_k_abs), 0, 0, 1, 1},
  {&__pyx_n_s_aha_order_parameter, __pyx_k_aha_order_parameter, sizeof(__pyx_k_aha_order_parameter), 0, 0, 1, 1},
  {&__pyx_n_s_aha_order_parameter_org, __pyx_k_aha_order_parameter_org, sizeof(__pyx_k_aha_order_parameter_org), 0, 0, 1, 1},
  {&__pyx_n_s_angle, __pyx_k_angle, sizeof(__pyx_k_angle), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_ave_times, __pyx_k_ave_times, sizeof(__pyx_k_ave_times), 0, 0, 1, 1},
  {&__pyx_n_s_avpart, __pyx_k_avpart, sizeof(__pyx_k_avpart), 0, 0, 1, 1},
  {&__pyx_n_s_b_in_H, __pyx_k_b_in_H, sizeof(__pyx_k_b_in_H), 0, 0, 1, 1},
  {&__pyx_n_s_b_t, __pyx_k_b_t, sizeof(__pyx_k_b_t), 0, 0, 1, 1},
  {&__pyx_n_s_b_times, __pyx_k_b_times, sizeof(__pyx_k_b_times), 0, 0, 1, 1},
  {&__pyx_n_s_box_length, __pyx_k_box_length, sizeof(__pyx_k_box_length), 0, 0, 1, 1},
  {&__pyx_n_s_calc_delta, __pyx_k_calc_delta, sizeof(__pyx_k_calc_delta), 0, 0, 1, 1},
  {&__pyx_n_s_calc_h_wrapper, __pyx_k_calc_h_wrapper, sizeof(__pyx_k_calc_h_wrapper), 0, 0, 1, 1},
  {&__pyx_n_s_calc_head_coordinate, __pyx_k_calc_head_coordinate, sizeof(__pyx_k_calc_head_coordinate), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_comb, __pyx_k_comb, sizeof(__pyx_k_comb), 0, 0, 1, 1},
  {&__pyx_n_s_convert_3dim_to_1dim, __pyx_k_convert_3dim_to_1dim, sizeof(__pyx_k_convert_3dim_to_1dim), 0, 0, 1, 1},
  {&__pyx_n_s_coord, __pyx_k_coord, sizeof(__pyx_k_coord), 0, 0, 1, 1},
  {&__pyx_n_s_coord_1d, __pyx_k_coord_1d, sizeof(__pyx_k_coord_1d), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_data_num_name_to_data_name_num, __pyx_k_data_num_name_to_data_name_num, sizeof(__pyx_k_data_num_name_to_data_name_num), 0, 0, 1, 1},
  {&__pyx_n_s_dbox_length, __pyx_k_dbox_length, sizeof(__pyx_k_dbox_length), 0, 0, 1, 1},
  {&__pyx_n_s_dcoord, __pyx_k_dcoord, sizeof(__pyx_k_dcoord), 0, 0, 1, 1},
  {&__pyx_n_s_ddirect, __pyx_k_ddirect, sizeof(__pyx_k_ddirect), 0, 0, 1, 1},
  {&__pyx_n_s_dg_list, __pyx_k_dg_list, sizeof(__pyx_k_dg_list), 0, 0, 1, 1},
  {&__pyx_n_s_direct, __pyx_k_direct, sizeof(__pyx_k_direct), 0, 0, 1, 1},
  {&__pyx_n_s_direct_1d, __pyx_k_direct_1d, sizeof(__pyx_k_direct_1d), 0, 0, 1, 1},
  {&__pyx_n_s_dist_layers, __pyx_k_dist_layers, sizeof(__pyx_k_dist_layers), 0, 0, 1, 1},
  {&__pyx_n_s_dv, __pyx_k_dv, sizeof(__pyx_k_dv), 0, 0, 1, 1},
  {&__pyx_n_s_dval, __pyx_k_dval, sizeof(__pyx_k_dval), 0, 0, 1, 1},
  {&__pyx_n_s_dvv, __pyx_k_dvv, sizeof(__pyx_k_dvv), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_fft, __pyx_k_fft, sizeof(__pyx_k_fft), 0, 0, 1, 1},
  {&__pyx_n_s_g_func, __pyx_k_g_func, sizeof(__pyx_k_g_func), 0, 0, 1, 1},
  {&__pyx_n_s_g_list, __pyx_k_g_list, sizeof(__pyx_k_g_list), 0, 0, 1, 1},
  {&__pyx_n_s_g_power, __pyx_k_g_power, sizeof(__pyx_k_g_power), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_h_data_part_nu, __pyx_k_h_data_part_nu, sizeof(__pyx_k_h_data_part_nu), 0, 0, 1, 1},
  {&__pyx_n_s_h_hist, __pyx_k_h_hist, sizeof(__pyx_k_h_hist), 0, 0, 1, 1},
  {&__pyx_n_s_h_i, __pyx_k_h_i, sizeof(__pyx_k_h_i), 0, 0, 1, 1},
  {&__pyx_n_s_h_num, __pyx_k_h_num, sizeof(__pyx_k_h_num), 0, 0, 1, 1},
  {&__pyx_n_s_h_temp2, __pyx_k_h_temp2, sizeof(__pyx_k_h_temp2), 0, 0, 1, 1},
  {&__pyx_n_s_hist, __pyx_k_hist, sizeof(__pyx_k_hist), 0, 0, 1, 1},
  {&__pyx_n_s_hist_num, __pyx_k_hist_num, sizeof(__pyx_k_hist_num), 0, 0, 1, 1},
  {&__pyx_n_s_hist_temp, __pyx_k_hist_temp, sizeof(__pyx_k_hist_temp), 0, 0, 1, 1},
  {&__pyx_n_s_histogram_normalize, __pyx_k_histogram_normalize, sizeof(__pyx_k_histogram_normalize), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_i_2, __pyx_k_i_2, sizeof(__pyx_k_i_2), 0, 0, 1, 1},
  {&__pyx_n_s_i_3, __pyx_k_i_3, sizeof(__pyx_k_i_3), 0, 0, 1, 1},
  {&__pyx_n_s_i_i, __pyx_k_i_i, sizeof(__pyx_k_i_i), 0, 0, 1, 1},
  {&__pyx_n_s_i_j, __pyx_k_i_j, sizeof(__pyx_k_i_j), 0, 0, 1, 1},
  {&__pyx_n_s_i_k, __pyx_k_i_k, sizeof(__pyx_k_i_k), 0, 0, 1, 1},
  {&__pyx_n_s_i_l, __pyx_k_i_l, sizeof(__pyx_k_i_l), 0, 0, 1, 1},
  {&__pyx_n_s_ih_num, __pyx_k_ih_num, sizeof(__pyx_k_ih_num), 0, 0, 1, 1},
  {&__pyx_n_s_ii_j, __pyx_k_ii_j, sizeof(__pyx_k_ii_j), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_increment, __pyx_k_increment, sizeof(__pyx_k_increment), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_inei, __pyx_k_inei, sizeof(__pyx_k_inei), 0, 0, 1, 1},
  {&__pyx_n_s_ineighbor_list, __pyx_k_ineighbor_list, sizeof(__pyx_k_ineighbor_list), 0, 0, 1, 1},
  {&__pyx_n_s_intnu, __pyx_k_intnu, sizeof(__pyx_k_intnu), 0, 0, 1, 1},
  {&__pyx_n_s_inu, __pyx_k_inu, sizeof(__pyx_k_inu), 0, 0, 1, 1},
  {&__pyx_n_s_inv_l_neighbor_list_i_i_1, __pyx_k_inv_l_neighbor_list_i_i_1, sizeof(__pyx_k_inv_l_neighbor_list_i_i_1), 0, 0, 1, 1},
  {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_l_h_hist_name_i_i, __pyx_k_l_h_hist_name_i_i, sizeof(__pyx_k_l_h_hist_name_i_i), 0, 0, 1, 1},
  {&__pyx_n_s_l_h_hist_name_old_i_i, __pyx_k_l_h_hist_name_old_i_i, sizeof(__pyx_k_l_h_hist_name_old_i_i), 0, 0, 1, 1},
  {&__pyx_n_s_l_neighbor_list, __pyx_k_l_neighbor_list, sizeof(__pyx_k_l_neighbor_list), 0, 0, 1, 1},
  {&__pyx_n_s_l_neighbor_list_i_i, __pyx_k_l_neighbor_list_i_i, sizeof(__pyx_k_l_neighbor_list_i_i), 0, 0, 1, 1},
  {&__pyx_n_s_l_nu, __pyx_k_l_nu, sizeof(__pyx_k_l_nu), 0, 0, 1, 1},
  {&__pyx_n_s_len_c, __pyx_k_len_c, sizeof(__pyx_k_len_c), 0, 0, 1, 1},
  {&__pyx_n_s_len_h_num, __pyx_k_len_h_num, sizeof(__pyx_k_len_h_num), 0, 0, 1, 1},
  {&__pyx_n_s_lneighbor_list, __pyx_k_lneighbor_list, sizeof(__pyx_k_lneighbor_list), 0, 0, 1, 1},
  {&__pyx_n_s_lock, __pyx_k_lock, sizeof(__pyx_k_lock), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_malio_cy_op_h_aha_cy, __pyx_k_malio_cy_op_h_aha_cy, sizeof(__pyx_k_malio_cy_op_h_aha_cy), 0, 0, 1, 1},
  {&__pyx_kp_s_malio_cy_op_h_aha_cy_pyx, __pyx_k_malio_cy_op_h_aha_cy_pyx, sizeof(__pyx_k_malio_cy_op_h_aha_cy_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_map, __pyx_k_map, sizeof(__pyx_k_map), 0, 0, 1, 1},
  {&__pyx_n_s_mathpi, __pyx_k_mathpi, sizeof(__pyx_k_mathpi), 0, 0, 1, 1},
  {&__pyx_n_s_misc_cy, __pyx_k_misc_cy, sizeof(__pyx_k_misc_cy), 0, 0, 1, 1},
  {&__pyx_n_s_multiprocessing, __pyx_k_multiprocessing, sizeof(__pyx_k_multiprocessing), 0, 0, 1, 1},
  {&__pyx_n_s_n_list, __pyx_k_n_list, sizeof(__pyx_k_n_list), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_name_h, __pyx_k_name_h, sizeof(__pyx_k_name_h), 0, 0, 1, 1},
  {&__pyx_n_s_name_indx, __pyx_k_name_indx, sizeof(__pyx_k_name_indx), 0, 0, 1, 1},
  {&__pyx_n_s_name_old, __pyx_k_name_old, sizeof(__pyx_k_name_old), 0, 0, 1, 1},
  {&__pyx_n_s_name_old_indx, __pyx_k_name_old_indx, sizeof(__pyx_k_name_old_indx), 0, 0, 1, 1},
  {&__pyx_n_s_naming, __pyx_k_naming, sizeof(__pyx_k_naming), 0, 0, 1, 1},
  {&__pyx_n_s_neighbor_list, __pyx_k_neighbor_list, sizeof(__pyx_k_neighbor_list), 0, 0, 1, 1},
  {&__pyx_n_s_neighbor_list_ii, __pyx_k_neighbor_list_ii, sizeof(__pyx_k_neighbor_list_ii), 0, 0, 1, 1},
  {&__pyx_n_s_now_i, __pyx_k_now_i, sizeof(__pyx_k_now_i), 0, 0, 1, 1},
  {&__pyx_n_s_now_pool, __pyx_k_now_pool, sizeof(__pyx_k_now_pool), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_nrm1, __pyx_k_nrm1, sizeof(__pyx_k_nrm1), 0, 0, 1, 1},
  {&__pyx_n_s_nrm2, __pyx_k_nrm2, sizeof(__pyx_k_nrm2), 0, 0, 1, 1},
  {&__pyx_n_s_nu, __pyx_k_nu, sizeof(__pyx_k_nu), 0, 0, 1, 1},
  {&__pyx_kp_s_nu_2, __pyx_k_nu_2, sizeof(__pyx_k_nu_2), 0, 0, 1, 0},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_o_f, __pyx_k_o_f, sizeof(__pyx_k_o_f), 0, 0, 1, 1},
  {&__pyx_n_s_o_factor, __pyx_k_o_factor, sizeof(__pyx_k_o_factor), 0, 0, 1, 1},
  {&__pyx_n_s_o_i, __pyx_k_o_i, sizeof(__pyx_k_o_i), 0, 0, 1, 1},
  {&__pyx_n_s_o_j, __pyx_k_o_j, sizeof(__pyx_k_o_j), 0, 0, 1, 1},
  {&__pyx_n_s_o_k, __pyx_k_o_k, sizeof(__pyx_k_o_k), 0, 0, 1, 1},
  {&__pyx_n_s_oi_oj_ok, __pyx_k_oi_oj_ok, sizeof(__pyx_k_oi_oj_ok), 0, 0, 1, 1},
  {&__pyx_n_s_op_temp, __pyx_k_op_temp, sizeof(__pyx_k_op_temp), 0, 0, 1, 1},
  {&__pyx_n_s_op_val_temp, __pyx_k_op_val_temp, sizeof(__pyx_k_op_val_temp), 0, 0, 1, 1},
  {&__pyx_n_s_op_value, __pyx_k_op_value, sizeof(__pyx_k_op_value), 0, 0, 1, 1},
  {&__pyx_n_s_pdot, __pyx_k_pdot, sizeof(__pyx_k_pdot), 0, 0, 1, 1},
  {&__pyx_n_s_power, __pyx_k_power, sizeof(__pyx_k_power), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_scipy_fftpack, __pyx_k_scipy_fftpack, sizeof(__pyx_k_scipy_fftpack), 0, 0, 1, 1},
  {&__pyx_n_s_setting, __pyx_k_setting, sizeof(__pyx_k_setting), 0, 0, 1, 1},
  {&__pyx_n_s_sum, __pyx_k_sum, sizeof(__pyx_k_sum), 0, 0, 1, 1},
  {&__pyx_n_s_sum_hist, __pyx_k_sum_hist, sizeof(__pyx_k_sum_hist), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_theta, __pyx_k_theta, sizeof(__pyx_k_theta), 0, 0, 1, 1},
  {&__pyx_n_s_thread_num, __pyx_k_thread_num, sizeof(__pyx_k_thread_num), 0, 0, 1, 1},
  {&__pyx_n_s_v_neighb_ave, __pyx_k_v_neighb_ave, sizeof(__pyx_k_v_neighb_ave), 0, 0, 1, 1},
  {&__pyx_n_s_val_ave, __pyx_k_val_ave, sizeof(__pyx_k_val_ave), 0, 0, 1, 1},
  {&__pyx_n_s_vh_hist, __pyx_k_vh_hist, sizeof(__pyx_k_vh_hist), 0, 0, 1, 1},
  {&__pyx_n_s_vhist_temp, __pyx_k_vhist_temp, sizeof(__pyx_k_vhist_temp), 0, 0, 1, 1},
  {&__pyx_n_s_vname, __pyx_k_vname, sizeof(__pyx_k_vname), 0, 0, 1, 1},
  {&__pyx_n_s_x_i, __pyx_k_x_i, sizeof(__pyx_k_x_i), 0, 0, 1, 1},
  {&__pyx_n_s_x_i_j, __pyx_k_x_i_j, sizeof(__pyx_k_x_i_j), 0, 0, 1, 1},
  {&__pyx_n_s_x_ik, __pyx_k_x_ik, sizeof(__pyx_k_x_ik), 0, 0, 1, 1},
  {&__pyx_n_s_x_j, __pyx_k_x_j, sizeof(__pyx_k_x_j), 0, 0, 1, 1},
  {&__pyx_n_s_x_k, __pyx_k_x_k, sizeof(__pyx_k_x_k), 0, 0, 1, 1},
  {&__pyx_n_s_zi, __pyx_k_zi, sizeof(__pyx_k_zi), 0, 0, 1, 1},
  {&__pyx_n_s_zr, __pyx_k_zr, sizeof(__pyx_k_zr), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 14, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 168, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 321, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(0, 391, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "malio_cy/op_h_aha_cy.pyx":12
 * from libcpp.string cimport string
 * 
 * def histogram_normalize(hist):             # <<<<<<<<<<<<<<
 *     sum_hist = np.sum(hist)
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]
 */
  __pyx_tuple_ = PyTuple_Pack(3, __pyx_n_s_hist, __pyx_n_s_sum_hist, __pyx_n_s_i); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);
  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple_, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_h_aha_cy_pyx, __pyx_n_s_histogram_normalize, 12, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) __PYX_ERR(0, 12, __pyx_L1_error)

  /* "malio_cy/op_h_aha_cy.pyx":31
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def aha_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */
  __pyx_tuple__4 = PyTuple_Pack(85, __pyx_n_s_coord, __pyx_n_s_direct, __pyx_n_s_box_length, __pyx_n_s_setting, __pyx_n_s_neighbor_list, __pyx_n_s_thread_num, __pyx_n_s_a_times, __pyx_n_s_b_times, __pyx_n_s_h_num, __pyx_n_s_o_factor, __pyx_n_s_oi_oj_ok, __pyx_n_s_nu, __pyx_n_s_i_i, __pyx_n_s_i_j, __pyx_n_s_i_k, __pyx_n_s_len_c, __pyx_n_s_o_f, __pyx_n_s_o_i, __pyx_n_s_o_j, __pyx_n_s_o_k, __pyx_n_s_i, __pyx_n_s_j, __pyx_n_s_k, __pyx_n_s_l_neighbor_list_i_i, __pyx_n_s_i_2, __pyx_n_s_len_h_num, __pyx_n_s_h_i, __pyx_n_s_now_i, __pyx_n_s_n_list, __pyx_n_s_l_neighbor_list, __pyx_n_s_ii_j, __pyx_n_s_inei, __pyx_n_s_b_t, __pyx_n_s_name_indx, __pyx_n_s_l_h_hist_name_old_i_i, __pyx_n_s_l_h_hist_name_i_i, __pyx_n_s_l_nu, __pyx_n_s_inu, __pyx_n_s_name_old_indx, __pyx_n_s_theta, __pyx_n_s_pdot, __pyx_n_s_nrm1, __pyx_n_s_nrm2, __pyx_n_s_increment, __pyx_n_s_avpart, __pyx_n_s_inv_l_neighbor_list_i_i_1, __pyx_n_s_mathpi, __pyx_n_s_zr, __pyx_n_s_zi, __pyx_n_s_x_i, __pyx_n_s_x_j, __pyx_n_s_x_k, __pyx_n_s_x_i_j, __pyx_n_s_x_ik, __pyx_n_s_dbox_length, __pyx_n_s_dcoord, __pyx_n_s_ddirect, __pyx_n_s_ineighbor_list, __pyx_n_s_lneighbor_list, __pyx_n_s_ih_num, __pyx_n_s_intnu, __pyx_n_s_val_ave, __pyx_n_s_dv, __pyx_n_s_vhist_temp, __pyx_n_s_dg_list, __pyx_n_s_dval, __pyx_n_s_dvv, __pyx_n_s_vh_hist, __pyx_n_s_op_val_temp, __pyx_n_s_comb, __pyx_n_s_op_temp, __pyx_n_s_i_3, __pyx_n_s_name_2, __pyx_n_s_h_hist, __pyx_n_s_vname, __pyx_n_s_name_old, __pyx_n_s_h_data_part_nu, __pyx_n_s_g_func, __pyx_n_s_g_power, __pyx_n_s_op_value, __pyx_n_s_i_l, __pyx_n_s__3, __pyx_n_s_name_h, __pyx_n_s_dist_layers, __pyx_n_s_a_t); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);
  __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(6, 0, 85, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__4, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_h_aha_cy_pyx, __pyx_n_s_aha_order_parameter, 31, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__5)) __PYX_ERR(0, 31, __pyx_L1_error)

  /* "malio_cy/op_h_aha_cy.pyx":291
 * 
 * 
 * def calc_h_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 */
  __pyx_tuple__6 = PyTuple_Pack(31, __pyx_n_s_args, __pyx_n_s_box_length, __pyx_n_s_neighbor_list_ii, __pyx_n_s_i_i, __pyx_n_s_h_num, __pyx_n_s_o_factor, __pyx_n_s_oi_oj_ok, __pyx_n_s_comb, __pyx_n_s_op_temp, __pyx_n_s_o_f, __pyx_n_s_o_i, __pyx_n_s_o_j, __pyx_n_s_o_k, __pyx_n_s_hist_temp, __pyx_n_s_i_k, __pyx_n_s__3, __pyx_n_s_h_temp2, __pyx_n_s_x_i, __pyx_n_s_n_list, __pyx_n_s_i_2, __pyx_n_s_i_j, __pyx_n_s_x_j, __pyx_n_s_i_3, __pyx_n_s_x_k, __pyx_n_s_x_i_j, __pyx_n_s_x_ik, __pyx_n_s_theta, __pyx_n_s_h_i, __pyx_n_s_now_i, __pyx_n_s_name_2, __pyx_n_s_i); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_codeobj__7 = (PyObject*)__Pyx_PyCode_New(1, 0, 31, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__6, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_h_aha_cy_pyx, __pyx_n_s_calc_h_wrapper, 291, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__7)) __PYX_ERR(0, 291, __pyx_L1_error)

  /* "malio_cy/op_h_aha_cy.pyx":339
 * 
 * 
 * def aha_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */
  __pyx_tuple__8 = PyTuple_Pack(39, __pyx_n_s_coord, __pyx_n_s_direct, __pyx_n_s_box_length, __pyx_n_s_setting, __pyx_n_s_neighbor_list, __pyx_n_s_thread_num, __pyx_n_s_a_times, __pyx_n_s_b_times, __pyx_n_s_h_num, __pyx_n_s_o_factor, __pyx_n_s_oi_oj_ok, __pyx_n_s_nu, __pyx_n_s_now_pool, __pyx_n_s_args, __pyx_n_s_op_val_temp, __pyx_n_s_h_hist, __pyx_n_s_comb, __pyx_n_s_o_f, __pyx_n_s_o_i, __pyx_n_s_o_j, __pyx_n_s_o_k, __pyx_n_s_b_t, __pyx_n_s_i_k, __pyx_n_s__3, __pyx_n_s_name_2, __pyx_n_s_name_old, __pyx_n_s_h_data_part_nu, __pyx_n_s_g_list, __pyx_n_s_i_i, __pyx_n_s_g_func, __pyx_n_s_g_power, __pyx_n_s_power, __pyx_n_s_inu, __pyx_n_s_e, __pyx_n_s_op_value, __pyx_n_s_i_l, __pyx_n_s_name_h, __pyx_n_s_a_t, __pyx_n_s_dist_layers); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);
  __pyx_codeobj__9 = (PyObject*)__Pyx_PyCode_New(6, 0, 39, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__8, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_malio_cy_op_h_aha_cy_pyx, __pyx_n_s_aha_order_parameter_org, 339, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__9)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyList_Type_index.type = (PyObject*)&PyList_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initop_h_aha_cy(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initop_h_aha_cy(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_op_h_aha_cy(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_op_h_aha_cy(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_op_h_aha_cy(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'op_h_aha_cy' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_op_h_aha_cy(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("op_h_aha_cy", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_malio_cy__op_h_aha_cy) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "malio_cy.op_h_aha_cy")) {
      if (unlikely(PyDict_SetItemString(modules, "malio_cy.op_h_aha_cy", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "malio_cy/op_h_aha_cy.pyx":4
 * 
 * ### import math
 * from multiprocessing import Pool, Array             # <<<<<<<<<<<<<<
 * from scipy.fftpack import fft
 * import numpy as np
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Pool);
  __Pyx_GIVEREF(__pyx_n_s_Pool);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Pool);
  __Pyx_INCREF(__pyx_n_s_Array);
  __Pyx_GIVEREF(__pyx_n_s_Array);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_Array);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_multiprocessing, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Pool); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Pool, __pyx_t_1) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Array, __pyx_t_1) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":5
 * ### import math
 * from multiprocessing import Pool, Array
 * from scipy.fftpack import fft             # <<<<<<<<<<<<<<
 * import numpy as np
 * import misc_cy
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_fft);
  __Pyx_GIVEREF(__pyx_n_s_fft);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_fft);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_scipy_fftpack, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_fft); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fft, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":6
 * from multiprocessing import Pool, Array
 * from scipy.fftpack import fft
 * import numpy as np             # <<<<<<<<<<<<<<
 * import misc_cy
 * cimport cython
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":7
 * from scipy.fftpack import fft
 * import numpy as np
 * import misc_cy             # <<<<<<<<<<<<<<
 * cimport cython
 * from malio_cy_def cimport *
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_misc_cy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_misc_cy, __pyx_t_1) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":12
 * from libcpp.string cimport string
 * 
 * def histogram_normalize(hist):             # <<<<<<<<<<<<<<
 *     sum_hist = np.sum(hist)
 *     hist = [hist[i]/sum_hist for i in range(len(hist))]
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_11op_h_aha_cy_1histogram_normalize, NULL, __pyx_n_s_malio_cy_op_h_aha_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_histogram_normalize, __pyx_t_1) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":31
 * @cython.boundscheck(False)
 * @cython.cdivision(True)
 * def aha_order_parameter(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_11op_h_aha_cy_3aha_order_parameter, NULL, __pyx_n_s_malio_cy_op_h_aha_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_aha_order_parameter, __pyx_t_1) < 0) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":291
 * 
 * 
 * def calc_h_wrapper(args):             # <<<<<<<<<<<<<<
 *     [box_length, neighbor_list_ii,
 *         i_i, h_num, o_factor, oi_oj_ok] = args
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_11op_h_aha_cy_5calc_h_wrapper, NULL, __pyx_n_s_malio_cy_op_h_aha_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_calc_h_wrapper, __pyx_t_1) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":339
 * 
 * 
 * def aha_order_parameter_org(coord, direct, box_length, setting, neighbor_list, thread_num):             # <<<<<<<<<<<<<<
 *     a_times = setting['ave_times']
 *     b_times = setting['b_in_H']
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8malio_cy_11op_h_aha_cy_7aha_order_parameter_org, NULL, __pyx_n_s_malio_cy_op_h_aha_cy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_aha_order_parameter_org, __pyx_t_1) < 0) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "malio_cy/op_h_aha_cy.pyx":1
 * # -*- coding: utf-8 -*-             # <<<<<<<<<<<<<<
 * 
 * ### import math
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec")
 * cdef object __pyx_convert_vector_to_py___pyx_t_8malio_cy_12malio_cy_def_dvec(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init malio_cy.op_h_aha_cy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init malio_cy.op_h_aha_cy");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* pyobject_as_double */
static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
#if !CYTHON_USE_TYPE_SLOTS
    float_value = PyNumber_Float(obj);  if ((0)) goto bad;
#else
    PyNumberMethods *nb = Py_TYPE(obj)->tp_as_number;
    if (likely(nb) && likely(nb->nb_float)) {
        float_value = nb->nb_float(obj);
        if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {
            PyErr_Format(PyExc_TypeError,
                "__float__ returned non-float (type %.200s)",
                Py_TYPE(float_value)->tp_name);
            Py_DECREF(float_value);
            goto bad;
        }
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
#endif
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Declarations */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
